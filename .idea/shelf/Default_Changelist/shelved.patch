Index: app/src/main/res/layout/map_fragment.xml
===================================================================
--- app/src/main/res/layout/map_fragment.xml	(revision b65a8d4092c36b149b09627eb3ea7b43cf4e495d)
+++ app/src/main/res/layout/map_fragment.xml	(revision b65a8d4092c36b149b09627eb3ea7b43cf4e495d)
@@ -1,20 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:app="http://schemas.android.com/apk/res-auto"
-    xmlns:tools="http://schemas.android.com/tools"
-    android:layout_width="match_parent"
-    android:layout_height="match_parent"
-    android:background="#004D40"
-    tools:context=".fragments.MapFragment" >
-
-    <com.google.android.gms.maps.MapView
-        android:id="@+id/mapView"
-        android:layout_width="0dp"
-        android:layout_height="0dp"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintHorizontal_bias="0.5"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent"
-        app:layout_constraintVertical_bias="0.5" />
-</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/m3das/biomech/design/fragments/MapFragment.java
===================================================================
--- app/src/main/java/com/m3das/biomech/design/fragments/MapFragment.java	(revision b65a8d4092c36b149b09627eb3ea7b43cf4e495d)
+++ app/src/main/java/com/m3das/biomech/design/fragments/MapFragment.java	(revision b65a8d4092c36b149b09627eb3ea7b43cf4e495d)
@@ -1,40 +0,0 @@
-package com.m3das.biomech.design.fragments;
-
-import androidx.lifecycle.ViewModelProviders;
-
-import android.os.Bundle;
-
-import androidx.annotation.NonNull;
-import androidx.annotation.Nullable;
-import androidx.fragment.app.Fragment;
-
-import android.view.LayoutInflater;
-import android.view.View;
-import android.view.ViewGroup;
-
-import com.m3das.biomech.design.R;
-import com.m3das.biomech.design.viewmodels.MapViewModel;
-
-public class MapFragment extends Fragment {
-
-    private MapViewModel mViewModel;
-
-    public static MapFragment newInstance() {
-        return new MapFragment();
-    }
-
-    @Override
-    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container,
-                             @Nullable Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.map_fragment, container, false);
-
-    }
-
-    @Override
-    public void onActivityCreated(@Nullable Bundle savedInstanceState) {
-        super.onActivityCreated(savedInstanceState);
-        mViewModel = ViewModelProviders.of(this).get(MapViewModel.class);
-        // TODO: Use the ViewModel
-    }
-
-}
\ No newline at end of file
Index: app/src/main/java/com/m3das/biomech/design/uploadtoserver/RetroClient.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.m3das.biomech.design.uploadtoserver;\r\n\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.logging.HttpLoggingInterceptor;\r\nimport retrofit2.Retrofit;\r\nimport retrofit2.converter.gson.GsonConverterFactory;\r\n\r\npublic class RetroClient {\r\n\r\n\r\n    private static final String BASE_URL = \"http://192.168.1.4/m3dastest/\";\r\n    private static RetroClient myClient;\r\n    private Retrofit retrofit;\r\n\r\n    private RetroClient(){\r\n\r\n        HttpLoggingInterceptor loggingInterceptor = new HttpLoggingInterceptor();\r\n        loggingInterceptor.setLevel(HttpLoggingInterceptor.Level.HEADERS);\r\n        OkHttpClient okHttpClient = new OkHttpClient.Builder()\r\n                .addInterceptor(loggingInterceptor)\r\n                .build();\r\n\r\n        retrofit = new Retrofit.Builder()\r\n                .baseUrl(BASE_URL)\r\n                .addConverterFactory(GsonConverterFactory.create())\r\n                .client(okHttpClient)\r\n                .build();\r\n\r\n\r\n\r\n    }\r\n\r\n    public static synchronized RetroClient getInstance(){\r\n\r\n        if (myClient == null){\r\n            myClient = new RetroClient();\r\n\r\n        }\r\n        return myClient;\r\n    }\r\n\r\n//    public Api getMachinesApi(){\r\n//        return retrofit.create(MachinesApi.class);\r\n//    }\r\n\r\n    public MachinesApi getMachinesApi(){return  retrofit.create(MachinesApi.class);}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/m3das/biomech/design/uploadtoserver/RetroClient.java	(revision b65a8d4092c36b149b09627eb3ea7b43cf4e495d)
+++ app/src/main/java/com/m3das/biomech/design/uploadtoserver/RetroClient.java	(date 1605754368588)
@@ -8,14 +8,14 @@
 public class RetroClient {
 
 
-    private static final String BASE_URL = "http://192.168.1.4/m3dastest/";
+    private static final String BASE_URL = "http://10.0.68.200/m3dastest/";
     private static RetroClient myClient;
     private Retrofit retrofit;
 
-    private RetroClient(){
+    private RetroClient() {
 
         HttpLoggingInterceptor loggingInterceptor = new HttpLoggingInterceptor();
-        loggingInterceptor.setLevel(HttpLoggingInterceptor.Level.HEADERS);
+        loggingInterceptor.setLevel(HttpLoggingInterceptor.Level.BODY);
         OkHttpClient okHttpClient = new OkHttpClient.Builder()
                 .addInterceptor(loggingInterceptor)
                 .build();
@@ -25,23 +25,27 @@
                 .addConverterFactory(GsonConverterFactory.create())
                 .client(okHttpClient)
                 .build();
-
-
-
     }
 
-    public static synchronized RetroClient getInstance(){
+    public static synchronized RetroClient getInstance() {
 
-        if (myClient == null){
+        if (myClient == null) {
             myClient = new RetroClient();
 
         }
         return myClient;
     }
 
-//    public Api getMachinesApi(){
-//        return retrofit.create(MachinesApi.class);
-//    }
+    public MachinesApi getMachinesApi() {
+        return retrofit.create(MachinesApi.class);
+    }
+
+    public ImplementsApi getImplementApi() {
+        return retrofit.create(ImplementsApi.class);
+    }
 
-    public MachinesApi getMachinesApi(){return  retrofit.create(MachinesApi.class);}
+    public ProfilesApi getProfilesApi() {
+        return retrofit.create(ProfilesApi.class);
+    }
+
 }
Index: app/src/main/java/com/m3das/biomech/design/fragments/MapsFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/m3das/biomech/design/fragments/MapsFragment.java	(date 1606225783690)
+++ app/src/main/java/com/m3das/biomech/design/fragments/MapsFragment.java	(date 1606225783690)
@@ -0,0 +1,108 @@
+package com.m3das.biomech.design.fragments;
+
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.fragment.app.Fragment;
+import androidx.lifecycle.Observer;
+import androidx.lifecycle.ViewModelProvider;
+
+import android.os.Bundle;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+
+import com.google.android.gms.maps.CameraUpdate;
+import com.google.android.gms.maps.CameraUpdateFactory;
+import com.google.android.gms.maps.GoogleMap;
+import com.google.android.gms.maps.OnMapReadyCallback;
+import com.google.android.gms.maps.SupportMapFragment;
+import com.google.android.gms.maps.model.BitmapDescriptorFactory;
+import com.google.android.gms.maps.model.LatLng;
+import com.google.android.gms.maps.model.MarkerOptions;
+import com.m3das.biomech.design.R;
+import com.m3das.biomech.design.implementdb.Implements;
+import com.m3das.biomech.design.machinedb.Machines;
+import com.m3das.biomech.design.viewmodels.ImplementViewModel;
+import com.m3das.biomech.design.viewmodels.MachineListViewModel;
+
+import java.util.List;
+
+public class MapsFragment extends Fragment {
+
+    private ImplementViewModel implementViewModel;
+    private MachineListViewModel machineListViewModel;
+    LatLng locationImp;
+    LatLng locationMach;
+
+    private OnMapReadyCallback callback = new OnMapReadyCallback() {
+
+        /**
+         * Manipulates the map once available.
+         * This callback is triggered when the map is ready to be used.
+         * This is where we can add markers or lines, add listeners or move the camera.
+         * In this case, we just add a marker near Sydney, Australia.
+         * If Google Play services is not installed on the device, the user will be prompted to
+         * install it inside the SupportMapFragment. This method will only be triggered once the
+         * user has installed Google Play services and returned to the app.
+         */
+        @Override
+        public void onMapReady(GoogleMap googleMap) {
+
+            machineListViewModel = new ViewModelProvider(getActivity()).get(MachineListViewModel.class);
+            implementViewModel = new ViewModelProvider(getActivity()).get(ImplementViewModel.class);
+
+            implementViewModel.getAllImplements().observe(getActivity(), new Observer<List<Implements>>() {
+                @Override
+                public void onChanged(List<Implements> anImplements) {
+                    for (int i = 0; i < anImplements.size(); i++) {
+                        locationImp = new LatLng(Double.parseDouble(anImplements.get(i).getLatitude()), Double.parseDouble(anImplements.get(i).getLongitude()));
+                        googleMap.addMarker(new MarkerOptions()
+                                .position(locationImp)
+                                .title(anImplements.get(i).getImplement_qrcode())
+                                .snippet(anImplements.get(i).getUsed_on_machine())
+                                .icon(BitmapDescriptorFactory.fromResource(R.drawable.attachmentresized))
+                        );
+                    }
+                }
+            });
+
+            machineListViewModel.getAllMachines().observe(getActivity(), new Observer<List<Machines>>() {
+                @Override
+                public void onChanged(List<Machines> machines) {
+                    for (int i = 0; i < machines.size(); i++) {
+                        locationMach = new LatLng(Double.parseDouble(machines.get(i).getMachine_latitude()), Double.parseDouble(machines.get(i).getMachine_longitude()));
+                        googleMap.addMarker(new MarkerOptions()
+                                .position(locationMach)
+                                .title(machines.get(i).getMachine_qrcode())
+                                .snippet(machines.get(i).getResName())
+                                .icon(BitmapDescriptorFactory.fromResource(R.drawable.machineresized))
+                        );
+                        googleMap.animateCamera(CameraUpdateFactory.newLatLngZoom(locationMach, 15));
+                    }
+                }
+            });
+
+
+
+        }
+    };
+
+    @Nullable
+    @Override
+    public View onCreateView(@NonNull LayoutInflater inflater,
+                             @Nullable ViewGroup container,
+                             @Nullable Bundle savedInstanceState) {
+        View v = inflater.inflate(R.layout.maps_fragment, container, false);
+        return v;
+    }
+
+    @Override
+    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
+        super.onViewCreated(view, savedInstanceState);
+        SupportMapFragment mapFragment =
+                (SupportMapFragment) getChildFragmentManager().findFragmentById(R.id.map);
+        if (mapFragment != null) {
+            mapFragment.getMapAsync(callback);
+        }
+    }
+}
\ No newline at end of file
Index: app/src/debug/res/values/google_maps_api.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><resources>\r\n    <!--\r\n    TODO: Before you run your application, you need a Google Maps API key.\r\n\r\n    To get one, follow this link, follow the directions and press \"Create\" at the end:\r\n\r\n    https://console.developers.google.com/flows/enableapi?apiid=maps_android_backend&keyType=CLIENT_SIDE_ANDROID&r=4E:F5:CC:6A:84:AA:5D:98:8E:52:43:6C:53:BB:4C:3E:31:CC:C2:CB%3Bcom.m3das.biomech.design\r\n\r\n    You can also add your credentials to an existing key, using these values:\r\n\r\n    Package name:\r\n    com.m3das.biomech.design\r\n\r\n    SHA-1 certificate fingerprint:\r\n    4E:F5:CC:6A:84:AA:5D:98:8E:52:43:6C:53:BB:4C:3E:31:CC:C2:CB\r\n\r\n    Alternatively, follow the directions here:\r\n    https://developers.google.com/maps/documentation/android/start#get-key\r\n\r\n    Once you have your key (it starts with \"AIza\"), replace the \"google_maps_key\"\r\n    string in this file.\r\n    -->\r\n    <string name=\"google_maps_key\" templateMergeStrategy=\"preserve\" translatable=\"false\">YOURKEYHERE</string> <!--TODO YOUR KEY HERE -->\r\n</resources>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/debug/res/values/google_maps_api.xml	(revision b65a8d4092c36b149b09627eb3ea7b43cf4e495d)
+++ app/src/debug/res/values/google_maps_api.xml	(date 1603765273345)
@@ -20,5 +20,5 @@
     Once you have your key (it starts with "AIza"), replace the "google_maps_key"
     string in this file.
     -->
-    <string name="google_maps_key" templateMergeStrategy="preserve" translatable="false">YOURKEYHERE</string> <!--TODO YOUR KEY HERE -->
+    <string name="google_maps_key" templateMergeStrategy="preserve" translatable="false">AIzaSyAgEal3Wf62nujVYD5ZDRrusEducr_5esQ</string> <!--TODO YOUR KEY HERE -->
 </resources>
Index: app/src/main/res/layout/maps_fragment.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/maps_fragment.xml	(date 1606093994101)
+++ app/src/main/res/layout/maps_fragment.xml	(date 1606093994101)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<fragment xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/map"
+    android:name="com.google.android.gms.maps.SupportMapFragment"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".fragments.MapsFragment" />
\ No newline at end of file
Index: app/src/main/java/com/m3das/biomech/design/ViewMachines.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.m3das.biomech.design;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.os.Bundle;\r\nimport android.widget.TextView;\r\n\r\npublic class ViewMachines extends AppCompatActivity {\r\nprivate TextView tvOutput;\r\nprivate String machList;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.view_machines_activity);\r\n\r\n        tvOutput = findViewById(R.id.tvListForMachines);\r\n        machList = Variable.getMachList();\r\n\r\n        tvOutput.setText(machList);\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/m3das/biomech/design/ViewMachines.java	(revision b65a8d4092c36b149b09627eb3ea7b43cf4e495d)
+++ app/src/main/java/com/m3das/biomech/design/ViewMachines.java	(date 1605577786276)
@@ -17,6 +17,15 @@
         machList = Variable.getMachList();
 
         tvOutput.setText(machList);
+        if (isNullOrEmpty(machList.trim())) {
+            machList = "No machines please add an implement first";
+        }
+        tvOutput.setText(machList);
+
 
     }
+
+    public static boolean isNullOrEmpty(String str) {
+        return str == null || str.isEmpty();
+    }
 }
\ No newline at end of file
Index: app/src/main/res/layout/add_implement_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<ScrollView xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".AddImplementActivity\">\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:id=\"@+id/constraintLayoutImplement1\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\">\r\n\r\n        <Button\r\n            android:id=\"@+id/btnSaveImp\"\r\n            android:layout_width=\"66dp\"\r\n            android:layout_height=\"29dp\"\r\n            android:text=\"SAVE\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/edtQRCodeImp\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:ems=\"10\"\r\n            android:hint=\"QR CODE\"\r\n            android:inputType=\"text\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/tvSelectMachine\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/spinImplementType\" />\r\n\r\n        <ImageButton\r\n            android:id=\"@+id/btnScanQRCodeImp\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"0dp\"\r\n            app:layout_constraintBottom_toBottomOf=\"@+id/edtQRCodeImp\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toEndOf=\"@+id/edtQRCodeImp\"\r\n            app:layout_constraintTop_toTopOf=\"@+id/edtQRCodeImp\"\r\n            app:srcCompat=\"@drawable/ic_outline_center_focus_strong_24\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvImplementType\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"32dp\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:text=\"Select Implement Type\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <Spinner\r\n            android:id=\"@+id/spinImplementType\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"8dp\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:entries=\"@array/implements1\"\r\n            app:layout_constraintEnd_toEndOf=\"@+id/btnScanQRCodeImp\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/tvImplementType\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tvImplementType\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvSelectMachine\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:text=\"Machine Using this Implement\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/tvImplementType\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/edtQRCodeImp\" />\r\n\r\n        <Spinner\r\n            android:id=\"@+id/spinMachineUsing\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            app:layout_constraintEnd_toEndOf=\"@+id/btnScanQRCodeImp\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/spinImplementType\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tvSelectMachine\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvOperations2\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:text=\"Operations\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/tvSelectMachine\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/spinMachineUsing\" />\r\n\r\n        <CheckBox\r\n            android:id=\"@+id/cbLandClearing\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"LAND CLEARING\"\r\n            app:layout_constraintEnd_toEndOf=\"@+id/cbPrePlanting\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/spinMachineUsing\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tvOperations2\" />\r\n\r\n        <CheckBox\r\n            android:id=\"@+id/cbPrePlanting\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"PRE-PLANTING\"\r\n            app:layout_constraintEnd_toEndOf=\"@+id/cbPlanting\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/cbLandClearing\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/cbLandClearing\" />\r\n\r\n        <CheckBox\r\n            android:id=\"@+id/cbPlanting\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"PLANTING\"\r\n            app:layout_constraintEnd_toEndOf=\"@+id/cbFertilizer\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/cbPrePlanting\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/cbPrePlanting\" />\r\n\r\n        <CheckBox\r\n            android:id=\"@+id/cbFertilizer\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"FERTILIZER APPLICATION\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/cbPlanting\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/cbPlanting\" />\r\n\r\n        <CheckBox\r\n            android:id=\"@+id/cbPesticide\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"PESTICIDE APPLICATION\"\r\n            app:layout_constraintEnd_toEndOf=\"@+id/cbFertilizer\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/cbFertilizer\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/cbFertilizer\" />\r\n\r\n        <CheckBox\r\n            android:id=\"@+id/cbIrriDrain\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"IRRIGATION &amp; DRAINAGE\"\r\n            app:layout_constraintEnd_toEndOf=\"@+id/cbPesticide\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/cbPesticide\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/cbPesticide\" />\r\n\r\n        <CheckBox\r\n            android:id=\"@+id/cbCultivation\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"CULTIVATION\"\r\n            app:layout_constraintEnd_toEndOf=\"@+id/cbIrriDrain\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/cbIrriDrain\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/cbIrriDrain\" />\r\n\r\n        <CheckBox\r\n            android:id=\"@+id/cbRatooning\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"RATOONING\"\r\n            app:layout_constraintEnd_toEndOf=\"@+id/cbCultivation\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/cbCultivation\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/cbCultivation\" />\r\n\r\n        <CheckBox\r\n            android:id=\"@+id/cbHarvest\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"HARVEST\"\r\n            app:layout_constraintEnd_toEndOf=\"@+id/cbRatooning\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/cbRatooning\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/cbRatooning\" />\r\n\r\n        <CheckBox\r\n            android:id=\"@+id/cbPostHarvest\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"POST HARVEST\"\r\n            app:layout_constraintEnd_toEndOf=\"@+id/cbHarvest\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/cbHarvest\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/cbHarvest\" />\r\n\r\n        <CheckBox\r\n            android:id=\"@+id/cbHauling\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"HAULING\"\r\n            app:layout_constraintEnd_toEndOf=\"@+id/cbPostHarvest\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/cbPostHarvest\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/cbPostHarvest\" />\r\n\r\n\r\n        <EditText\r\n            android:id=\"@+id/edtTotalServiceAreaMain\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"32dp\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:ems=\"10\"\r\n            android:hint=\"Total Service Area\"\r\n            android:inputType=\"number\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/cbHauling\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvHaMain\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"8dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"In hectares (ha)\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtTotalServiceAreaMain\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/edtTotalServiceAreaMain\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/edtHoursPDayMain\"\r\n            android:layout_width=\"230dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:ems=\"10\"\r\n            android:hint=\"Average Operating Hours\"\r\n            android:inputType=\"number\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtTotalServiceAreaMain\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tvHaMain\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvHoursPDayMain\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"In Hours per Day\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/tvHaMain\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/edtHoursPDayMain\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/edtDaysPSeasonMain\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:ems=\"10\"\r\n            android:hint=\"Average Operating Days\"\r\n            android:inputType=\"number\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtHoursPDayMain\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tvHoursPDayMain\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvDaysPSeasonMain\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"In Days Per Season\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/tvHoursPDayMain\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/edtDaysPSeasonMain\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/edtEffectiveAreaAccompMain\"\r\n            android:layout_width=\"250dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:ems=\"10\"\r\n            android:gravity=\"left\"\r\n            android:hint=\"Effective Area Accomplished\"\r\n            android:inputType=\"number\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtDaysPSeasonMain\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tvDaysPSeasonMain\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvHaEAMain\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"In hectares (ha)\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/tvDaysPSeasonMain\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/edtEffectiveAreaAccompMain\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/edtTimeUsedDuringOpMain\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:ems=\"10\"\r\n            android:gravity=\"left\"\r\n            android:hint=\"Time Used in Operation\"\r\n            android:inputType=\"number\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtEffectiveAreaAccompMain\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tvHaEAMain\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvHoursPDayOpMain\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"In Hours per Day\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/tvHaEAMain\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/edtTimeUsedDuringOpMain\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvFieldCapacityMain\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:text=\"Field Capacity: \"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtTimeUsedDuringOpMain\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tvHoursPDayOpMain\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvFieldCapacityResultMain\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"8dp\"\r\n            android:text=\"TextView\"\r\n            app:layout_constraintBottom_toBottomOf=\"@+id/tvFieldCapacityMain\"\r\n            app:layout_constraintStart_toEndOf=\"@+id/tvFieldCapacityMain\"\r\n            app:layout_constraintTop_toTopOf=\"@+id/tvFieldCapacityMain\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvTypeofPlant\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"32dp\"\r\n            android:layout_marginTop=\"108dp\"\r\n            android:text=\"Type of Planter\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/tvFieldCapacityMain\" />\r\n\r\n        <Spinner\r\n            android:id=\"@+id/spinTypeOfPlanterPlant\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"8dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:entries=\"@array/type_of_planter\"\r\n            app:layout_constraintEnd_toEndOf=\"@+id/edtNumberofRowsPlant\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/tvTypeofPlant\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tvTypeofPlant\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/edtNumberofRowsPlant\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:ems=\"10\"\r\n            android:hint=\"Number of Rows\"\r\n            android:inputType=\"number\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/tvTypeofPlant\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/spinTypeOfPlanterPlant\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/edtDistanceOfPlantMatPlant\"\r\n            android:layout_width=\"260dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:ems=\"10\"\r\n            android:hint=\"Distance of Planting Materials\"\r\n            android:inputType=\"number\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtNumberofRowsPlant\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/edtNumberofRowsPlant\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvDistancePlant\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"8dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"Within the Row in Centimeters (cm)\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtDistanceOfPlantMatPlant\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/edtDistanceOfPlantMatPlant\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/edtTotalServiceAreaPlant\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"32dp\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:ems=\"10\"\r\n            android:hint=\"Total Service Area\"\r\n            android:inputType=\"number\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tvDistancePlant\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvHaPlant\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"8dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"In hectares (ha)\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtTotalServiceAreaPlant\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/edtTotalServiceAreaPlant\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/edtHoursPDayPlant\"\r\n            android:layout_width=\"230dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:ems=\"10\"\r\n            android:hint=\"Average Operating Hours\"\r\n            android:inputType=\"number\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtTotalServiceAreaPlant\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tvHaPlant\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvHoursPDayPlant\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"In Hours per Day\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/tvHaPlant\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/edtHoursPDayPlant\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/edtDaysPSeasonPlant\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:ems=\"10\"\r\n            android:hint=\"Average Operating Days\"\r\n            android:inputType=\"number\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtHoursPDayPlant\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tvHoursPDayPlant\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvDaysPSeasonPlant\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"In Days Per Season\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/tvHoursPDayPlant\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/edtDaysPSeasonPlant\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/edtEffectiveAreaAccompPlant\"\r\n            android:layout_width=\"250dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:ems=\"10\"\r\n            android:gravity=\"left\"\r\n            android:hint=\"Effective Area Accomplished\"\r\n            android:inputType=\"number\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtDaysPSeasonPlant\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tvDaysPSeasonPlant\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvHaEAPlant\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"In hectares (ha)\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/tvDaysPSeasonPlant\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/edtEffectiveAreaAccompPlant\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/edtTimeUsedDuringOpPlant\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:ems=\"10\"\r\n            android:gravity=\"left\"\r\n            android:hint=\"Time Used in Operation\"\r\n            android:inputType=\"number\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtEffectiveAreaAccompPlant\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tvHaEAPlant\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvHoursPDayOpPlant\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"In Hours per Day\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/tvHaEAPlant\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/edtTimeUsedDuringOpPlant\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvFieldCapacityPlant\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:text=\"Field Capacity: \"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtTimeUsedDuringOpPlant\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tvHoursPDayOpPlant\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvFieldCapacityResultPlant\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"8dp\"\r\n            android:text=\"TextView\"\r\n            app:layout_constraintBottom_toBottomOf=\"@+id/tvFieldCapacityPlant\"\r\n            app:layout_constraintStart_toEndOf=\"@+id/tvFieldCapacityPlant\"\r\n            app:layout_constraintTop_toTopOf=\"@+id/tvFieldCapacityPlant\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/edtTotalServiceAreaFert\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"32dp\"\r\n            android:layout_marginTop=\"108dp\"\r\n            android:ems=\"10\"\r\n            android:hint=\"Total Service Area\"\r\n            android:inputType=\"number\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/tvFieldCapacityResultPlant\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvHaFert\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"8dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"In hectares (ha)\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtTotalServiceAreaFert\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/edtTotalServiceAreaFert\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/edtHoursPDayFert\"\r\n            android:layout_width=\"230dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:ems=\"10\"\r\n            android:hint=\"Average Operating Hours\"\r\n            android:inputType=\"number\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtTotalServiceAreaFert\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/tvHaFert\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvHoursPDayFert\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"In Hours per Day\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/tvHaFert\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/edtHoursPDayFert\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/edtDaysPSeasonFert\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:ems=\"10\"\r\n            android:hint=\"Average Operating Days\"\r\n            android:inputType=\"number\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtHoursPDayFert\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/tvHoursPDayFert\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvDaysPSeasonFert\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"In Days Per Season\"\r\n            app:layout_constraintStart_toStartOf=\"@id/tvHoursPDayFert\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/edtDaysPSeasonFert\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/edtEffectiveAreaAccompFert\"\r\n            android:layout_width=\"250dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:ems=\"10\"\r\n            android:gravity=\"left\"\r\n            android:hint=\"Effective Area Accomplished\"\r\n            android:inputType=\"number\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtDaysPSeasonFert\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/tvDaysPSeasonFert\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvHaEAFert\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"In hectares (ha)\"\r\n            app:layout_constraintStart_toStartOf=\"@id/tvDaysPSeasonFert\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/edtEffectiveAreaAccompFert\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/edtTimeUsedDuringOpFert\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:ems=\"10\"\r\n            android:gravity=\"left\"\r\n            android:hint=\"Time Used in Operation\"\r\n            android:inputType=\"number\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtEffectiveAreaAccompFert\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tvHaEAFert\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvHoursPDayOpFert\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"In Hours per Day\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/tvHaEAFert\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/edtTimeUsedDuringOpFert\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvFieldCapacityFert\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"0dp\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:text=\"Field Capacity: \"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtTimeUsedDuringOpFert\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tvHoursPDayOpFert\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvFieldCapacityResultFert\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"8dp\"\r\n            android:text=\"TextView\"\r\n            app:layout_constraintBottom_toBottomOf=\"@+id/tvFieldCapacityFert\"\r\n            app:layout_constraintStart_toEndOf=\"@+id/tvFieldCapacityFert\"\r\n            app:layout_constraintTop_toTopOf=\"@+id/tvFieldCapacityFert\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/edtWeightOfFertFert\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:ems=\"10\"\r\n            android:hint=\"Weight of Fertilizer\"\r\n            android:inputType=\"number\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtTimeUsedDuringOpFert\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tvFieldCapacityFert\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvWeightFert\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"In kilograms (kg)\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/tvHoursPDayOpFert\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/edtWeightOfFertFert\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvDeliveryRateFert\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"0dp\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:text=\"Delivery Rate: \"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtWeightOfFertFert\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tvWeightFert\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvDeliveryRateResultFert\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"8dp\"\r\n            android:text=\"TextView\"\r\n            app:layout_constraintBottom_toBottomOf=\"@+id/tvDeliveryRateFert\"\r\n            app:layout_constraintStart_toEndOf=\"@+id/tvDeliveryRateFert\"\r\n            app:layout_constraintTop_toTopOf=\"@+id/tvDeliveryRateFert\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/edtTotalServiceAreaHarvest\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"32dp\"\r\n            android:layout_marginTop=\"108dp\"\r\n            android:ems=\"10\"\r\n            android:hint=\"Total Service Area\"\r\n            android:inputType=\"number\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/tvDeliveryRateFert\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvHaHarvest\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"8dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"In hectares (ha)\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtTotalServiceAreaHarvest\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/edtTotalServiceAreaHarvest\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/edtHoursPDayHarvest\"\r\n            android:layout_width=\"230dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:ems=\"10\"\r\n            android:hint=\"Average Operating Hours\"\r\n            android:inputType=\"number\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtTotalServiceAreaHarvest\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tvHaHarvest\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvHoursPDayHarvest\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"In Hours per Day\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/tvHaHarvest\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/edtHoursPDayHarvest\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/edtDaysPSeasonHarvest\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:ems=\"10\"\r\n            android:hint=\"Average Operating Days\"\r\n            android:inputType=\"number\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtHoursPDayHarvest\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tvHoursPDayHarvest\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvDaysPSeasonHarvest\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"In Days Per Season\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/tvHoursPDayHarvest\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/edtDaysPSeasonHarvest\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/edtEffectiveAreaAccompHarvest\"\r\n            android:layout_width=\"250dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:ems=\"10\"\r\n            android:gravity=\"left\"\r\n            android:hint=\"Effective Area Accomplished\"\r\n            android:inputType=\"number\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtDaysPSeasonHarvest\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tvDaysPSeasonHarvest\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvHaEAHarvest\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"In hectares (ha)\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/tvDaysPSeasonHarvest\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/edtEffectiveAreaAccompHarvest\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/edtTimeUsedDuringOpHarvest\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:ems=\"10\"\r\n            android:gravity=\"left\"\r\n            android:hint=\"Time Used in Operation\"\r\n            android:inputType=\"number\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtEffectiveAreaAccompHarvest\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tvHaEAHarvest\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvHoursPDayOpHarvest\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"In Hours per Day\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/tvHaEAHarvest\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/edtTimeUsedDuringOpHarvest\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvFieldCapacityHarvest\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:text=\"Field Capacity: \"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtTimeUsedDuringOpHarvest\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tvHoursPDayOpHarvest\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvFieldCapacityResultHarvest\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"8dp\"\r\n            android:text=\"TextView\"\r\n            app:layout_constraintBottom_toBottomOf=\"@id/tvFieldCapacityHarvest\"\r\n            app:layout_constraintStart_toEndOf=\"@+id/tvFieldCapacityHarvest\"\r\n            app:layout_constraintTop_toTopOf=\"@+id/tvFieldCapacityHarvest\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/edtAveYieldHarvest\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:hint=\"Average Yield\"\r\n            app:layout_constraintEnd_toEndOf=\"@+id/edtTimeUsedDuringOpHarvest\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/tvFieldCapacityHarvest\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tvFieldCapacityHarvest\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvTonCannesPHaHarvest\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"In ton of cannes per hectare (ton/ha)\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/tvHoursPDayOpHarvest\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/edtAveYieldHarvest\" />\r\n\r\n\r\n        <EditText\r\n            android:id=\"@+id/edtTotalServiceAreaGrab\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"32dp\"\r\n            android:layout_marginTop=\"108dp\"\r\n            android:ems=\"10\"\r\n            android:hint=\"Total Service Area\"\r\n            android:inputType=\"number\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/tvTonCannesPHaHarvest\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvHaGrab\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"8dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"In hectares (ha)\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtTotalServiceAreaGrab\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/edtTotalServiceAreaGrab\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/edtHoursPDayGrab\"\r\n            android:layout_width=\"230dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:ems=\"10\"\r\n            android:hint=\"Average Operating Hours\"\r\n            android:inputType=\"number\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtTotalServiceAreaGrab\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tvHaGrab\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvHoursPDayGrab\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"In Hours per Day\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/tvHaGrab\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/edtHoursPDayGrab\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/edtDaysPSeasonGrab\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:ems=\"10\"\r\n            android:hint=\"Average Operating Days\"\r\n            android:inputType=\"number\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtHoursPDayGrab\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tvHoursPDayGrab\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvDaysPSeasonGrab\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"In Days Per Season\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/tvHoursPDayGrab\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/edtDaysPSeasonGrab\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/edtLoadCapacityGrab\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:ems=\"10\"\r\n            android:hint=\"Loading Capacity\"\r\n            android:inputType=\"number\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtDaysPSeasonGrab\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tvDaysPSeasonGrab\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/edtNumberofLoadsGrab\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:ems=\"10\"\r\n            android:hint=\"Number of Loads\"\r\n            android:inputType=\"number\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtLoadCapacityGrab\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/edtLoadCapacityGrab\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvLoadPHaGrab\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"In Loads per hectares (load/ha)\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/tvDaysPSeasonGrab\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/edtNumberofLoadsGrab\" />\r\n\r\n\r\n        <EditText\r\n            android:id=\"@+id/edtTotalServiceAreaDitch\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"32dp\"\r\n            android:layout_marginTop=\"108dp\"\r\n            android:ems=\"10\"\r\n            android:hint=\"Total Service Area\"\r\n            android:inputType=\"number\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/tvLoadPHaGrab\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvHaDitch\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"8dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"In hectares (ha)\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtTotalServiceAreaDitch\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/edtTotalServiceAreaDitch\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/edtHoursPDayDitch\"\r\n            android:layout_width=\"230dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:ems=\"10\"\r\n            android:hint=\"Average Operating Hours\"\r\n            android:inputType=\"number\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtTotalServiceAreaDitch\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tvHaDitch\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvHoursPDayDitch\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"In Hours per Day\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/tvHaDitch\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/edtHoursPDayDitch\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/edtDaysPSeasonDitch\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:ems=\"10\"\r\n            android:hint=\"Average Operating Days\"\r\n            android:inputType=\"number\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtHoursPDayDitch\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tvHoursPDayDitch\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvDaysPSeasonDitch\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:text=\"In Days Per Season\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/tvHoursPDayDitch\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/edtDaysPSeasonDitch\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/edtDepthOfCutDitch\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:ems=\"10\"\r\n            android:hint=\"Depth of Cut\"\r\n            android:inputType=\"number\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/edtDaysPSeasonDitch\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tvDaysPSeasonDitch\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvDepthCutDitch\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"In centimeters (cm)\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/tvDaysPSeasonDitch\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/edtDepthOfCutDitch\" />\r\n\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvYearAcquiredImp\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"108dp\"\r\n            android:text=\"Year Acquired\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/tvOperations2\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tvDepthCutDitch\" />\r\n\r\n        <Spinner\r\n            android:id=\"@+id/spinYearAcquiredImp\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:hint=\"Year Acquired\"\r\n            app:layout_constraintEnd_toEndOf=\"@+id/cbHauling\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/cbHauling\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tvYearAcquiredImp\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvConditionAcquired\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:text=\"Condition\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/tvOperations2\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/spinYearAcquiredImp\" />\r\n\r\n        <ImageButton\r\n            android:id=\"@+id/btnGetLocationImp\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            app:layout_constraintEnd_toEndOf=\"@+id/btnGalleryImp\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/btnGalleryImp\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/btnGalleryImp\"\r\n            app:srcCompat=\"@drawable/ic_outline_map_24\" />\r\n\r\n        <Spinner\r\n            android:id=\"@+id/spinConditionImp\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:entries=\"@array/condition\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/spinMachineUsing\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tvConditionAcquired\" />\r\n\r\n        <Spinner\r\n            android:id=\"@+id/spinLocationImp\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:entries=\"@array/location\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/spinConditionImp\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/textView20\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/textView20\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:text=\"Location\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/tvConditionAcquired\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/spinConditionImp\" />\r\n\r\n        <com.androidbuts.multispinnerfilter.SingleSpinnerSearch\r\n            android:id=\"@+id/singlespinProvincesImp\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            app:layout_constraintEnd_toEndOf=\"@+id/spinConditionImp\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/spinLocationImp\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/spinLocationImp\" />\r\n\r\n        <com.androidbuts.multispinnerfilter.SingleSpinnerSearch\r\n            android:id=\"@+id/singlespinMunicipalitiesImp\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            app:layout_constraintEnd_toEndOf=\"@+id/singlespinProvincesImp\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/singlespinProvincesImp\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/singlespinProvincesImp\" />\r\n\r\n        <com.androidbuts.multispinnerfilter.SingleSpinnerSearch\r\n            android:id=\"@+id/singlespinBarangaysImp\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            app:layout_constraintEnd_toEndOf=\"@+id/singlespinProvincesImp\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/singlespinProvincesImp\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/singlespinMunicipalitiesImp\"/>\r\n\r\n        <TextView\r\n            android:id=\"@+id/textView10\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"Latitude:\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/imgMachineImp\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/btnGetLocationImp\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvLatitudeImp\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"24dp\"\r\n            android:text=\"TextView\"\r\n            app:layout_constraintStart_toEndOf=\"@id/textView10\"\r\n            app:layout_constraintTop_toTopOf=\"@+id/textView10\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/textView11\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:text=\"Longitude\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/textView10\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/textView10\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvLongitudeImp\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"TextView\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/tvLatitudeImp\"\r\n            app:layout_constraintTop_toTopOf=\"@+id/textView11\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/imgMachineImp\"\r\n            android:layout_width=\"300dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"32dp\"\r\n            android:scaleType=\"fitCenter\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/singlespinBarangaysImp\"\r\n            app:srcCompat=\"@drawable/ic_launcher_background\" />\r\n\r\n        <ImageButton\r\n            android:id=\"@+id/btnCameraImp\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            app:layout_constraintStart_toStartOf=\"@+id/imgMachineImp\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/imgMachineImp\"\r\n            app:srcCompat=\"@drawable/ic_outline_camera_alt_24\" />\r\n\r\n        <ImageButton\r\n            android:id=\"@+id/btnGalleryImp\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"8dp\"\r\n            app:layout_constraintEnd_toEndOf=\"@+id/imgMachineImp\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/imgMachineImp\"\r\n            app:srcCompat=\"@drawable/ic_outline_photo_album_24\" />\r\n\r\n\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n</ScrollView>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/add_implement_activity.xml	(revision b65a8d4092c36b149b09627eb3ea7b43cf4e495d)
+++ app/src/main/res/layout/add_implement_activity.xml	(date 1605583028363)
@@ -303,11 +303,13 @@
 
         <TextView
             android:id="@+id/tvFieldCapacityResultMain"
-            android:layout_width="wrap_content"
+            android:layout_width="0dp"
             android:layout_height="wrap_content"
             android:layout_marginStart="8dp"
+            android:ellipsize="end"
             android:text="TextView"
             app:layout_constraintBottom_toBottomOf="@+id/tvFieldCapacityMain"
+            app:layout_constraintEnd_toEndOf="@+id/edtEffectiveAreaAccompMain"
             app:layout_constraintStart_toEndOf="@+id/tvFieldCapacityMain"
             app:layout_constraintTop_toTopOf="@+id/tvFieldCapacityMain" />
 
Index: app/src/main/java/com/m3das/biomech/design/PageAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.m3das.biomech.design;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentPagerAdapter;\r\nimport com.m3das.biomech.design.fragments.DataFragment;\r\nimport com.m3das.biomech.design.fragments.ProfileFragment;\r\nimport com.m3das.biomech.design.fragments.MachineListFragment;\r\nimport com.m3das.biomech.design.fragments.MapFragment;\r\nimport com.m3das.biomech.design.fragments.ImplementsFragment;\r\n\r\npublic class PageAdapter extends FragmentPagerAdapter {\r\nprivate final int numTabs;\r\n\r\n    public PageAdapter(@NonNull FragmentManager fm, int numOfTabs) {\r\n        super(fm, numOfTabs);\r\n        this.numTabs = numOfTabs;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public Fragment getItem(int position) {\r\n        switch (position) {\r\n            case 0:\r\n                return new ProfileFragment();\r\n            case 1:\r\n                return new MachineListFragment();\r\n            case 2:\r\n                return new ImplementsFragment();\r\n            case 3:\r\n                return new DataFragment();\r\n            case 4:\r\n                return new MapFragment();\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public int getCount() {\r\n        return numTabs;\r\n    }\r\n\r\n    @Override\r\n    public int getItemPosition(@NonNull Object object) {\r\n        return POSITION_NONE;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/m3das/biomech/design/PageAdapter.java	(revision b65a8d4092c36b149b09627eb3ea7b43cf4e495d)
+++ app/src/main/java/com/m3das/biomech/design/PageAdapter.java	(date 1606094200251)
@@ -5,9 +5,9 @@
 import androidx.fragment.app.FragmentManager;
 import androidx.fragment.app.FragmentPagerAdapter;
 import com.m3das.biomech.design.fragments.DataFragment;
+import com.m3das.biomech.design.fragments.MapsFragment;
 import com.m3das.biomech.design.fragments.ProfileFragment;
 import com.m3das.biomech.design.fragments.MachineListFragment;
-import com.m3das.biomech.design.fragments.MapFragment;
 import com.m3das.biomech.design.fragments.ImplementsFragment;
 
 public class PageAdapter extends FragmentPagerAdapter {
@@ -31,7 +31,7 @@
             case 3:
                 return new DataFragment();
             case 4:
-                return new MapFragment();
+                return new MapsFragment();
             default:
                 return null;
         }
Index: app/src/main/java/com/m3das/biomech/design/uploadtoserver/ImplementsApi.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/m3das/biomech/design/uploadtoserver/ImplementsApi.java	(date 1605672022419)
+++ app/src/main/java/com/m3das/biomech/design/uploadtoserver/ImplementsApi.java	(date 1605672022419)
@@ -0,0 +1,90 @@
+package com.m3das.biomech.design.uploadtoserver;
+
+import retrofit2.Call;
+import retrofit2.http.Field;
+import retrofit2.http.FormUrlEncoded;
+import retrofit2.http.POST;
+
+public interface ImplementsApi {
+
+    @FormUrlEncoded
+    @POST("upload_implements.php")
+    Call<ResponsePojo> uploadImplements(
+            @Field("impTypePost") String implementType,
+            @Field("impQRPost") String implementQR,
+            @Field("impDateSurveyPost") String dateSurvey,
+            @Field("impUsedOnMachPost") String implementUsedOnMachine,
+            @Field("impUsedOnMachCompPost") String implementUsedOnMachineComplete,
+            @Field("impLandClearPost") String implementLandClearing,
+            @Field("impPrePlantPost") String implementPrePlant,
+            @Field("impPlantPost") String implementPlanting,
+            @Field("impFertAppPost") String implementFertApp,
+            @Field("impPestAppPost") String implementPestApp,
+            @Field("impIrriDrainPost") String implementIrriDrain,
+            @Field("impCultPost") String implementCult,
+            @Field("impRatoonPost") String implementRatoon,
+            @Field("impHarvestPost") String implementHarvest,
+            @Field("impPostHarvestPost") String implementPostHarvest,
+            @Field("impHaulPost") String implementHaul,
+
+            @Field("impTSAMainPost") String implementTSAMain,
+            @Field("impAOHMainPost") String implementAveOpHoursMain,
+            @Field("impAODMainPost") String implementAveOpDaysMain,
+            @Field("impEFFAAMainPost") String implementEFFAAMain,
+            @Field("impTUDOpMaintPost") String implementTUDOpMain,
+            @Field("impFieldCapMainPost") String implementFieldCapMain,
+
+            @Field("impTypePlantPost") String implementTypePlant,
+            @Field("impNumRowsPlantPost") String implementNumRowsPlant,
+            @Field("impDistMatPlantPost") String implementDistMatPlant,
+            @Field("impTSAPlantPost") String implementTSAPlant,
+            @Field("impAOHPlantPost") String implementAveOpHoursPlant,
+            @Field("impAODPlantPost") String implementAveOpDaysPlant,
+            @Field("impEFFAAPlantPost") String implementEFFAAPlant,
+            @Field("impTUDOpPlantPost") String implementTUDOpPlant,
+            @Field("impFieldCapPlantPost") String implementFieldCapPlant,
+
+            @Field("impTSAFertPost") String implementTSAFert,
+            @Field("impAOHFertPost") String implementAveOpHoursFert,
+            @Field("impAODFertPost") String implementAveOpDaysFert,
+            @Field("impEFFAAFertPost") String implementEFFAAFert,
+            @Field("impTUDOpFertPost") String implementTUDOpFert,
+            @Field("impFieldCapFertPost") String implementFieldCapFert,
+            @Field("impWeightFertPost") String implementWeightFert,
+            @Field("impDelRateFertPost") String implementDelRateFert,
+
+            @Field("impTSAHarvestPost") String implementTSAHarvest,
+            @Field("impAOHHarvestPost") String implementAveOpHoursHarvest,
+            @Field("impAODHarvestPost") String implementAveOpDaysHarvest,
+            @Field("impEFFAAHarvestPost") String implementEFFAAHarvest,
+            @Field("impTUDOpHarvestPost") String implementTUDOpHarvest,
+            @Field("impFieldCapHarvestPost") String implementFieldCapHarvest,
+            @Field("impAveYieldHarvestPost") String implementAveYieldHarvest,
+
+            @Field("impTSAGrabPost") String implementTSAGrab,
+            @Field("impAOHGrabPost") String implementAveOpHoursGrab,
+            @Field("impAODGrabPost") String implementAveOpDaysGrab,
+            @Field("impEFFAAGrabPost") String implementEFFAAGrab,
+            @Field("impLoadCapGrabPost") String implementLoadCapGrab,
+            @Field("impNumLoadsGrabPost") String implementNumLoadsGrab,
+
+            @Field("impTSADitchPost") String implementTSADitch,
+            @Field("impAOHDitchPost") String implementAveOpHoursDitch,
+            @Field("impAODDitchPost") String implementAveOpDaysDitch,
+            @Field("impDepthCutDitchPost") String implementDepthCutDitch,
+
+            @Field("impYearAcqPost") String implementYearAcq,
+            @Field("impConditionPost") String implementCondition,
+            @Field("impLocationPost") String implementLocation,
+            @Field("impProvPost") String implementProvince,
+            @Field("impMunPost") String implementMunicipality,
+            @Field("impBrgyPost") String implementBrgy,
+            @Field("impImageBase64Post") String implementImgBase64,
+            @Field("impLatPost") String implementLatitude,
+            @Field("impLongPost") String implementLongitude,
+            @Field("impAccPost") String implementAccuracy,
+            @Field("impEnumeratorCodePost")String enumCode
+
+    );
+
+}
\ No newline at end of file
Index: app/src/main/java/com/m3das/biomech/design/uploadtoserver/ProfilesApi.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/m3das/biomech/design/uploadtoserver/ProfilesApi.java	(date 1605750262665)
+++ app/src/main/java/com/m3das/biomech/design/uploadtoserver/ProfilesApi.java	(date 1605750262665)
@@ -0,0 +1,28 @@
+package com.m3das.biomech.design.uploadtoserver;
+
+import retrofit2.Call;
+import retrofit2.http.Field;
+import retrofit2.http.FormUrlEncoded;
+import retrofit2.http.POST;
+
+public interface ProfilesApi {
+
+    @FormUrlEncoded
+    @POST("upload_profiles.php")
+    Call<ResponsePojo> uploadProfiles(
+            @Field("profResCodePost") String resCode,
+            @Field("profProfilePost") String profile,
+            @Field("profProfileSPost") String profileSpecify,
+            @Field("profOwnerTypePost") String ownerType,
+            @Field("profNameRespondentPost") String nameRespondent,
+            @Field("profAddressPost") String address,
+            @Field("profAgePost") String age,
+            @Field("profSexPost") String sex,
+            @Field("profContactNumberPost") String contactNumber,
+            @Field("profMobNum1Post") String mobNum1,
+            @Field("profMobNum2Post") String mobNum2,
+            @Field("profTelNum1Post") String telNum1,
+            @Field("profTelNum2Post") String telNum2,
+            @Field("profEducationalAttainmentPost") String educAttain
+            );
+}
Index: app/src/main/java/com/m3das/biomech/design/AddProfile.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.m3das.biomech.design;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.constraintlayout.widget.ConstraintLayout;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.Button;\r\nimport android.widget.CompoundButton;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.RadioButton;\r\nimport android.widget.Spinner;\r\nimport android.widget.Switch;\r\nimport android.widget.TextView;\r\n\r\nimport com.androidbuts.multispinnerfilter.KeyPairBoolData;\r\nimport com.androidbuts.multispinnerfilter.MultiSpinnerListener;\r\nimport com.androidbuts.multispinnerfilter.MultiSpinnerSearch;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.Date;\r\nimport java.util.List;\r\n\r\npublic class AddProfile extends AppCompatActivity {\r\n\r\n    private Spinner spinEduc, spinProfile;\r\n    private TextView tvEduc;\r\n    private EditText addressResp, nameResp, mobileNum, telNum, mobileNum2, telNum2, age, edtSpecifyPofile;\r\n    private RadioButton rbMale, rbFemale;\r\n    private ImageButton btnSave;\r\n    private String sex;\r\n    private ConstraintLayout constraintLayout;\r\n    private MultiSpinnerSearch multspinOwner, multspinContact;\r\n    public static final String EXTRA_PROFILE_ID = \"ADDPROFILE_EXTRA_ID\";\r\n    public static final String EXTRA_PROFILE_RESCODE = \"ADDPROFILE_EXTRA_RESCODE\";\r\n    public static final String EXTRA_PROFILE = \"ADDPROFILE_EXTRA_PROFILE\";\r\n    public static final String EXTRA_PROFILE_SPECIFY = \"ADDPROFILE_EXTRA_PROFILE_SPECIFY\";\r\n    public static final String EXTRA_PROFILE_OWNER_TYPE = \"ADDPROFILE_EXTRA_OWNER_TYPE\";\r\n    public static final String EXTRA_PROFILE_NAME = \"ADDPROFILE_EXTRA_NAME\";\r\n    public static final String EXTRA_PROFILE_ADDRESS = \"ADDPROFILE_EXTRA_ADDRESS\";\r\n    public static final String EXTRA_PROFILE_AGE = \"ADDPROFILE_EXTRA_AGE\";\r\n    public static final String EXTRA_PROFILE_SEX = \"ADDPROFILE_EXTRA_SEX\";\r\n    public static final String EXTRA_PROFILE_CONTACT_INFO = \"ADDPROFILE_EXTRA_CONTACT_INFO\";\r\n    public static final String EXTRA_PROFILE_MOB_NUM1 = \"ADDPROFILE_EXTRA_MOB_NUM1\";\r\n    public static final String EXTRA_PROFILE_MOB_NUM2 = \"ADDPROFILE_EXTRA_MOB_NUM2\";\r\n    public static final String EXTRA_PROFILE_TEL_NUM1 = \"ADDPROFILE_EXTRA_TEL_NUM1\";\r\n    public static final String EXTRA_PROFILE_TEL_NUM2 = \"ADDPROFILE_EXTRA_TEL_NUM2\";\r\n    public static final String EXTRA_PROFILE_EDUC_ATTAIN = \"ADDPROFILE_EXTRA_EDUC_ATTAIN\";\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.add_profile_activity);\r\n\r\n        initViews();\r\n\r\n        hideByDefaultViews();\r\n\r\n        btnSave.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                saveProfile();\r\n            }\r\n\r\n        });\r\n\r\n        spinProfile.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {\r\n                hideOrShowSubProfile(i);\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> adapterView) {\r\n\r\n            }\r\n        });\r\n\r\n        multspinContact.setItems(pairingOfList(Arrays.asList(getResources().getStringArray(R.array.contact_number))), new MultiSpinnerListener() {\r\n            @Override\r\n            public void onItemsSelected(List<KeyPairBoolData> selectedItems) {\r\n                String pos = \"\";\r\n                for (int i = 0; i < selectedItems.size(); i++) {\r\n                    //Log.d(\"MULT SPIN\", i + \" : \" + selectedItems.get(i).getName() + \" : \" + selectedItems.get(i).isSelected());\r\n                    pos = pos + \" \" + selectedItems.get(i).getName();\r\n                }\r\n                ConstraintLayout.LayoutParams paramsTvEduc = (ConstraintLayout.LayoutParams) tvEduc.getLayoutParams();\r\n                ConstraintLayout.LayoutParams paramsTelNum = (ConstraintLayout.LayoutParams) telNum.getLayoutParams();\r\n\r\n                if (pos.contains(\"TELEPHONE NUMBER\") || pos.contains(\"MOBILE NUMBER\")) {\r\n                    if (pos.contains(\"TELEPHONE NUMBER\") && pos.contains(\"MOBILE NUMBER\")) {\r\n                        Log.d(\"MULT SPIN BOTH\", pos);\r\n                        telNum.setVisibility(View.VISIBLE);\r\n                        telNum2.setVisibility(View.VISIBLE);\r\n                        mobileNum.setVisibility(View.VISIBLE);\r\n                        mobileNum2.setVisibility(View.VISIBLE);\r\n                        paramsTvEduc.topToBottom = R.id.edtTelephoneNumber2;\r\n                        paramsTelNum.topToBottom = R.id.edtMobileNumber2;\r\n                    } else {\r\n                        if (pos.contains(\"TELEPHONE NUMBER\")) {\r\n                            Log.d(\"MULT SPIN TL\", pos);\r\n                            telNum.setVisibility(View.VISIBLE);\r\n                            telNum2.setVisibility(View.VISIBLE);\r\n                            mobileNum.setVisibility(View.INVISIBLE);\r\n                            mobileNum2.setVisibility(View.INVISIBLE);\r\n                            paramsTelNum.topToBottom = R.id.multspinContactNumber;\r\n                            paramsTvEduc.topToBottom = R.id.edtTelephoneNumber2;\r\n                        } else if (pos.contains(\"MOBILE NUMBER\")) {\r\n                            Log.d(\"MULT SPIN MB\", pos);\r\n                            mobileNum.setVisibility(View.VISIBLE);\r\n                            mobileNum2.setVisibility(View.VISIBLE);\r\n                            telNum.setVisibility(View.INVISIBLE);\r\n                            telNum2.setVisibility(View.INVISIBLE);\r\n                            paramsTelNum.topToBottom = R.id.edtMobileNumber2;\r\n                            paramsTvEduc.topToBottom = R.id.edtMobileNumber2;\r\n                        }\r\n                    }\r\n\r\n                } else if (pos.contains(\"NOT APPLICABLE\")) {\r\n                    Log.d(\"MULT SPIN NA\", pos);\r\n                    mobileNum.setVisibility(View.INVISIBLE);\r\n                    mobileNum2.setVisibility(View.INVISIBLE);\r\n                    telNum.setVisibility(View.INVISIBLE);\r\n                    telNum2.setVisibility(View.INVISIBLE);\r\n                    paramsTelNum.topToBottom = R.id.edtMobileNumber2;\r\n                    paramsTvEduc.topToBottom = R.id.multspinContactNumber;\r\n                } else {\r\n                    Log.d(\"MULT SPIN ELSE\", pos);\r\n                    telNum.setVisibility(View.INVISIBLE);\r\n                    telNum2.setVisibility(View.INVISIBLE);\r\n                    mobileNum.setVisibility(View.INVISIBLE);\r\n                    mobileNum2.setVisibility(View.INVISIBLE);\r\n                    paramsTelNum.topToBottom = R.id.edtMobileNumber2;\r\n                    paramsTvEduc.topToBottom = R.id.multspinContactNumber;\r\n\r\n                }\r\n                paramsTvEduc.topMargin = (int) pxFromDp(AddProfile.this, 32);\r\n                paramsTelNum.topMargin = (int) pxFromDp(AddProfile.this, 32);\r\n                telNum.setLayoutParams(paramsTelNum);\r\n                tvEduc.setLayoutParams(paramsTvEduc);\r\n            }\r\n        });\r\n\r\n        multspinOwner.setHintText(\"Select Ownership Type\");\r\n\r\n        multspinOwner.setItems(pairingOfList(Arrays.asList(getResources().getStringArray(R.array.subowner))), new MultiSpinnerListener() {\r\n            @Override\r\n            public void onItemsSelected(List<KeyPairBoolData> selectedItems) {\r\n                for (int i = 0; i < selectedItems.size(); i++) {\r\n                    //Log.d(\"MULT SPIN\", i + \" : \" + selectedItems.get(i).getName() + \" : \" + selectedItems.get(i).isSelected());\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        rbMale.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (rbMale.isChecked()) {\r\n                    sex = \"MALE\";\r\n                } else {\r\n                    sex = \"\";\r\n                }\r\n            }\r\n        });\r\n        rbFemale.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (rbFemale.isChecked()) {\r\n                    sex = \"FEMALE\";\r\n                } else {\r\n                    sex = \"\";\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n    }\r\n\r\n    private void initViews() {\r\n\r\n        spinEduc = findViewById(R.id.spinEduc);\r\n        addressResp = findViewById(R.id.edtAddress);\r\n        nameResp = findViewById(R.id.edtNameResp);\r\n        age = findViewById(R.id.edtAGE);\r\n        rbMale = findViewById(R.id.radioButton);\r\n        rbFemale = findViewById(R.id.radioButton2);\r\n        mobileNum = findViewById(R.id.edtMobileNumber);\r\n        telNum = findViewById(R.id.edtTelephoneNumber);\r\n        mobileNum2 = findViewById(R.id.edtMobileNumber2);\r\n        telNum2 = findViewById(R.id.edtTelephoneNumber2);\r\n        constraintLayout = findViewById(R.id.constraintLayoutInfo);\r\n        tvEduc = findViewById(R.id.tvEduc);\r\n        multspinOwner = findViewById(R.id.multspinOwner);\r\n        edtSpecifyPofile = findViewById(R.id.edtSpecifyProfile);\r\n        spinProfile = findViewById(R.id.spinProfile);\r\n        multspinContact = findViewById(R.id.multspinContactNumber);\r\n        btnSave = findViewById(R.id.btnSaveProfile);\r\n    }\r\n\r\n    private void saveProfile() {\r\n\r\n        Intent dataAddProfile = new Intent();\r\n\r\n        String timeStamp = new SimpleDateFormat(\"MMddyyHHmmss\").format(new Date());\r\n        String resCode = \"\";\r\n        String tempStr = nameResp.getText().toString().replaceAll(\"\\\\s\", \"\").toUpperCase();\r\n\r\n\r\n        int id = getIntent().getIntExtra(EXTRA_PROFILE_ID, -1);\r\n        if (id != -1) {\r\n\r\n        }\r\n        else {\r\n\r\n            resCode = tempStr.substring(0, 3) + tempStr.substring(Math.max(0, tempStr.length() - 3)) + timeStamp;\r\n            Log.d(\"Rescode: \", resCode);\r\n\r\n            if(isNullOrEmpty(sex)){\r\n                sex = \"null\";\r\n            }\r\n\r\n            dataAddProfile.putExtra(EXTRA_PROFILE_RESCODE, resCode);\r\n            dataAddProfile.putExtra(EXTRA_PROFILE, spinProfile.getSelectedItem().toString().toUpperCase());\r\n            dataAddProfile.putExtra(EXTRA_PROFILE_SPECIFY, edtSpecifyPofile.getText().toString().toUpperCase());\r\n            dataAddProfile.putExtra(EXTRA_PROFILE_OWNER_TYPE, multspinOwner.getSelectedItem().toString().toUpperCase());//TODO get multspin\r\n            dataAddProfile.putExtra(EXTRA_PROFILE_NAME, nameResp.getText().toString().toUpperCase());\r\n            dataAddProfile.putExtra(EXTRA_PROFILE_ADDRESS, addressResp.getText().toString().toUpperCase());\r\n            dataAddProfile.putExtra(EXTRA_PROFILE_AGE, age.getText().toString().toUpperCase());\r\n            dataAddProfile.putExtra(EXTRA_PROFILE_SEX, sex.toUpperCase());\r\n            dataAddProfile.putExtra(EXTRA_PROFILE_CONTACT_INFO, multspinContact.getSelectedItem().toString().toUpperCase());//TODO get multspin\r\n            dataAddProfile.putExtra(EXTRA_PROFILE_MOB_NUM1, mobileNum.getText().toString().toUpperCase());\r\n            dataAddProfile.putExtra(EXTRA_PROFILE_MOB_NUM2, mobileNum2.getText().toString().toUpperCase());\r\n            dataAddProfile.putExtra(EXTRA_PROFILE_TEL_NUM1, telNum.getText().toString().toUpperCase());\r\n            dataAddProfile.putExtra(EXTRA_PROFILE_TEL_NUM2, telNum2.getText().toString().toUpperCase());\r\n            dataAddProfile.putExtra(EXTRA_PROFILE_EDUC_ATTAIN, spinEduc.getSelectedItem().toString().toUpperCase());\r\n\r\n        }\r\n\r\n        setResult(RESULT_OK, dataAddProfile);\r\n        finish();\r\n\r\n    }\r\n\r\n\r\n    public List<KeyPairBoolData> pairingOfList(List<String> stringList) {\r\n        final List<KeyPairBoolData> listArray1 = new ArrayList<>();\r\n        List<String> list = stringList;\r\n        for (int i = 0; i < list.size(); i++) {\r\n            KeyPairBoolData h = new KeyPairBoolData();\r\n            h.setId(i + 1);\r\n            h.setName(list.get(i));\r\n            listArray1.add(h);\r\n        }\r\n        return listArray1;\r\n    }\r\n\r\n    public static boolean isNullOrEmpty(String str) {\r\n        return str == null || str.isEmpty();\r\n    }\r\n\r\n    public void hideOrShowSubProfile(int position) {\r\n        ConstraintLayout.LayoutParams params = (ConstraintLayout.LayoutParams) nameResp.getLayoutParams();\r\n        if (spinProfile.getSelectedItemPosition() == 1) {\r\n            multspinOwner.setVisibility(View.VISIBLE);\r\n            edtSpecifyPofile.setVisibility(View.INVISIBLE);\r\n            params.topToBottom = R.id.multspinOwner;\r\n\r\n        } else if (spinProfile.getSelectedItemPosition() == 8) {\r\n            multspinOwner.setVisibility(View.INVISIBLE);\r\n            edtSpecifyPofile.setVisibility(View.VISIBLE);\r\n            params.topToBottom = R.id.edtSpecifyProfile;\r\n        } else {\r\n            multspinOwner.setVisibility(View.INVISIBLE);\r\n            edtSpecifyPofile.setVisibility(View.INVISIBLE);\r\n            params.topToBottom = R.id.spinProfile;\r\n        }\r\n        params.topMargin = (int) pxFromDp(AddProfile.this, 32);\r\n        nameResp.setLayoutParams(params);\r\n    }\r\n\r\n    private void hideByDefaultViews() {\r\n        mobileNum.setVisibility(View.INVISIBLE);\r\n        telNum.setVisibility(View.INVISIBLE);\r\n        mobileNum2.setVisibility(View.INVISIBLE);\r\n        telNum2.setVisibility(View.INVISIBLE);\r\n        multspinOwner.setVisibility(View.INVISIBLE);\r\n        edtSpecifyPofile.setVisibility(View.INVISIBLE);\r\n    }\r\n\r\n    public static float pxFromDp(final Context context, final float dp) {\r\n        return dp * context.getResources().getDisplayMetrics().density;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/m3das/biomech/design/AddProfile.java	(revision b65a8d4092c36b149b09627eb3ea7b43cf4e495d)
+++ app/src/main/java/com/m3das/biomech/design/AddProfile.java	(date 1605749101074)
@@ -65,6 +65,7 @@
 
         hideByDefaultViews();
 
+        sex = "";
         btnSave.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
Index: app/src/main/java/com/m3das/biomech/design/AddImplementActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.m3das.biomech.design;\r\n\r\nimport android.Manifest;\r\nimport android.app.Activity;\r\nimport android.content.ContentValues;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Matrix;\r\nimport android.graphics.Paint;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport android.util.Base64;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.CheckBox;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.constraintlayout.widget.ConstraintLayout;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.lifecycle.ViewModelProvider;\r\n\r\nimport com.androidbuts.multispinnerfilter.KeyPairBoolData;\r\nimport com.androidbuts.multispinnerfilter.SingleSpinnerListener;\r\nimport com.androidbuts.multispinnerfilter.SingleSpinnerSearch;\r\nimport com.google.android.gms.common.api.CommonStatusCodes;\r\nimport com.google.android.gms.vision.barcode.Barcode;\r\nimport com.m3das.biomech.design.machinedb.Machines;\r\nimport com.m3das.biomech.design.viewmodels.MachineListViewModel;\r\n\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.List;\r\n\r\npublic class AddImplementActivity extends AppCompatActivity {\r\n\r\n    private Spinner spinImplementType, spinMachineUsing, spinTypeOfPlanter, spinYearAcquired, spinLocation, spinCondition;\r\n    ImageButton camera, gallery, getLocation, btnScanQR;\r\n    String currentPhotoPath, dateToStr, machineCode, machineComplete, landClear, prePlant, planting, fertilizer, pesticide, irrigationDrainage, accuracy,\r\n            cultivation, ratooning, harvest, postHarvest, hauling, encodedImage, machineQR;\r\n    ImageView selectedImage;\r\n    Button btnSave;\r\n    SingleSpinnerSearch singlespinProvinces, singlespinMunicipalities, singlespinBarangays;\r\n    ConstraintLayout.LayoutParams paramsYearAcquired, paramsTSAMain, paramstvPlanter, paramsTSAFert, paramsTSAHarvest, paramsTSAGrab, paramsTSADitch;\r\n    EditText edtQRCode, edtTotalServiceAreaMain, edtHoursPDayMain, edtDaysPSeasonMain, edtEffectiveAreaAccompMain, edtTimeUsedDuringOpMain,\r\n            edtNumberofRowsPlant, edtDistanceofPlantMat, edtTotalServiceAreaPlant, edtHoursPDayPlant, edtDaysPSeasonPlant, edtEffectiveAreaAccompPlant, edtTimeUsedDuringOpPlant,\r\n            edtTotalServiceAreaFert, edtHoursPDayFert, edtDaysPSeasonFert, edtEffectiveAreaAccompFert, edtTimeUsedDuringOpFert, edtWeightOfFert,\r\n            edtTotalServiceAreaHarvest, edtHoursPDayHarvest, edtDaysPSeasonHarvest, edtEffectiveAreaAccompHarvest, edtTimeUsedDuringOpHarvest, edtAveYieldHarvest,\r\n            edtTotalServiceAreaGrab, edtHoursPDayGrab, edtDaysPSeasonGrab, edtLoadCapacityGrab, edtNumberofLoadsGrab,\r\n            edtTotalServiceAreaDitch, edtHoursPDayDitch, edtDaysPSeasonDitch, edtDepthOfCutDitch;\r\n\r\n    TextView tvYearAcquired, tvLat, tvLong,\r\n            tvHaMain, tvHoursPDayMain, tvDaysPSeasonMain, tvHaEAMain, tvHoursPDayOpMain, tvFieldCapacityMain, tvFieldCapacityResultMain,\r\n            tvTypeofPlant, tvDistanceofPlant, tvHaPlant, tvHoursPDayPlant, tvDaysPSeasonPlant, tvHaEAPlant, tvHoursPDayOpPlant, tvFieldCapacityPlant, tvFieldCapacityResultPlant,\r\n            tvHaFert, tvHoursPDayFert, tvDaysPSeasonfFert, tvHaEAFert, tvHoursPDayOpFert, tvFieldCapacityFert, tvFieldCapacityResultFert, tvWeightOfFert, tvDeliveryRateFert, tvDeliveryRateResultFert,\r\n            tvHaHarvest, tvHoursPDayHarvest, tvDaysPSeasonHarvest, tvHaEAHarvest, tvHoursPDayOpHarvest, tvFieldCapacityHarvest, tvFieldCapacityResultHarvest, tvTonCannesPHaHarvest,\r\n            tvHaGrab, tvHoursPDayGrab, tvDaysPSeasonGrab, tvLoadPHaGrab,\r\n            tvHaDitch, tvHoursPDayDitch, tvDaysPSeasonDitch, tvDepthCutDitch;\r\n    CheckBox cbLandClear, cbPrePlant, cbPlant, cbFert, cbPest, cbIrriDrain, cbCult, cbRatoon, cbHarvest, cbPostHarvest, cbHaul;\r\n    int bigMargin, smallMargin;\r\n    public static final int CAMERA_PERM_CODE = 101;\r\n    public static final int CAMERA_REQUEST_CODE = 102;\r\n    public static final int GALLERY_REQUEST_CODE = 105;\r\n    public static final int LOCATION_REQUEST_CODE = 127;\r\n    public static final int WRITE_PERM_CODE = 279;\r\n    static Uri capturedImageUri = null;\r\n    public static final String EXTRA_IMP_ID = \"ADDIMPLEMENT_EXTRA_ID\";\r\n    public static final String EXTRA_IMP_TYPE = \"ADDIMPLEMENT_EXTRA_IMP_TYPE\";\r\n    public static final String EXTRA_IMP_QR = \"ADDIMPLEMENT_EXTRA_IMP_QR\";\r\n    public static final String EXTRA_DATE = \"ADDIMPLEMENT_EXTRA_DATE\";\r\n    public static final String EXTRA_USED_ON = \"ADDIMPLEMENT_EXTRA_USED_ON\";\r\n    public static final String EXTRA_USED_COMPLETE = \"ADDIMPLEMENT_EXTRA_USED_COMPLETE\";\r\n    public static final String EXTRA_LAND_CLEAR = \"ADDIMPLEMENT_EXTRA_LAND_CLEAR\";\r\n    public static final String EXTRA_PRE_PLANT = \"ADDIMPLEMENT_EXTRA_PRE_PLANT\";\r\n    public static final String EXTRA_PLANTING = \"ADDIMPLEMENT_EXTRA_PLANTING\";\r\n    public static final String EXTRA_FERT_APP = \"ADDIMPLEMENT_EXTRA_FERT_APP\";\r\n    public static final String EXTRA_PEST_APP = \"ADDIMPLEMENT_EXTRA_PEST_APP\";\r\n    public static final String EXTRA_IRRI_DRAIN = \"ADDIMPLEMENT_EXTRA_IRRI_DRAIN\";\r\n    public static final String EXTRA_CULT = \"ADDIMPLEMENT_EXTRA_CULT\";\r\n    public static final String EXTRA_RATOON = \"ADDIMPLEMENT_EXTRA_RATOON\";\r\n    public static final String EXTRA_HARVEST = \"ADDIMPLEMENT_EXTRA_HARVEST\";\r\n    public static final String EXTRA_POST_HARVEST = \"ADDIMPLEMENT_EXTRA_POST_HARVEST\";\r\n    public static final String EXTRA_HAULING = \"ADDIMPLEMENT_EXTRA_HAULING\";\r\n    public static final String EXTRA_TSA_MAIN = \"ADDIMPLEMENT_EXTRA_TSA_MAIN\";\r\n    public static final String EXTRA_AVE_OP_HOURS_MAIN = \"ADDIMPLEMENT_EXTRA_AVE_OP_HOURS_MAIN\";\r\n    public static final String EXTRA_AVE_OP_DAYS_MAIN = \"ADDIMPLEMENT_EXTRA_AVE_OP_DAYS_MAIN\";\r\n    public static final String EXTRA_EFF_AREA_ACC_MAIN = \"ADDIMPLEMENT_EXTRA_EFF_AREA_ACC_MAIN\";\r\n    public static final String EXTRA_TIME_USED_OP_MAIN = \"ADDIMPLEMENT_EXTRA_TIME_USED_OP_MAIN\";\r\n    public static final String EXTRA_FIELD_CAP_MAIN = \"ADDIMPLEMENT_EXTRA_FIELD_CAP_MAIN\";\r\n    public static final String EXTRA_TYPE_PLANT = \"ADDIMPLEMENT_EXTRA_TYPE_PLANT\";\r\n    public static final String EXTRA_NUM_ROWS_PLANT = \"ADDIMPLEMENT_EXTRA_NUM_ROWS_PLANT\";\r\n    public static final String EXTRA_DIST_MAT_PLANT = \"ADDIMPLEMENT_EXTRA_DIST_MAT_PLANT\";\r\n    public static final String EXTRA_TSA_PLANT = \"ADDIMPLEMENT_EXTRA_TSA_PLANT\";\r\n    public static final String EXTRA_AVE_OP_HOURS_PLANT = \"ADDIMPLEMENT_EXTRA_AVE_OP_HOURS_PLANT\";\r\n    public static final String EXTRA_AVE_OP_DAYS_PLANT = \"ADDIMPLEMENT_EXTRA_AVE_OP_DAYS_PLANT\";\r\n    public static final String EXTRA_EFF_AREA_ACC_PLANT = \"ADDIMPLEMENT_EXTRA_EFF_AREA_ACC_PLANT\";\r\n    public static final String EXTRA_TIME_USED_OP_PLANT = \"ADDIMPLEMENT_EXTRA_TIME_USED_OP_PLANT\";\r\n    public static final String EXTRA_FIELD_CAP_PLANT = \"ADDIMPLEMENT_EXTRA_FIELD_CAP_PLANT\";\r\n    public static final String EXTRA_TSA_FERT = \"ADDIMPLEMENT_EXTRA_TSA_FERT\";\r\n    public static final String EXTRA_AVE_OP_HOURS_FERT = \"ADDIMPLEMENT_EXTRA_AVE_OP_HOURS_FERT\";\r\n    public static final String EXTRA_AVE_OP_DAYS_FERT = \"ADDIMPLEMENT_EXTRA_AVE_OP_DAYS_FERT\";\r\n    public static final String EXTRA_EFF_AREA_ACC_FERT = \"ADDIMPLEMENT_EXTRA_EFF_AREA_ACC_FERT\";\r\n    public static final String EXTRA_TIME_USED_OP_FERT = \"ADDIMPLEMENT_EXTRA_TIME_USED_OP_FERT\";\r\n    public static final String EXTRA_FIELD_CAP_FERT = \"ADDIMPLEMENT_EXTRA_FIELD_CAP_FERT\";\r\n    public static final String EXTRA_WEIGHT_FERT = \"ADDIMPLEMENT_EXTRA_WEIGHT_FERT\";\r\n    public static final String EXTRA_DEL_RATE_FERT = \"ADDIMPLEMENT_EXTRA_DEL_RATE_FERT\";\r\n    public static final String EXTRA_TSA_HARVEST = \"ADDIMPLEMENT_EXTRA_TSA_HARVEST\";\r\n    public static final String EXTRA_AVE_OP_HOURS_HARVEST = \"ADDIMPLEMENT_EXTRA_AVE_OP_HOURS_HARVEST\";\r\n    public static final String EXTRA_AVE_OP_DAYS_HARVEST = \"ADDIMPLEMENT_EXTRA_AVE_OP_DAYS_HARVEST\";\r\n    public static final String EXTRA_EFF_AREA_ACC_HARVEST = \"ADDIMPLEMENT_EXTRA_EFF_AREA_ACC_HARVEST\";\r\n    public static final String EXTRA_TIME_USED_OP_HARVEST = \"ADDIMPLEMENT_EXTRA_TIME_USED_OP_HARVEST\";\r\n    public static final String EXTRA_FIELD_CAP_HARVEST = \"ADDIMPLEMENT_EXTRA_FIELD_CAP_HARVEST\";\r\n    public static final String EXTRA_AVE_YIELD_HARVEST = \"ADDIMPLEMENT_EXTRA_AVEYIELD_HARVEST\";\r\n    public static final String EXTRA_TSA_GRAB = \"ADDIMPLEMENT_EXTRA_TSA_GRAB\";\r\n    public static final String EXTRA_AVE_OP_HOURS_GRAB = \"ADDIMPLEMENT_EXTRA_AVE_OP_HOURS_GRAB\";\r\n    public static final String EXTRA_AVE_OP_DAYS_GRAB = \"ADDIMPLEMENT_EXTRA_AVE_OP_DAYS_GRAB\";\r\n    public static final String EXTRA_LOAD_CAP_GRAB = \"ADDIMPLEMENT_EXTRA_LOAD_CAP_GRAB\";\r\n    public static final String EXTRA_NUM_LOAD_GRAB = \"ADDIMPLEMENT_EXTRA_NUM_LOAD_GRAB\";\r\n    public static final String EXTRA_TSA_DITCH = \"ADDIMPLEMENT_EXTRA_TSA_DITCH\";\r\n    public static final String EXTRA_AVE_OP_HOURS_DITCH = \"ADDIMPLEMENT_EXTRA_AVE_OP_HOURS_DITCH\";\r\n    public static final String EXTRA_AVE_OP_DAYS_DITCH = \"ADDIMPLEMENT_EXTRA_AVE_OP_DAYS_DITCH\";\r\n    public static final String EXTRA_DEPTH_CUT_DITCH = \"ADDIMPLEMENT_EXTRA_DEPTH_CUT_DITCH\";\r\n    public static final String EXTRA_YEAR_ACQUIRED = \"ADDIMPLEMENT_EXTRA_YEAR_ACQUIRED\";\r\n    public static final String EXTRA_CONDITION = \"ADDIMPLEMENT_EXTRA_CONDITION\";\r\n    public static final String EXTRA_LOCATION = \"ADDIMPLEMENT_EXTRA_LOCATION\";\r\n    public static final String EXTRA_PROVINCE = \"ADDIMPLEMENT_EXTRA_PROVINCE\";\r\n    public static final String EXTRA_MUNICIPALITY = \"ADDIMPLEMENT_EXTRA_MUNICIPALITY\";\r\n    public static final String EXTRA_BARANGAY = \"ADDIMPLEMENT_EXTRA_BARANGAY\";\r\n    public static final String EXTRA_LATITUDE = \"ADDIMPLEMENT_EXTRA_LATITUDE\";\r\n    public static final String EXTRA_LONGITUDE = \"ADDIMPLEMENT_EXTRA_LONGITUDE\";\r\n    public static final String EXTRA_ACCURACY = \"ADDIMPLEMENT_EXTRA_ACCURACY\";\r\n\r\n\r\n    private String resLat, resLong;\r\n    private MachineListViewModel machineListViewModel;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.add_implement_activity);\r\n\r\n\r\n        initViews();\r\n        initAllLayoutParameters();\r\n        setMarginSize();\r\n        hideAll();\r\n\r\n        paramsYearAcquired.topToBottom = R.id.cbHauling;\r\n        paramsYearAcquired.topMargin = bigMargin;\r\n        tvYearAcquired.setLayoutParams(paramsYearAcquired);\r\n\r\n\r\n        spinYearsSetAdapter();\r\n\r\n        machineListViewModel = new ViewModelProvider(this).get(MachineListViewModel.class);\r\n        machineListViewModel.getAllMachines().observe(this, new Observer<List<Machines>>() {\r\n            @Override\r\n            public void onChanged(List<Machines> machines) {\r\n                ArrayList<String> stringArrayList = new ArrayList<>();\r\n                for (int i = machines.size() - 1; i >= 0; i--) {\r\n                    stringArrayList.add(machines.get(i).getId() + \" \" + machines.get(i).getMachine_qrcode() + \" | \" + machines.get(i).getMachine_type());\r\n                }\r\n\r\n                ArrayAdapter<String> adapter = new ArrayAdapter<String>(getApplicationContext(), android.R.layout.simple_spinner_item, stringArrayList);\r\n                adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n                spinMachineUsing.setAdapter(adapter);\r\n            }\r\n        });\r\n\r\n        camera.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                ContentValues values = new ContentValues();\r\n                String timeStamp = new SimpleDateFormat(\"yyyyMMdd_HHmmss\").format(new Date());\r\n                String imageFileName = \"JPEG_\" + timeStamp + \"_\";\r\n                values.put(MediaStore.Images.Media.TITLE, imageFileName);\r\n                values.put(MediaStore.Images.Media.DESCRIPTION, \"From the Camera\");\r\n                capturedImageUri = getContentResolver().insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, values);\r\n                //Camera intent\r\n                Intent cameraIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n                cameraIntent.putExtra(MediaStore.EXTRA_OUTPUT, capturedImageUri);\r\n                startActivityForResult(cameraIntent, CAMERA_REQUEST_CODE);\r\n                Toast.makeText(AddImplementActivity.this, \"Camera Clicked\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n        gallery.setOnClickListener(view -> {\r\n            Intent gallery = new Intent(Intent.ACTION_PICK, MediaStore.Images.Media.EXTERNAL_CONTENT_URI);\r\n            startActivityForResult(gallery, GALLERY_REQUEST_CODE);\r\n\r\n            Toast.makeText(AddImplementActivity.this, \"Gallery Clicked\", Toast.LENGTH_SHORT).show();\r\n        });\r\n\r\n        btnScanQR.setOnClickListener(view -> {\r\n            Intent intent = new Intent(AddImplementActivity.this, ScanBarcodeActivity.class);\r\n            startActivityForResult(intent, 0);\r\n            Toast.makeText(AddImplementActivity.this, \"Scanning QR\", Toast.LENGTH_SHORT).show();\r\n        });\r\n\r\n        getLocation.setOnClickListener(view -> {\r\n            Toast.makeText(AddImplementActivity.this, \"Map Clicked\", Toast.LENGTH_SHORT).show();\r\n            Intent intent = new Intent(this, LocationMapsActivity.class);\r\n            startActivityForResult(intent, LOCATION_REQUEST_CODE);\r\n        });\r\n\r\n        spinMachineUsing.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n                String used = \"\";\r\n                used = spinMachineUsing.getSelectedItem().toString();\r\n                Log.d(\"Machine using\", used.substring(0, 1) + used.substring(2, 14));\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) {\r\n\r\n            }\r\n        });\r\n\r\n        spinImplementType.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n                selectImplement(spinImplementType.getSelectedItem().toString());\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) {\r\n\r\n            }\r\n        });\r\n\r\n        List<KeyPairBoolData> allProvinces = pairingOfList(Arrays.asList(getResources().getStringArray(R.array.provinces)));\r\n        singlespinProvinces.setItems(allProvinces, new SingleSpinnerListener() {\r\n            @Override\r\n            public void onItemsSelected(KeyPairBoolData selectedItem) {\r\n\r\n                Log.d(\"Single Prov\", selectedItem.getName());\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onClear() {\r\n\r\n            }\r\n        });\r\n\r\n        List<KeyPairBoolData> allMunicipalities = pairingOfList(Arrays.asList(getResources().getStringArray(R.array.municipalities)));\r\n        singlespinMunicipalities.setItems(allMunicipalities, new SingleSpinnerListener() {\r\n            @Override\r\n            public void onItemsSelected(KeyPairBoolData selectedItem) {\r\n\r\n                Log.d(\"Single Mun\", selectedItem.getName());\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onClear() {\r\n            }\r\n        });\r\n\r\n        List<KeyPairBoolData> allBarangays = pairingOfList(Arrays.asList(getResources().getStringArray(R.array.barangays)));\r\n        singlespinBarangays.setItems(allBarangays, new SingleSpinnerListener() {\r\n            @Override\r\n            public void onItemsSelected(KeyPairBoolData selectedItem) {\r\n                Log.d(\"Single Brgy\", selectedItem.getName());\r\n            }\r\n\r\n            @Override\r\n            public void onClear() {\r\n            }\r\n        });\r\n\r\n        btnSave.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                saveImplement();\r\n            }\r\n        });\r\n\r\n        cbLandClear.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (cbLandClear.isChecked()) {\r\n                    landClear = \"LAND CLEAR\";\r\n                } else {\r\n                    landClear = \"\";\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        cbPrePlant.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (cbPrePlant.isChecked()) {\r\n                    prePlant = \"PRE PLANTING\";\r\n                } else {\r\n                    prePlant = \"\";\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        cbPlant.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (cbPlant.isChecked()) {\r\n                    planting = \"PLANTING\";\r\n                } else {\r\n                    planting = \"\";\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        cbFert.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (cbFert.isChecked()) {\r\n                    fertilizer = \"FERTILIZER APPLICATION\";\r\n                } else {\r\n                    fertilizer = \"\";\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        cbPest.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (cbPest.isChecked()) {\r\n                    pesticide = \"FERTILIZER APPLICATION\";\r\n                } else {\r\n                    pesticide = \"\";\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        cbIrriDrain.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (cbIrriDrain.isChecked()) {\r\n                    irrigationDrainage = \"IRRIGATION & DRAINAGE\";\r\n                } else {\r\n                    irrigationDrainage = \"\";\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        cbCult.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (cbCult.isChecked()) {\r\n                    cultivation = \"CULTIVATION\";\r\n                } else {\r\n                    cultivation = \"\";\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        cbRatoon.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (cbRatoon.isChecked()) {\r\n                    ratooning = \"RATOONING\";\r\n                } else {\r\n                    ratooning = \"\";\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        cbHarvest.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (cbHarvest.isChecked()) {\r\n                    harvest = \"HARVESTING\";\r\n                } else {\r\n                    harvest = \"\";\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        cbPostHarvest.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (cbPostHarvest.isChecked()) {\r\n                    postHarvest = \"POST HARVEST\";\r\n                } else {\r\n                    postHarvest = \"\";\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n        cbHaul.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if (cbHaul.isChecked()) {\r\n                    hauling = \"HAULING\";\r\n                } else {\r\n                    hauling = \"\";\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    private void spinYearsSetAdapter() {\r\n\r\n\r\n        ArrayList<String> years = new ArrayList<String>();\r\n        years.add(\"\");\r\n        for (int i = 1960; i <= Calendar.getInstance().get(Calendar.YEAR); i++) {\r\n            years.add(Integer.toString(i));\r\n        }\r\n\r\n        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, years);\r\n        spinYearAcquired.setAdapter(adapter);\r\n    }\r\n\r\n    private void setMarginSize() {\r\n        smallMargin = (int) pxFromDp(this, 8);\r\n        bigMargin = (int) pxFromDp(this, 32);\r\n    }\r\n\r\n    public void saveImplement() {\r\n//        if (machineType.trim().isEmpty() ||\r\n//                machineQRCode.trim().isEmpty() ||\r\n//                isNullOrEmpty(latitude) ||\r\n//                isNullOrEmpty(longitude)) {\r\n//            Toast.makeText(this, \"Incomplete Data\", Toast.LENGTH_SHORT).show();\r\n//        }\r\n//        else {\r\n        Intent dataAddImplement = new Intent();\r\n\r\n        getComputations();\r\n\r\n        dateToStr = new SimpleDateFormat(\"MM/dd/yy HH:mm:ss\").format(new Date());\r\n\r\n        String implementType = spinImplementType.getSelectedItem().toString();\r\n        String implementQRCode = edtQRCode.getText().toString();\r\n\r\n\r\n        String temp = spinMachineUsing.getSelectedItem().toString();\r\n//        machineListViewModel.getAllMachines().observe(this, new Observer<List<Machines>>() {\r\n//            @Override\r\n//            public void onChanged(List<Machines> machines) {\r\n//                ArrayList<String> stringArrayList = new ArrayList<>();\r\n////                for (int i = machines.size() - 1; i >= 0; i--) {\r\n////                    stringArrayList.add(machines.get(i).getId() + \" \" + machines.get(i).getMachine_qrcode() + \" | \" + machines.get(i).getMachine_type());\r\n////                }\r\n////\r\n////                ArrayAdapter<String> adapter = new ArrayAdapter<String>(getApplicationContext(), android.R.layout.simple_spinner_item, stringArrayList);\r\n////                int posMachQR = adapter.getPosition(temp);\r\n//                machineQR = machines.get(Integer.parseInt(temp.substring(0,1))-1).getMachine_qrcode();\r\n//            }\r\n//        });\r\n        dataAddImplement.putExtra(EXTRA_IMP_TYPE, spinImplementType.getSelectedItem().toString());\r\n        dataAddImplement.putExtra(EXTRA_IMP_QR, edtQRCode.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_DATE, dateToStr);\r\n        dataAddImplement.putExtra(EXTRA_USED_ON, temp.substring(2,14));\r\n        dataAddImplement.putExtra(EXTRA_USED_COMPLETE, temp);\r\n        dataAddImplement.putExtra(EXTRA_LAND_CLEAR, landClear);\r\n        dataAddImplement.putExtra(EXTRA_PRE_PLANT, prePlant);\r\n        dataAddImplement.putExtra(EXTRA_PLANTING, planting);\r\n        dataAddImplement.putExtra(EXTRA_FERT_APP, fertilizer);\r\n        dataAddImplement.putExtra(EXTRA_PEST_APP, pesticide);\r\n        dataAddImplement.putExtra(EXTRA_IRRI_DRAIN, irrigationDrainage);\r\n        dataAddImplement.putExtra(EXTRA_CULT, cultivation);\r\n        dataAddImplement.putExtra(EXTRA_RATOON, ratooning);\r\n        dataAddImplement.putExtra(EXTRA_HARVEST, harvest);\r\n        dataAddImplement.putExtra(EXTRA_POST_HARVEST, postHarvest);\r\n        dataAddImplement.putExtra(EXTRA_HAULING, hauling);\r\n        dataAddImplement.putExtra(EXTRA_TSA_MAIN, edtTotalServiceAreaMain.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_AVE_OP_HOURS_MAIN, edtHoursPDayMain.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_AVE_OP_DAYS_MAIN, edtDaysPSeasonMain.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_EFF_AREA_ACC_MAIN, edtEffectiveAreaAccompMain.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_TIME_USED_OP_MAIN, edtTimeUsedDuringOpMain.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_FIELD_CAP_MAIN, tvFieldCapacityResultMain.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_TYPE_PLANT, spinTypeOfPlanter.getSelectedItem().toString());\r\n        dataAddImplement.putExtra(EXTRA_NUM_ROWS_PLANT, edtNumberofRowsPlant.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_DIST_MAT_PLANT, edtDistanceofPlantMat.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_TSA_PLANT, edtTotalServiceAreaPlant.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_AVE_OP_HOURS_PLANT, edtHoursPDayPlant.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_AVE_OP_DAYS_PLANT, edtDaysPSeasonPlant.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_EFF_AREA_ACC_PLANT, edtEffectiveAreaAccompPlant.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_TIME_USED_OP_PLANT, edtTimeUsedDuringOpPlant.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_FIELD_CAP_PLANT, tvFieldCapacityResultPlant.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_TSA_FERT, edtTotalServiceAreaFert.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_AVE_OP_HOURS_FERT, edtHoursPDayFert.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_AVE_OP_DAYS_FERT, edtHoursPDayFert.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_EFF_AREA_ACC_FERT, edtEffectiveAreaAccompFert.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_TIME_USED_OP_FERT, edtTimeUsedDuringOpFert.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_FIELD_CAP_FERT, tvFieldCapacityResultFert.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_WEIGHT_FERT, edtWeightOfFert.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_DEL_RATE_FERT, tvDeliveryRateResultFert.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_TSA_HARVEST, edtTotalServiceAreaHarvest.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_AVE_OP_HOURS_HARVEST, edtHoursPDayHarvest.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_AVE_OP_DAYS_HARVEST, edtDaysPSeasonHarvest.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_EFF_AREA_ACC_HARVEST, edtEffectiveAreaAccompHarvest.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_TIME_USED_OP_HARVEST, edtTimeUsedDuringOpHarvest.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_FIELD_CAP_HARVEST, tvFieldCapacityResultHarvest.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_AVE_YIELD_HARVEST, edtAveYieldHarvest.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_TSA_GRAB, edtTotalServiceAreaGrab.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_AVE_OP_HOURS_GRAB, edtHoursPDayGrab.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_AVE_OP_DAYS_HARVEST, edtDaysPSeasonHarvest.getText().toString());\r\n//        dataAddImplement.putExtra(EXTRA_EFF_AREA_ACC_GRAB,effe);\r\n        dataAddImplement.putExtra(EXTRA_LOAD_CAP_GRAB, edtLoadCapacityGrab.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_NUM_LOAD_GRAB, edtNumberofLoadsGrab.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_TSA_DITCH, edtTotalServiceAreaDitch.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_AVE_OP_HOURS_DITCH, edtHoursPDayDitch.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_AVE_OP_DAYS_DITCH, edtDaysPSeasonDitch.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_DEPTH_CUT_DITCH, edtDepthOfCutDitch.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_YEAR_ACQUIRED, spinYearAcquired.getSelectedItem().toString());\r\n        dataAddImplement.putExtra(EXTRA_CONDITION, spinCondition.getSelectedItem().toString());\r\n        dataAddImplement.putExtra(EXTRA_LOCATION, spinLocation.getSelectedItem().toString());\r\n        dataAddImplement.putExtra(EXTRA_PROVINCE, singlespinProvinces.getSelectedItem().toString());\r\n        dataAddImplement.putExtra(EXTRA_MUNICIPALITY, singlespinMunicipalities.getSelectedItem().toString());\r\n        dataAddImplement.putExtra(EXTRA_BARANGAY, singlespinBarangays.getSelectedItem().toString());\r\n        dataAddImplement.putExtra(EXTRA_LATITUDE, tvLat.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_LONGITUDE, tvLong.getText().toString());\r\n        dataAddImplement.putExtra(EXTRA_ACCURACY, accuracy);\r\n        Variable.setStringImage(encodedImage);\r\n\r\n        setResult(RESULT_OK, dataAddImplement);\r\n        finish();\r\n//        }\r\n    }\r\n\r\n    private void getComputations() {\r\n\r\n        int fieldCap = 0, deliveryCap = 0;\r\n        switch (spinImplementType.getSelectedItem().toString()) {\r\n            case \"SUBSOILER\":\r\n            case \"MOLDBOARD PLOW\":\r\n            case \"DISC PLOW\":\r\n            case \"CHISEL PLOW\":\r\n            case \"DISC HARROW\":\r\n            case \"POWER HARROW\":\r\n            case \"SPIKE-TOOTH HARROW\":\r\n            case \"FURROWER\":\r\n            case \"FIELD CULTIVATOR\":\r\n            case \"INTERROW CULTIVATOR\":\r\n            case \"CUTAWAY CULTIVATOR\":\r\n            case \"RATOON MANAGER / STUBBLE SHAVER\":\r\n            case \"THRASH RAKE\":\r\n            case \"WEEDER\":\r\n            case \"ROTAVATOR\":\r\n            case \"TRASH INCORPORATOR\":\r\n                fieldCap = Integer.parseInt(edtEffectiveAreaAccompMain.getText().toString())/Integer.parseInt(edtTimeUsedDuringOpMain.getText().toString());\r\n                Log.d(\"Field Cap\", String.valueOf(fieldCap));\r\n                tvFieldCapacityResultMain.setText(String.valueOf(fieldCap));\r\n                break;\r\n            case \"MECHANICAL PLANTER\":\r\n\r\n                break;\r\n            case \"GRANULAR FERTILIZER APPLICATOR\":\r\n            case \"FERTILIZER APPLICATOR WITH CUTAWAY\":\r\n                hideAll();\r\n                showFert();\r\n                paramsTSAFert.topToBottom = R.id.cbHauling;\r\n                paramsTSAFert.topMargin = bigMargin;\r\n                edtTotalServiceAreaFert.setLayoutParams(paramsTSAFert);\r\n                paramsYearAcquired.topToBottom = R.id.tvDeliveryRateResultFert;\r\n                break;\r\n            case \"MECHANICAL HARVESTER\":\r\n                hideAll();\r\n                showHarvest();\r\n                paramsTSAHarvest.topToBottom = R.id.cbHauling;\r\n                paramsTSAHarvest.topMargin = bigMargin;\r\n                edtTotalServiceAreaHarvest.setLayoutParams(paramsTSAHarvest);\r\n                paramsYearAcquired.topToBottom = R.id.tvTonCannesPHaHarvest;\r\n                break;\r\n            case \"CANE GRAB LOADERS\":\r\n                hideAll();\r\n                showGrab();\r\n                paramsTSAGrab.topToBottom = R.id.cbHauling;\r\n                paramsTSAGrab.topMargin = bigMargin;\r\n                edtTotalServiceAreaGrab.setLayoutParams(paramsTSAGrab);\r\n                paramsYearAcquired.topToBottom = R.id.tvLoadPHaGrab;\r\n                break;\r\n            case \"DITCHER\":\r\n                hideAll();\r\n                showDitch();\r\n                paramsTSADitch.topToBottom = R.id.cbHauling;\r\n                paramsTSADitch.topMargin = bigMargin;\r\n                edtTotalServiceAreaDitch.setLayoutParams(paramsTSADitch);\r\n                paramsYearAcquired.topToBottom = R.id.tvDepthCutDitch;\r\n                break;\r\n            default:\r\n                hideAll();\r\n                paramsYearAcquired.topToBottom = R.id.cbHauling;\r\n                break;\r\n        }\r\n    }\r\n\r\n    public static float pxFromDp(final Context context, final float dp) {\r\n        return dp * context.getResources().getDisplayMetrics().density;\r\n    }\r\n\r\n    public List<KeyPairBoolData> pairingOfList(List<String> stringList) {\r\n        final List<KeyPairBoolData> listArray1 = new ArrayList<>();\r\n        List<String> list = stringList;\r\n        for (int i = 0; i < list.size(); i++) {\r\n            KeyPairBoolData h = new KeyPairBoolData();\r\n            h.setId(i + 1);\r\n            h.setName(list.get(i));\r\n            listArray1.add(h);\r\n        }\r\n        return listArray1;\r\n    }\r\n\r\n\r\n    private void selectImplement(String pos) {\r\n\r\n        Log.d(\"Implement type\", pos);\r\n        switch (pos) {\r\n            case \"SUBSOILER\":\r\n            case \"MOLDBOARD PLOW\":\r\n            case \"DISC PLOW\":\r\n            case \"CHISEL PLOW\":\r\n            case \"DISC HARROW\":\r\n            case \"POWER HARROW\":\r\n            case \"SPIKE-TOOTH HARROW\":\r\n            case \"FURROWER\":\r\n            case \"FIELD CULTIVATOR\":\r\n            case \"INTERROW CULTIVATOR\":\r\n            case \"CUTAWAY CULTIVATOR\":\r\n            case \"RATOON MANAGER / STUBBLE SHAVER\":\r\n            case \"THRASH RAKE\":\r\n            case \"WEEDER\":\r\n            case \"ROTAVATOR\":\r\n            case \"TRASH INCORPORATOR\":\r\n                hideAll();\r\n                showMainImplements();\r\n                paramsTSAMain.topToBottom = R.id.cbHauling;\r\n                paramsTSAMain.topMargin = bigMargin;\r\n                edtTotalServiceAreaMain.setLayoutParams(paramsTSAMain);\r\n                tvYearAcquired.setLayoutParams(paramsYearAcquired);\r\n                paramsYearAcquired.topToBottom = R.id.tvFieldCapacityResultMain;\r\n                break;\r\n            case \"MECHANICAL PLANTER\":\r\n                hideAll();\r\n                showPlanter();\r\n                paramstvPlanter.topToBottom = R.id.cbHauling;\r\n                paramstvPlanter.topMargin = bigMargin;\r\n                tvTypeofPlant.setLayoutParams(paramstvPlanter);\r\n                paramsYearAcquired.topToBottom = R.id.tvFieldCapacityResultPlant;\r\n                break;\r\n            case \"GRANULAR FERTILIZER APPLICATOR\":\r\n            case \"FERTILIZER APPLICATOR WITH CUTAWAY\":\r\n                hideAll();\r\n                showFert();\r\n                paramsTSAFert.topToBottom = R.id.cbHauling;\r\n                paramsTSAFert.topMargin = bigMargin;\r\n                edtTotalServiceAreaFert.setLayoutParams(paramsTSAFert);\r\n                paramsYearAcquired.topToBottom = R.id.tvDeliveryRateResultFert;\r\n                break;\r\n            case \"MECHANICAL HARVESTER\":\r\n                hideAll();\r\n                showHarvest();\r\n                paramsTSAHarvest.topToBottom = R.id.cbHauling;\r\n                paramsTSAHarvest.topMargin = bigMargin;\r\n                edtTotalServiceAreaHarvest.setLayoutParams(paramsTSAHarvest);\r\n                paramsYearAcquired.topToBottom = R.id.tvTonCannesPHaHarvest;\r\n                break;\r\n            case \"CANE GRAB LOADERS\":\r\n                hideAll();\r\n                showGrab();\r\n                paramsTSAGrab.topToBottom = R.id.cbHauling;\r\n                paramsTSAGrab.topMargin = bigMargin;\r\n                edtTotalServiceAreaGrab.setLayoutParams(paramsTSAGrab);\r\n                paramsYearAcquired.topToBottom = R.id.tvLoadPHaGrab;\r\n                break;\r\n            case \"DITCHER\":\r\n                hideAll();\r\n                showDitch();\r\n                paramsTSADitch.topToBottom = R.id.cbHauling;\r\n                paramsTSADitch.topMargin = bigMargin;\r\n                edtTotalServiceAreaDitch.setLayoutParams(paramsTSADitch);\r\n                paramsYearAcquired.topToBottom = R.id.tvDepthCutDitch;\r\n                break;\r\n            default:\r\n                hideAll();\r\n                paramsYearAcquired.topToBottom = R.id.cbHauling;\r\n                break;\r\n        }\r\n        paramsYearAcquired.topMargin = bigMargin;\r\n        tvYearAcquired.setLayoutParams(paramsYearAcquired);\r\n    }\r\n\r\n    private void showDitch() {\r\n        edtTotalServiceAreaDitch.setVisibility(View.VISIBLE);\r\n        edtHoursPDayDitch.setVisibility(View.VISIBLE);\r\n        edtDaysPSeasonDitch.setVisibility(View.VISIBLE);\r\n        edtDepthOfCutDitch.setVisibility(View.VISIBLE);\r\n\r\n        tvHaDitch.setVisibility(View.VISIBLE);\r\n        tvHoursPDayDitch.setVisibility(View.VISIBLE);\r\n        tvDaysPSeasonDitch.setVisibility(View.VISIBLE);\r\n        tvDepthCutDitch.setVisibility(View.VISIBLE);\r\n    }\r\n\r\n    private void showGrab() {\r\n        edtTotalServiceAreaGrab.setVisibility(View.VISIBLE);\r\n        edtHoursPDayGrab.setVisibility(View.VISIBLE);\r\n        edtDaysPSeasonGrab.setVisibility(View.VISIBLE);\r\n        edtLoadCapacityGrab.setVisibility(View.VISIBLE);\r\n        edtNumberofLoadsGrab.setVisibility(View.VISIBLE);\r\n\r\n        tvHaGrab.setVisibility(View.VISIBLE);\r\n        tvHoursPDayGrab.setVisibility(View.VISIBLE);\r\n        tvDaysPSeasonGrab.setVisibility(View.VISIBLE);\r\n        tvLoadPHaGrab.setVisibility(View.VISIBLE);\r\n    }\r\n\r\n    private void showHarvest() {\r\n        edtTotalServiceAreaHarvest.setVisibility(View.VISIBLE);\r\n        edtHoursPDayHarvest.setVisibility(View.VISIBLE);\r\n        edtDaysPSeasonHarvest.setVisibility(View.VISIBLE);\r\n        edtEffectiveAreaAccompHarvest.setVisibility(View.VISIBLE);\r\n        edtTimeUsedDuringOpHarvest.setVisibility(View.VISIBLE);\r\n        edtAveYieldHarvest.setVisibility(View.VISIBLE);\r\n\r\n        tvHaHarvest.setVisibility(View.VISIBLE);\r\n        tvHoursPDayHarvest.setVisibility(View.VISIBLE);\r\n        tvDaysPSeasonHarvest.setVisibility(View.VISIBLE);\r\n        tvHaEAHarvest.setVisibility(View.VISIBLE);\r\n        tvHoursPDayOpHarvest.setVisibility(View.VISIBLE);\r\n        tvFieldCapacityHarvest.setVisibility(View.VISIBLE);\r\n        tvFieldCapacityResultHarvest.setVisibility(View.VISIBLE);\r\n        tvTonCannesPHaHarvest.setVisibility(View.VISIBLE);\r\n    }\r\n\r\n    private void showFert() {\r\n        edtTotalServiceAreaFert.setVisibility(View.VISIBLE);\r\n        edtHoursPDayFert.setVisibility(View.VISIBLE);\r\n        edtDaysPSeasonFert.setVisibility(View.VISIBLE);\r\n        edtEffectiveAreaAccompFert.setVisibility(View.VISIBLE);\r\n        edtTimeUsedDuringOpFert.setVisibility(View.VISIBLE);\r\n        edtWeightOfFert.setVisibility(View.VISIBLE);\r\n\r\n        tvHaFert.setVisibility(View.VISIBLE);\r\n        tvHoursPDayFert.setVisibility(View.VISIBLE);\r\n        tvDaysPSeasonfFert.setVisibility(View.VISIBLE);\r\n        tvHaEAFert.setVisibility(View.VISIBLE);\r\n        tvHoursPDayOpFert.setVisibility(View.VISIBLE);\r\n        tvFieldCapacityFert.setVisibility(View.VISIBLE);\r\n        tvFieldCapacityResultFert.setVisibility(View.VISIBLE);\r\n        tvWeightOfFert.setVisibility(View.VISIBLE);\r\n        tvDeliveryRateFert.setVisibility(View.VISIBLE);\r\n        tvDeliveryRateResultFert.setVisibility(View.VISIBLE);\r\n    }\r\n\r\n    private void showPlanter() {\r\n        edtNumberofRowsPlant.setVisibility(View.VISIBLE);\r\n        edtDistanceofPlantMat.setVisibility(View.VISIBLE);\r\n        edtTotalServiceAreaPlant.setVisibility(View.VISIBLE);\r\n        edtHoursPDayPlant.setVisibility(View.VISIBLE);\r\n        edtDaysPSeasonPlant.setVisibility(View.VISIBLE);\r\n        edtEffectiveAreaAccompPlant.setVisibility(View.VISIBLE);\r\n        edtTimeUsedDuringOpPlant.setVisibility(View.VISIBLE);\r\n\r\n        tvTypeofPlant.setVisibility(View.VISIBLE);\r\n        tvDistanceofPlant.setVisibility(View.VISIBLE);\r\n        tvHaPlant.setVisibility(View.VISIBLE);\r\n        tvHoursPDayPlant.setVisibility(View.VISIBLE);\r\n        tvDaysPSeasonPlant.setVisibility(View.VISIBLE);\r\n        tvHaEAPlant.setVisibility(View.VISIBLE);\r\n        tvHoursPDayOpPlant.setVisibility(View.VISIBLE);\r\n        tvFieldCapacityPlant.setVisibility(View.VISIBLE);\r\n        tvFieldCapacityResultPlant.setVisibility(View.VISIBLE);\r\n    }\r\n\r\n    private void initViews() {\r\n\r\n        spinImplementType = findViewById(R.id.spinImplementType);\r\n        camera = findViewById(R.id.btnCameraImp);\r\n        gallery = findViewById(R.id.btnGalleryImp);\r\n        selectedImage = findViewById(R.id.imgMachineImp);\r\n        getLocation = findViewById(R.id.btnGetLocationImp);\r\n        edtQRCode = findViewById(R.id.edtQRCodeImp);\r\n        btnScanQR = findViewById(R.id.btnScanQRCodeImp);\r\n        spinMachineUsing = findViewById(R.id.spinMachineUsing);\r\n        spinYearAcquired = findViewById(R.id.spinYearAcquiredImp);\r\n        tvYearAcquired = findViewById(R.id.tvYearAcquiredImp);\r\n        singlespinProvinces = findViewById(R.id.singlespinProvincesImp);\r\n        singlespinMunicipalities = findViewById(R.id.singlespinMunicipalitiesImp);\r\n        singlespinBarangays = findViewById(R.id.singlespinBarangaysImp);\r\n        tvLat = findViewById(R.id.tvLatitudeImp);\r\n        tvLong = findViewById(R.id.tvLongitudeImp);\r\n        spinLocation = findViewById(R.id.spinLocationImp);\r\n        spinCondition = findViewById(R.id.spinConditionImp);\r\n        btnSave = findViewById(R.id.btnSaveImp);\r\n\r\n\r\n        cbLandClear = findViewById(R.id.cbLandClearing);\r\n        cbPrePlant = findViewById(R.id.cbPrePlanting);\r\n        cbPlant = findViewById(R.id.cbPlanting);\r\n        cbFert = findViewById(R.id.cbFertilizer);\r\n        cbPest = findViewById(R.id.cbPesticide);\r\n        cbIrriDrain = findViewById(R.id.cbIrriDrain);\r\n        cbCult = findViewById(R.id.cbCultivation);\r\n        cbRatoon = findViewById(R.id.cbRatooning);\r\n        cbHarvest = findViewById(R.id.cbHarvest);\r\n        cbPostHarvest = findViewById(R.id.cbPostHarvest);\r\n        cbHaul = findViewById(R.id.cbHauling);\r\n\r\n        edtTotalServiceAreaMain = findViewById(R.id.edtTotalServiceAreaMain);\r\n        edtHoursPDayMain = findViewById(R.id.edtHoursPDayMain);\r\n        edtDaysPSeasonMain = findViewById(R.id.edtDaysPSeasonMain);\r\n        edtEffectiveAreaAccompMain = findViewById(R.id.edtEffectiveAreaAccompMain);\r\n        edtTimeUsedDuringOpMain = findViewById(R.id.edtTimeUsedDuringOpMain);\r\n        tvHaMain = findViewById(R.id.tvHaMain);\r\n        tvHoursPDayMain = findViewById(R.id.tvHoursPDayMain);\r\n        tvDaysPSeasonMain = findViewById(R.id.tvDaysPSeasonMain);\r\n        tvHaEAMain = findViewById(R.id.tvHaEAMain);\r\n        tvHoursPDayOpMain = findViewById(R.id.tvHoursPDayOpMain);\r\n        tvFieldCapacityMain = findViewById(R.id.tvFieldCapacityMain);\r\n        tvFieldCapacityResultMain = findViewById(R.id.tvFieldCapacityResultMain);\r\n\r\n        spinTypeOfPlanter = findViewById(R.id.spinTypeOfPlanterPlant);\r\n        edtNumberofRowsPlant = findViewById(R.id.edtNumberofRowsPlant);\r\n        edtDistanceofPlantMat = findViewById(R.id.edtDistanceOfPlantMatPlant);\r\n        edtTotalServiceAreaPlant = findViewById(R.id.edtTotalServiceAreaPlant);\r\n        edtHoursPDayPlant = findViewById(R.id.edtHoursPDayPlant);\r\n        edtDaysPSeasonPlant = findViewById(R.id.edtDaysPSeasonPlant);\r\n        edtEffectiveAreaAccompPlant = findViewById(R.id.edtEffectiveAreaAccompPlant);\r\n        edtTimeUsedDuringOpPlant = findViewById(R.id.edtTimeUsedDuringOpPlant);\r\n        tvTypeofPlant = findViewById(R.id.tvTypeofPlant);\r\n        tvDistanceofPlant = findViewById(R.id.tvDistancePlant);\r\n        tvHaPlant = findViewById(R.id.tvHaPlant);\r\n        tvHoursPDayPlant = findViewById(R.id.tvHoursPDayPlant);\r\n        tvDaysPSeasonPlant = findViewById(R.id.tvDaysPSeasonPlant);\r\n        tvHaEAPlant = findViewById(R.id.tvHaEAPlant);\r\n        tvHoursPDayOpPlant = findViewById(R.id.tvHoursPDayOpPlant);\r\n        tvFieldCapacityPlant = findViewById(R.id.tvFieldCapacityPlant);\r\n        tvFieldCapacityResultPlant = findViewById(R.id.tvFieldCapacityResultPlant);\r\n\r\n\r\n        edtTotalServiceAreaFert = findViewById(R.id.edtTotalServiceAreaFert);\r\n        edtHoursPDayFert = findViewById(R.id.edtHoursPDayFert);\r\n        edtDaysPSeasonFert = findViewById(R.id.edtDaysPSeasonFert);\r\n        edtEffectiveAreaAccompFert = findViewById(R.id.edtEffectiveAreaAccompFert);\r\n        edtTimeUsedDuringOpFert = findViewById(R.id.edtTimeUsedDuringOpFert);\r\n        edtWeightOfFert = findViewById(R.id.edtWeightOfFertFert);\r\n        tvHaFert = findViewById(R.id.tvHaFert);\r\n        tvHoursPDayFert = findViewById(R.id.tvHoursPDayFert);\r\n        tvDaysPSeasonfFert = findViewById(R.id.tvDaysPSeasonFert);\r\n        tvHaEAFert = findViewById(R.id.tvHaEAFert);\r\n        tvHoursPDayOpFert = findViewById(R.id.tvHoursPDayOpFert);\r\n        tvFieldCapacityFert = findViewById(R.id.tvFieldCapacityFert);\r\n        tvFieldCapacityResultFert = findViewById(R.id.tvFieldCapacityResultFert);\r\n        tvWeightOfFert = findViewById(R.id.tvWeightFert);\r\n        tvDeliveryRateFert = findViewById(R.id.tvDeliveryRateFert);\r\n        tvDeliveryRateResultFert = findViewById(R.id.tvDeliveryRateResultFert);\r\n\r\n        edtTotalServiceAreaHarvest = findViewById(R.id.edtTotalServiceAreaHarvest);\r\n        edtHoursPDayHarvest = findViewById(R.id.edtHoursPDayHarvest);\r\n        edtDaysPSeasonHarvest = findViewById(R.id.edtDaysPSeasonHarvest);\r\n        edtEffectiveAreaAccompHarvest = findViewById(R.id.edtEffectiveAreaAccompHarvest);\r\n        edtTimeUsedDuringOpHarvest = findViewById(R.id.edtTimeUsedDuringOpHarvest);\r\n        edtAveYieldHarvest = findViewById(R.id.edtAveYieldHarvest);\r\n        tvHaHarvest = findViewById(R.id.tvHaHarvest);\r\n        tvHoursPDayHarvest = findViewById(R.id.tvHoursPDayHarvest);\r\n        tvDaysPSeasonHarvest = findViewById(R.id.tvDaysPSeasonHarvest);\r\n        tvHaEAHarvest = findViewById(R.id.tvHaEAHarvest);\r\n        tvHoursPDayOpHarvest = findViewById(R.id.tvHoursPDayOpHarvest);\r\n        tvFieldCapacityHarvest = findViewById(R.id.tvFieldCapacityHarvest);\r\n        tvFieldCapacityResultHarvest = findViewById(R.id.tvFieldCapacityResultHarvest);\r\n        tvTonCannesPHaHarvest = findViewById(R.id.tvTonCannesPHaHarvest);\r\n\r\n        edtTotalServiceAreaGrab = findViewById(R.id.edtTotalServiceAreaGrab);\r\n        edtHoursPDayGrab = findViewById(R.id.edtHoursPDayGrab);\r\n        edtDaysPSeasonGrab = findViewById(R.id.edtDaysPSeasonGrab);\r\n        edtLoadCapacityGrab = findViewById(R.id.edtLoadCapacityGrab);\r\n        edtNumberofLoadsGrab = findViewById(R.id.edtNumberofLoadsGrab);\r\n        tvHaGrab = findViewById(R.id.tvHaGrab);\r\n        tvHoursPDayGrab = findViewById(R.id.tvHoursPDayGrab);\r\n        tvDaysPSeasonGrab = findViewById(R.id.tvDaysPSeasonGrab);\r\n        tvLoadPHaGrab = findViewById(R.id.tvLoadPHaGrab);\r\n\r\n        edtTotalServiceAreaDitch = findViewById(R.id.edtTotalServiceAreaDitch);\r\n        edtHoursPDayDitch = findViewById(R.id.edtHoursPDayDitch);\r\n        edtDaysPSeasonDitch = findViewById(R.id.edtDaysPSeasonDitch);\r\n        edtDepthOfCutDitch = findViewById(R.id.edtDepthOfCutDitch);\r\n        tvHaDitch = findViewById(R.id.tvHaDitch);\r\n        tvHoursPDayDitch = findViewById(R.id.tvHoursPDayDitch);\r\n        tvDaysPSeasonDitch = findViewById(R.id.tvDaysPSeasonDitch);\r\n        tvDepthCutDitch = findViewById(R.id.tvDepthCutDitch);\r\n    }\r\n\r\n    private void showMainImplements() {\r\n        edtTotalServiceAreaMain.setVisibility(View.VISIBLE);\r\n        edtHoursPDayMain.setVisibility(View.VISIBLE);\r\n        edtDaysPSeasonMain.setVisibility(View.VISIBLE);\r\n        edtEffectiveAreaAccompMain.setVisibility(View.VISIBLE);\r\n        edtTimeUsedDuringOpMain.setVisibility(View.VISIBLE);\r\n\r\n        tvHaMain.setVisibility(View.VISIBLE);\r\n        tvHoursPDayMain.setVisibility(View.VISIBLE);\r\n        tvDaysPSeasonMain.setVisibility(View.VISIBLE);\r\n        tvHaEAMain.setVisibility(View.VISIBLE);\r\n        tvHoursPDayOpMain.setVisibility(View.VISIBLE);\r\n        tvFieldCapacityMain.setVisibility(View.VISIBLE);\r\n        tvFieldCapacityResultMain.setVisibility(View.VISIBLE);\r\n    }\r\n\r\n    private void hideAll() {\r\n\r\n        edtTotalServiceAreaMain.setVisibility(View.GONE);\r\n        edtHoursPDayMain.setVisibility(View.GONE);\r\n        edtDaysPSeasonMain.setVisibility(View.GONE);\r\n        edtEffectiveAreaAccompMain.setVisibility(View.GONE);\r\n        edtTimeUsedDuringOpMain.setVisibility(View.GONE);\r\n\r\n        edtNumberofRowsPlant.setVisibility(View.GONE);\r\n        edtDistanceofPlantMat.setVisibility(View.GONE);\r\n        edtTotalServiceAreaPlant.setVisibility(View.GONE);\r\n        edtHoursPDayPlant.setVisibility(View.GONE);\r\n        edtDaysPSeasonPlant.setVisibility(View.GONE);\r\n        edtEffectiveAreaAccompPlant.setVisibility(View.GONE);\r\n        edtTimeUsedDuringOpPlant.setVisibility(View.GONE);\r\n\r\n        edtTotalServiceAreaFert.setVisibility(View.GONE);\r\n        edtHoursPDayFert.setVisibility(View.GONE);\r\n        edtDaysPSeasonFert.setVisibility(View.GONE);\r\n        edtEffectiveAreaAccompFert.setVisibility(View.GONE);\r\n        edtTimeUsedDuringOpFert.setVisibility(View.GONE);\r\n        edtWeightOfFert.setVisibility(View.GONE);\r\n\r\n        edtTotalServiceAreaHarvest.setVisibility(View.GONE);\r\n        edtHoursPDayHarvest.setVisibility(View.GONE);\r\n        edtDaysPSeasonHarvest.setVisibility(View.GONE);\r\n        edtEffectiveAreaAccompHarvest.setVisibility(View.GONE);\r\n        edtTimeUsedDuringOpHarvest.setVisibility(View.GONE);\r\n        edtAveYieldHarvest.setVisibility(View.GONE);\r\n\r\n        edtTotalServiceAreaGrab.setVisibility(View.GONE);\r\n        edtHoursPDayGrab.setVisibility(View.GONE);\r\n        edtDaysPSeasonGrab.setVisibility(View.GONE);\r\n        edtLoadCapacityGrab.setVisibility(View.GONE);\r\n        edtNumberofLoadsGrab.setVisibility(View.GONE);\r\n\r\n        edtTotalServiceAreaDitch.setVisibility(View.GONE);\r\n        edtHoursPDayDitch.setVisibility(View.GONE);\r\n        edtDaysPSeasonDitch.setVisibility(View.GONE);\r\n        edtDepthOfCutDitch.setVisibility(View.GONE);\r\n\r\n\r\n        tvHaMain.setVisibility(View.GONE);\r\n        tvHoursPDayMain.setVisibility(View.GONE);\r\n        tvDaysPSeasonMain.setVisibility(View.GONE);\r\n        tvHaEAMain.setVisibility(View.GONE);\r\n        tvHoursPDayOpMain.setVisibility(View.GONE);\r\n        tvFieldCapacityMain.setVisibility(View.GONE);\r\n        tvFieldCapacityResultMain.setVisibility(View.GONE);\r\n\r\n        tvTypeofPlant.setVisibility(View.GONE);\r\n        tvDistanceofPlant.setVisibility(View.GONE);\r\n        tvHaPlant.setVisibility(View.GONE);\r\n        tvHoursPDayPlant.setVisibility(View.GONE);\r\n        tvDaysPSeasonPlant.setVisibility(View.GONE);\r\n        tvHaEAPlant.setVisibility(View.GONE);\r\n        tvHoursPDayOpPlant.setVisibility(View.GONE);\r\n        tvFieldCapacityPlant.setVisibility(View.GONE);\r\n        tvFieldCapacityResultPlant.setVisibility(View.GONE);\r\n\r\n        tvHaFert.setVisibility(View.GONE);\r\n        tvHoursPDayFert.setVisibility(View.GONE);\r\n        tvDaysPSeasonfFert.setVisibility(View.GONE);\r\n        tvHaEAFert.setVisibility(View.GONE);\r\n        tvHoursPDayOpFert.setVisibility(View.GONE);\r\n        tvFieldCapacityFert.setVisibility(View.GONE);\r\n        tvFieldCapacityResultFert.setVisibility(View.GONE);\r\n        tvWeightOfFert.setVisibility(View.GONE);\r\n        tvDeliveryRateFert.setVisibility(View.GONE);\r\n        tvDeliveryRateResultFert.setVisibility(View.GONE);\r\n\r\n        tvHaHarvest.setVisibility(View.GONE);\r\n        tvHoursPDayHarvest.setVisibility(View.GONE);\r\n        tvDaysPSeasonHarvest.setVisibility(View.GONE);\r\n        tvHaEAHarvest.setVisibility(View.GONE);\r\n        tvHoursPDayOpHarvest.setVisibility(View.GONE);\r\n        tvFieldCapacityHarvest.setVisibility(View.GONE);\r\n        tvFieldCapacityResultHarvest.setVisibility(View.GONE);\r\n        tvTonCannesPHaHarvest.setVisibility(View.GONE);\r\n\r\n        tvHaGrab.setVisibility(View.GONE);\r\n        tvHoursPDayGrab.setVisibility(View.GONE);\r\n        tvDaysPSeasonGrab.setVisibility(View.GONE);\r\n        tvLoadPHaGrab.setVisibility(View.GONE);\r\n\r\n        tvHaDitch.setVisibility(View.GONE);\r\n        tvHoursPDayDitch.setVisibility(View.GONE);\r\n        tvDaysPSeasonDitch.setVisibility(View.GONE);\r\n        tvDepthCutDitch.setVisibility(View.GONE);\r\n    }\r\n\r\n    private void initAllLayoutParameters() {\r\n        paramsYearAcquired = (ConstraintLayout.LayoutParams) tvYearAcquired.getLayoutParams();\r\n        paramsTSAMain = (ConstraintLayout.LayoutParams) edtTotalServiceAreaMain.getLayoutParams();\r\n        paramsTSAFert = (ConstraintLayout.LayoutParams) edtTotalServiceAreaFert.getLayoutParams();\r\n        paramsTSAHarvest = (ConstraintLayout.LayoutParams) edtTotalServiceAreaHarvest.getLayoutParams();\r\n        paramsTSAGrab = (ConstraintLayout.LayoutParams) edtTotalServiceAreaGrab.getLayoutParams();\r\n        paramsTSADitch = (ConstraintLayout.LayoutParams) edtTotalServiceAreaDitch.getLayoutParams();\r\n        paramstvPlanter = (ConstraintLayout.LayoutParams) tvTypeofPlant.getLayoutParams();\r\n    }\r\n\r\n\r\n    private Bitmap scale(Bitmap bitmap, int maxWidth, int maxHeight) {\r\n        // Determine the constrained dimension, which determines both dimensions.\r\n        int width;\r\n        int height;\r\n        float widthRatio = (float) bitmap.getWidth() / maxWidth;\r\n        float heightRatio = (float) bitmap.getHeight() / maxHeight;\r\n        // Width constrained.\r\n        if (widthRatio >= heightRatio) {\r\n            width = maxWidth;\r\n            height = (int) (((float) width / bitmap.getWidth()) * bitmap.getHeight());\r\n        }\r\n        // Height constrained.\r\n        else {\r\n            height = maxHeight;\r\n            width = (int) (((float) height / bitmap.getHeight()) * bitmap.getWidth());\r\n        }\r\n        Bitmap scaledBitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);\r\n\r\n        float ratioX = (float) width / bitmap.getWidth();\r\n        float ratioY = (float) height / bitmap.getHeight();\r\n        float middleX = width / 2.0f;\r\n        float middleY = height / 2.0f;\r\n        Matrix scaleMatrix = new Matrix();\r\n        scaleMatrix.setScale(ratioX, ratioY, middleX, middleY);\r\n\r\n        Canvas canvas = new Canvas(scaledBitmap);\r\n        canvas.setMatrix(scaleMatrix);\r\n        canvas.drawBitmap(bitmap, middleX - bitmap.getWidth() / 2, middleY - bitmap.getHeight() / 2, new Paint(Paint.FILTER_BITMAP_FLAG));\r\n        return scaledBitmap;\r\n    }\r\n\r\n    public void askCameraPermission() {\r\n        if (ContextCompat.checkSelfPermission(this, Manifest.permission.CAMERA) != PackageManager.PERMISSION_GRANTED) {\r\n            ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.CAMERA}, CAMERA_PERM_CODE);\r\n        }\r\n        else {\r\n            //TODO ADD PICTURE INTENT\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\r\n        if (requestCode == CAMERA_PERM_CODE) {\r\n            if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n                Toast.makeText(this, \"Camera Permission granted\", Toast.LENGTH_SHORT).show();\r\n            } else {\r\n                Toast.makeText(this, \"Camera Permission is Required to Use camera.\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        } else if (requestCode == WRITE_PERM_CODE) {\r\n            if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n                Log.e(\"value\", \"Write Permission granted\");\r\n            } else {\r\n                Log.e(\"value\", \"Write Permission not granted\");\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (requestCode == CAMERA_REQUEST_CODE) {\r\n            if (resultCode == Activity.RESULT_OK) {\r\n//                File f = new File(currentPhotoPath);\r\n//                selectedImage.setImageURI(Uri.fromFile(f));\r\n//                Log.d(\"tag\", \"Absolute Url of Image is \" + Uri.fromFile(f));\r\n//\r\n//                Intent mediaScanIntent = new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE);\r\n//                Uri contentUri = Uri.fromFile(f);\r\n//                mediaScanIntent.setData(contentUri);\r\n//                this.sendBroadcast(mediaScanIntent);\r\n                Bitmap bitmap = null;\r\n                try {\r\n                    bitmap = MediaStore.Images.Media.getBitmap(this.getContentResolver(), capturedImageUri);\r\n\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n                ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\r\n                bitmap = scale(bitmap, 1080, 1920);\r\n                bitmap.compress(Bitmap.CompressFormat.JPEG, 100, byteArrayOutputStream);\r\n                byte[] imgInByte = byteArrayOutputStream.toByteArray();\r\n                encodedImage = Base64.encodeToString(imgInByte, Base64.DEFAULT);\r\n                selectedImage.setImageBitmap(bitmap);\r\n\r\n            }\r\n\r\n\r\n        }\r\n        if (requestCode == LOCATION_REQUEST_CODE && resultCode == RESULT_OK && data != null) {\r\n            tvLat.setText(data.getStringExtra(\"strLat\"));\r\n            tvLong.setText(data.getStringExtra(\"StrLong\"));\r\n            accuracy = data.getStringExtra(\"StrAcc\");\r\n        }\r\n\r\n        if (requestCode == GALLERY_REQUEST_CODE) {\r\n            if (resultCode == Activity.RESULT_OK) {\r\n\r\n                //Code for getting image as URI\r\n                /* Uri contentUri = data.getData();\r\n                String timeStamp = new SimpleDateFormat(\"yyyyMMdd_HHmmss\").format(new Date());\r\n                String imageFileName = \"JPEG_\" + timeStamp + \".\" + getFileExt(contentUri);\r\n                Log.d(\"tag\", \"onActivityResult: Gallery Image Uri:  \" + imageFileName);\r\n                selectedImage.setImageURI(contentUri); */\r\n\r\n                InputStream inputStream = null;\r\n                try {\r\n                    inputStream = getContentResolver().openInputStream(data.getData());\r\n                } catch (FileNotFoundException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n                ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\r\n                Bitmap bitmap = BitmapFactory.decodeStream(inputStream);\r\n                bitmap = scale(bitmap, 720, 1280);\r\n                bitmap.compress(Bitmap.CompressFormat.JPEG, 100, byteArrayOutputStream);\r\n                byte[] imgInByte = byteArrayOutputStream.toByteArray();\r\n                String encodedImg = Base64.encodeToString(imgInByte, Base64.DEFAULT);\r\n                selectedImage.setImageBitmap(bitmap);\r\n            }\r\n\r\n        }\r\n\r\n        if (requestCode == GALLERY_REQUEST_CODE) {\r\n            if (resultCode == Activity.RESULT_OK) {\r\n\r\n                InputStream inputStream = null;\r\n                try {\r\n                    inputStream = getContentResolver().openInputStream(data.getData());\r\n                } catch (FileNotFoundException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n                ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\r\n                Bitmap bitmap = BitmapFactory.decodeStream(inputStream);\r\n//                bitmap = scale(bitmap, 576, 1024);\r\n                bitmap = scale(bitmap, 1080, 1920);\r\n                bitmap.compress(Bitmap.CompressFormat.JPEG, 100, byteArrayOutputStream);\r\n                byte[] imgInByte = byteArrayOutputStream.toByteArray();\r\n                encodedImage = Base64.encodeToString(imgInByte, Base64.DEFAULT);\r\n                selectedImage.setImageBitmap(bitmap);\r\n            }\r\n\r\n        }\r\n\r\n        if (requestCode == 0) {\r\n            if (resultCode == CommonStatusCodes.SUCCESS) {\r\n                if (data != null) {\r\n                    Log.e(\"Check\", \"Receiving data\");\r\n                    Barcode barcode = data.getParcelableExtra(\"barcode\");\r\n                    edtQRCode.setText(barcode.displayValue);\r\n                } else {\r\n                    edtQRCode.setHint(\"No Barcode found\");\r\n                }\r\n\r\n            }\r\n        } else {\r\n            super.onActivityResult(requestCode, resultCode, data);\r\n        }\r\n/*    private String getFileExt(Uri contentUri) {\r\n        ContentResolver c = getContentResolver();\r\n        MimeTypeMap mime = MimeTypeMap.getSingleton();\r\n        return mime.getExtensionFromMimeType(c.getType(contentUri));\r\n    }*/\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/m3das/biomech/design/AddImplementActivity.java	(revision b65a8d4092c36b149b09627eb3ea7b43cf4e495d)
+++ app/src/main/java/com/m3das/biomech/design/AddImplementActivity.java	(date 1605599114637)
@@ -14,6 +14,8 @@
 import android.net.Uri;
 import android.os.Bundle;
 import android.provider.MediaStore;
+import android.text.Editable;
+import android.text.TextWatcher;
 import android.util.Base64;
 import android.util.Log;
 import android.view.View;
@@ -60,8 +62,8 @@
 
     private Spinner spinImplementType, spinMachineUsing, spinTypeOfPlanter, spinYearAcquired, spinLocation, spinCondition;
     ImageButton camera, gallery, getLocation, btnScanQR;
-    String currentPhotoPath, dateToStr, machineCode, machineComplete, landClear, prePlant, planting, fertilizer, pesticide, irrigationDrainage, accuracy,
-            cultivation, ratooning, harvest, postHarvest, hauling, encodedImage, machineQR;
+    String currentPhotoPath, dateToStr, machineCode, machineComplete, landClear, prePlant, planting, fertilizer, pesticide, irrigationDrainage,
+            cultivation, ratooning, harvest, postHarvest, hauling, encodedImage, machineQR, accuracy;
     ImageView selectedImage;
     Button btnSave;
     SingleSpinnerSearch singlespinProvinces, singlespinMunicipalities, singlespinBarangays;
@@ -82,6 +84,8 @@
             tvHaDitch, tvHoursPDayDitch, tvDaysPSeasonDitch, tvDepthCutDitch;
     CheckBox cbLandClear, cbPrePlant, cbPlant, cbFert, cbPest, cbIrriDrain, cbCult, cbRatoon, cbHarvest, cbPostHarvest, cbHaul;
     int bigMargin, smallMargin;
+    Double fieldCap = null;
+    Double deliveryCap = null;
     public static final int CAMERA_PERM_CODE = 101;
     public static final int CAMERA_REQUEST_CODE = 102;
     public static final int GALLERY_REQUEST_CODE = 105;
@@ -168,6 +172,8 @@
         initAllLayoutParameters();
         setMarginSize();
         hideAll();
+        setCheckBoxData();
+        initTextViewData();
 
         paramsYearAcquired.topToBottom = R.id.cbHauling;
         paramsYearAcquired.topMargin = bigMargin;
@@ -432,8 +438,57 @@
             }
         });
 
+        edtTimeUsedDuringOpMain.addTextChangedListener(new TextWatcher() {
+            @Override
+            public void beforeTextChanged(CharSequence s, int start, int count, int after) {
+
+            }
+
+            @Override
+            public void onTextChanged(CharSequence s, int start, int before, int count) {
+                if (!isNullOrEmpty(edtEffectiveAreaAccompMain.getText().toString()) && !isNullOrEmpty(edtTimeUsedDuringOpMain.getText().toString())) {
+                    tvFieldCapacityResultMain.setText(getFieldCapacity(edtEffectiveAreaAccompMain.getText().toString(),edtTimeUsedDuringOpMain.getText().toString()));
+                }
+                else if(isNullOrEmpty(edtEffectiveAreaAccompMain.getText().toString()) || isNullOrEmpty(edtTimeUsedDuringOpMain.getText().toString())){
+                    tvFieldCapacityResultMain.setText("Not yet acquired");
+                }
+            }
+
+            @Override
+            public void afterTextChanged(Editable s) {
 
+            }
+        });
 
+
+    }
+
+    private void initTextViewData() {
+        tvFieldCapacityResultMain.setText("Not yet Acquired");
+        tvFieldCapacityResultPlant.setText("Not yet Acquired");
+        tvFieldCapacityResultFert.setText("Not yet Acquired");
+        tvDeliveryRateResultFert.setText("Not yet Acquired");
+        tvFieldCapacityResultHarvest.setText("Not yet Acquired");
+        tvLat.setText("Not yet Acquired");
+        tvLong.setText("Not yet Acquired");
+    }
+
+    private void setCheckBoxData() {
+        landClear = "";
+        prePlant = "";
+        planting = "";
+        fertilizer = "";
+        pesticide = "";
+        irrigationDrainage = "";
+        cultivation = "";
+        ratooning = "";
+        harvest = "";
+        postHarvest = "";
+        hauling = "";
+    }
+
+    public static boolean isNullOrEmpty(String str) {
+        return str == null || str.isEmpty();
     }
 
     private void spinYearsSetAdapter() {
@@ -454,6 +509,12 @@
         bigMargin = (int) pxFromDp(this, 32);
     }
 
+    private String getFieldCapacity(String area,String time){
+        String fieldCapacity = "";
+        fieldCapacity = String.valueOf(Double.parseDouble(area) / Double.parseDouble(time));
+        return fieldCapacity;
+    }
+
     public void saveImplement() {
 //        if (machineType.trim().isEmpty() ||
 //                machineQRCode.trim().isEmpty() ||
@@ -464,13 +525,20 @@
 //        else {
         Intent dataAddImplement = new Intent();
 
-        getComputations();
+//        getComputations();
 
         dateToStr = new SimpleDateFormat("MM/dd/yy HH:mm:ss").format(new Date());
 
         String implementType = spinImplementType.getSelectedItem().toString();
         String implementQRCode = edtQRCode.getText().toString();
 
+        if(isNullOrEmpty(encodedImage)){
+            encodedImage = "Not yet Acquired";
+        }
+
+        if (isNullOrEmpty(accuracy)){
+            accuracy = "Not yet Acquired";
+        }
 
         String temp = spinMachineUsing.getSelectedItem().toString();
 //        machineListViewModel.getAllMachines().observe(this, new Observer<List<Machines>>() {
@@ -489,7 +557,7 @@
         dataAddImplement.putExtra(EXTRA_IMP_TYPE, spinImplementType.getSelectedItem().toString());
         dataAddImplement.putExtra(EXTRA_IMP_QR, edtQRCode.getText().toString());
         dataAddImplement.putExtra(EXTRA_DATE, dateToStr);
-        dataAddImplement.putExtra(EXTRA_USED_ON, temp.substring(2,14));
+        dataAddImplement.putExtra(EXTRA_USED_ON, temp.substring(2, 14));
         dataAddImplement.putExtra(EXTRA_USED_COMPLETE, temp);
         dataAddImplement.putExtra(EXTRA_LAND_CLEAR, landClear);
         dataAddImplement.putExtra(EXTRA_PRE_PLANT, prePlant);
@@ -534,7 +602,7 @@
         dataAddImplement.putExtra(EXTRA_AVE_YIELD_HARVEST, edtAveYieldHarvest.getText().toString());
         dataAddImplement.putExtra(EXTRA_TSA_GRAB, edtTotalServiceAreaGrab.getText().toString());
         dataAddImplement.putExtra(EXTRA_AVE_OP_HOURS_GRAB, edtHoursPDayGrab.getText().toString());
-        dataAddImplement.putExtra(EXTRA_AVE_OP_DAYS_HARVEST, edtDaysPSeasonHarvest.getText().toString());
+        dataAddImplement.putExtra(EXTRA_AVE_OP_DAYS_GRAB, edtDaysPSeasonGrab.getText().toString());
 //        dataAddImplement.putExtra(EXTRA_EFF_AREA_ACC_GRAB,effe);
         dataAddImplement.putExtra(EXTRA_LOAD_CAP_GRAB, edtLoadCapacityGrab.getText().toString());
         dataAddImplement.putExtra(EXTRA_NUM_LOAD_GRAB, edtNumberofLoadsGrab.getText().toString());
@@ -558,73 +626,6 @@
 //        }
     }
 
-    private void getComputations() {
-
-        int fieldCap = 0, deliveryCap = 0;
-        switch (spinImplementType.getSelectedItem().toString()) {
-            case "SUBSOILER":
-            case "MOLDBOARD PLOW":
-            case "DISC PLOW":
-            case "CHISEL PLOW":
-            case "DISC HARROW":
-            case "POWER HARROW":
-            case "SPIKE-TOOTH HARROW":
-            case "FURROWER":
-            case "FIELD CULTIVATOR":
-            case "INTERROW CULTIVATOR":
-            case "CUTAWAY CULTIVATOR":
-            case "RATOON MANAGER / STUBBLE SHAVER":
-            case "THRASH RAKE":
-            case "WEEDER":
-            case "ROTAVATOR":
-            case "TRASH INCORPORATOR":
-                fieldCap = Integer.parseInt(edtEffectiveAreaAccompMain.getText().toString())/Integer.parseInt(edtTimeUsedDuringOpMain.getText().toString());
-                Log.d("Field Cap", String.valueOf(fieldCap));
-                tvFieldCapacityResultMain.setText(String.valueOf(fieldCap));
-                break;
-            case "MECHANICAL PLANTER":
-
-                break;
-            case "GRANULAR FERTILIZER APPLICATOR":
-            case "FERTILIZER APPLICATOR WITH CUTAWAY":
-                hideAll();
-                showFert();
-                paramsTSAFert.topToBottom = R.id.cbHauling;
-                paramsTSAFert.topMargin = bigMargin;
-                edtTotalServiceAreaFert.setLayoutParams(paramsTSAFert);
-                paramsYearAcquired.topToBottom = R.id.tvDeliveryRateResultFert;
-                break;
-            case "MECHANICAL HARVESTER":
-                hideAll();
-                showHarvest();
-                paramsTSAHarvest.topToBottom = R.id.cbHauling;
-                paramsTSAHarvest.topMargin = bigMargin;
-                edtTotalServiceAreaHarvest.setLayoutParams(paramsTSAHarvest);
-                paramsYearAcquired.topToBottom = R.id.tvTonCannesPHaHarvest;
-                break;
-            case "CANE GRAB LOADERS":
-                hideAll();
-                showGrab();
-                paramsTSAGrab.topToBottom = R.id.cbHauling;
-                paramsTSAGrab.topMargin = bigMargin;
-                edtTotalServiceAreaGrab.setLayoutParams(paramsTSAGrab);
-                paramsYearAcquired.topToBottom = R.id.tvLoadPHaGrab;
-                break;
-            case "DITCHER":
-                hideAll();
-                showDitch();
-                paramsTSADitch.topToBottom = R.id.cbHauling;
-                paramsTSADitch.topMargin = bigMargin;
-                edtTotalServiceAreaDitch.setLayoutParams(paramsTSADitch);
-                paramsYearAcquired.topToBottom = R.id.tvDepthCutDitch;
-                break;
-            default:
-                hideAll();
-                paramsYearAcquired.topToBottom = R.id.cbHauling;
-                break;
-        }
-    }
-
     public static float pxFromDp(final Context context, final float dp) {
         return dp * context.getResources().getDisplayMetrics().density;
     }
@@ -1073,9 +1074,7 @@
     public void askCameraPermission() {
         if (ContextCompat.checkSelfPermission(this, Manifest.permission.CAMERA) != PackageManager.PERMISSION_GRANTED) {
             ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.CAMERA}, CAMERA_PERM_CODE);
-        }
-        else {
-            //TODO ADD PICTURE INTENT
+        } else {
         }
 
     }
Index: app/src/main/java/com/m3das/biomech/design/AddMachineActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.m3das.biomech.design;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.constraintlayout.widget.ConstraintLayout;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.lifecycle.ViewModelProvider;\r\n\r\nimport android.Manifest;\r\nimport android.app.Activity;\r\nimport android.content.ContentValues;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Matrix;\r\nimport android.graphics.Paint;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport android.text.InputFilter;\r\nimport android.util.Base64;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.androidbuts.multispinnerfilter.KeyPairBoolData;\r\nimport com.androidbuts.multispinnerfilter.MultiSpinnerListener;\r\nimport com.androidbuts.multispinnerfilter.MultiSpinnerSearch;\r\nimport com.androidbuts.multispinnerfilter.SingleSpinnerListener;\r\nimport com.androidbuts.multispinnerfilter.SingleSpinnerSearch;\r\nimport com.google.android.gms.common.api.CommonStatusCodes;\r\nimport com.google.android.gms.vision.barcode.Barcode;\r\nimport com.m3das.biomech.design.profiledb.Profile;\r\nimport com.m3das.biomech.design.viewmodels.ProfileViewModel;\r\nimport com.m3das.biomech.design.viewmodels.MachineListViewModel;\r\n\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.FileNotFoundException;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.List;\r\n\r\npublic class AddMachineActivity extends AppCompatActivity {\r\n    private ImageButton camera, gallery, getLocation, btnScanQR;\r\n    private Button btnSave;\r\n    private int bigMargin, smallMargin;\r\n    private int stringArrayValue;\r\n    private ImageView selectedImage;\r\n    private EditText edtQRCode, edtCapacity, edtAveYield, edtNumLoads, edtRate, edtAveOpHours, edtAveOpDays, edtServiceArea, edtNameOfOwnerOrg,\r\n            edtCustomRate, edtCustomRateUnit, edtOtherProblems, edtOtherAgency, edtOtherBrand, edtOtherModel, edtRatedPower,\r\n            edtRentProv, edtRentMun, edtRentBrgy;\r\n    private TextView tvLat, tvLong, tvTypeOfMill, tvBrand, tvOwnership, tvTypeOfTubewells, tvMachineAvailability, tvConditionPresent, tvLocation, tvModel, tvCommas;\r\n    private Spinner spinMachineType, spinTypeOfMill, spinRental, spinCustomUnit, spinAvailability, spinConditionPresent, spinRespName,\r\n            spinTypeofTubeWells, spinOwnership, spinPurchGrantDono, spinAgency, spinBrand, spinModel, spinYearAcquired, spinConditionAcquired, spinLocationOfMachine\r\n            //spinRentProv, spinRentMun, spinProvince, spinMunicipality\r\n            ;\r\n    private String encodedImage, listOfProblems, accuracy, dateToStr, resCode, resName;\r\n\r\n    private MultiSpinnerSearch multspinProblemsUnused\r\n            //multspinRentBrgy\r\n            ;\r\n    private SingleSpinnerSearch singleSpinnerSearch, singlespinProvince, singlespinMunicipality, singlespinBarangay\r\n            //singlespinBarangay\r\n            ;\r\n    private Intent intentFromDb;\r\n    private ConstraintLayout.LayoutParams paramstvBrand, paramstvOwnership, paramsedtCapacity, paramsedtNumLoads, paramstvConditionPresent, paramstvLocation, paramstvModel, paramsedtRatedPower,\r\n            paramsedtAveYield, paramsedtRate, paramstvTypeTubewells, paramsedtNameOfOwnerOrg, paramstvMachineAvailability;\r\n    private MachineListViewModel machineListViewModel;\r\n    private ProfileViewModel profileViewModel;\r\n    private ArrayList<String> profilesListAfterSet = new ArrayList<>();\r\n    public static final int CAMERA_PERM_CODE = 101;\r\n    public static final int CAMERA_REQUEST_CODE = 102;\r\n    public static final int GALLERY_REQUEST_CODE = 105;\r\n    public static final int LOCATION_REQUEST_CODE = 127;\r\n    public static final int WRITE_PERM_CODE = 279;\r\n    public static final String EXTRA_MACHINE_TYPE = \"ADDMACHINE_EXTRA_MACHINE_TYPE\";\r\n    public static final String EXTRA_TYPE_TUBEWELLS = \"ADDMACHINE_EXTRA_TYPE_TUBEWELLS\";\r\n    public static final String EXTRA_TYPE_MILL = \"ADDMACHINE_EXTRA_TYPE_MILL\";\r\n    public static final String EXTRA_MACHINE_QRCODE = \"ADDMACHINE_EXTRA_MACHINE_QRCODE\";\r\n    public static final String EXTRA_LAT = \"ADDMACHINE_EXTRA_LAT\";\r\n    public static final String EXTRA_LONG = \"ADDMACHINE_EXTRA_LONG\";\r\n    public static final String EXTRA_ID = \"ADDMACHINE_EXTRA_ID\";\r\n    public static final String EXTRA_DATE_TIME = \"ADDMACHINE_EXTRA_DATE_TIME\";\r\n    public static final String EXTRA_BRAND = \"ADDMACHINE_EXTRA_BRAND\";\r\n    public static final String EXTRA_BRAND_SPECIFY = \"ADDMACHINE_EXTRA_BRAND_SPECIFY\";\r\n    public static final String EXTRA_MODEL = \"ADDMACHINE_EXTRA_MODEL\";\r\n    public static final String EXTRA_MODEL_SPECIFY = \"ADDMACHINE_EXTRA_MODEL_SPECIFY\";\r\n    public static final String EXTRA_RATED_POWER = \"ADDMACHINE_EXTRA_RATED_POWER\";\r\n    public static final String EXTRA_SERVICE_AREA = \"ADDMACHINE_EXTRA_SERVICE_AREA\";\r\n    public static final String EXTRA_AVE_OP_HOURS = \"ADDMACHINE_EXTRA_AVE_OP_HOURS\";\r\n    public static final String EXTRA_AVE_OP_DAYS = \"ADDMACHINE_EXTRA_AVE_OP_DAYS\";\r\n    public static final String EXTRA_CAPACITY = \"ADDMACHINE_EXTRA_CAPACITY\";\r\n    public static final String EXTRA_AVE_YIELD = \"ADDMACHINE_EXTRA_AVE_YIELD\";\r\n    public static final String EXTRA_NUM_LOADS = \"ADDMACHINE_EXTRA_NUM_LOADS\";\r\n    public static final String EXTRA_RATE = \"ADDMACHINE_EXTRA_RATE\";\r\n    public static final String EXTRA_OWNERSHIP = \"ADDMACHINE_EXTRA_OWNERSHIP\";\r\n    public static final String EXTRA_PURCH_GRANT_DONO = \"ADDMACHINE_EXTRA_PURCH_GRANT_DONO\";\r\n    public static final String EXTRA_AGENCY = \"ADDMACHINE_EXTRA_AGENCY\";\r\n    public static final String EXTRA_AGENCY_SPECIFY = \"ADDMACHINE_EXTRA_AGENCY_SPECIFY\";\r\n    public static final String EXTRA_NAME_OWNER = \"ADDMACHINE_EXTRA_NAME_OWNER\";\r\n    public static final String EXTRA_YEAR_ACQUIRED = \"ADDMACHINE_EXTRA_YEAR_ACQUIRED\";\r\n    public static final String EXTRA_CONDITION_ACQUIRED = \"ADDMACHINE_EXTRA_CONDITION_ACQUIRED\";\r\n    public static final String EXTRA_RENTAL = \"ADDMACHINE_EXTRA_RENTAL\";\r\n    public static final String EXTRA_CUSTOM_RATE = \"ADDMACHINE_EXTRA_CUSTOM_RATE\";\r\n    public static final String EXTRA_CUSTOM_UNIT = \"ADDMACHINE_EXTRA_CUSTOM_UNIT\";\r\n    public static final String EXTRA_CUSTOM_UNIT_SPECIFY = \"ADDMACHINE_EXTRA_CUSTOM_UNIT_SPECIFY\";\r\n    public static final String EXTRA_AVAILABILITY = \"ADDMACHINE_EXTRA_AVAILABILITY\";\r\n    public static final String EXTRA_RENT_PROV = \"ADDMACHINE_EXTRA_RENT_PROV\";\r\n    public static final String EXTRA_RENT_MUN = \"ADDMACHINE_EXTRA_RENT_MUN\";\r\n    public static final String EXTRA_RENT_BRGY = \"ADDMACHINE_EXTRA_RENT_BRGY\";\r\n    public static final String EXTRA_CONDITION = \"ADDMACHINE_EXTRA_CONDITION\";\r\n    public static final String EXTRA_PROBLEMS = \"ADDMACHINE_EXTRA_PROBLEMS\";\r\n    public static final String EXTRA_PROBLEMS_SPECIFY = \"ADDMACHINE_EXTRA_PROBLEMS_SPECIFY\";\r\n    public static final String EXTRA_LOCATION = \"ADDMACHINE_EXTRA_LOCATION\";\r\n    public static final String EXTRA_PROV = \"ADDMACHINE_EXTRA_PROV\";\r\n    public static final String EXTRA_MUN = \"ADDMACHINE_EXTRA_MUN\";\r\n    public static final String EXTRA_BRGY = \"ADDMACHINE_EXTRA_BRGY\";\r\n    public static final String EXTRA_ACC = \"ADDMACHINE_EXTRA_ACCURACY\";\r\n    public static final String EXTRA_RES_CODE = \"ADDMACHINE_EXTRA_RES_CODE\";\r\n    public static final String EXTRA_RES_NAME = \"ADDMACHINE_EXTRA_RES_NAME\";\r\n    static Uri capturedImageUri = null;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.add_machine_activity);\r\n\r\n        askCameraPermission();\r\n        requestExtrernalPermission();\r\n\r\n        if (checkExternalPermission()) {\r\n            // Code for above or equal 23 API Oriented Device\r\n            // Your Permission granted already .Do next code\r\n        } else {\r\n            requestExtrernalPermission(); // Code for permission\r\n        }\r\n\r\n        setMargins();\r\n        initViews();\r\n        hide();\r\n\r\n        machineListViewModel = new ViewModelProvider(this).get(MachineListViewModel.class);\r\n\r\n        setInputFilters();\r\n\r\n        initAllLayoutParameters();\r\n\r\n        profileViewModel = new ViewModelProvider(this).get(ProfileViewModel.class);\r\n\r\n        profileViewModel.getAllProfiles().observe(this, new Observer<List<Profile>>() {\r\n            @Override\r\n            public void onChanged(List<Profile> profiles) {\r\n                ArrayList<String> stringArrayList = new ArrayList<>();\r\n                stringArrayList.add(\"\");\r\n                for (int i = profiles.size() - 1; i >= 0; i--) {\r\n                    stringArrayList.add(profiles.get(i).getId() + \" \" + profiles.get(i).getName_respondent());\r\n                }\r\n\r\n                ArrayAdapter<String> adapter = new ArrayAdapter<String>(getApplicationContext(), android.R.layout.simple_spinner_item, stringArrayList);\r\n                adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n                spinRespName.setAdapter(adapter);\r\n            }\r\n        });\r\n\r\n        ArrayList<String> years = new ArrayList<String>();\r\n        years.add(\"\");\r\n        for (int i = 1960; i <= Calendar.getInstance().get(Calendar.YEAR); i++) {\r\n            years.add(Integer.toString(i));\r\n\r\n        }\r\n\r\n        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, years);\r\n        spinYearAcquired.setAdapter(adapter);\r\n\r\n        multspinProblemsUnused.setHintText(\"Select Problems...\");\r\n\r\n        camera.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n                ContentValues values = new ContentValues();\r\n                String timeStamp = new SimpleDateFormat(\"yyyyMMdd_HHmmss\").format(new Date());\r\n                String imageFileName = \"JPEG_\" + timeStamp + \"_\";\r\n                values.put(MediaStore.Images.Media.TITLE, imageFileName);\r\n                values.put(MediaStore.Images.Media.DESCRIPTION, \"From the Camera\");\r\n                capturedImageUri = getContentResolver().insert(MediaStore.Images.Media.EXTERNAL_CONTENT_URI, values);\r\n                //Camera intent\r\n                Intent cameraIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n                cameraIntent.putExtra(MediaStore.EXTRA_OUTPUT, capturedImageUri);\r\n                startActivityForResult(cameraIntent, CAMERA_REQUEST_CODE);\r\n\r\n            }\r\n        });\r\n\r\n        gallery.setOnClickListener(view -> {\r\n            Intent gallery = new Intent(Intent.ACTION_PICK, MediaStore.Images.Media.EXTERNAL_CONTENT_URI);\r\n            startActivityForResult(gallery, GALLERY_REQUEST_CODE);\r\n\r\n        });\r\n\r\n        btnScanQR.setOnClickListener(view -> {\r\n            Intent intent = new Intent(AddMachineActivity.this, ScanBarcodeActivity.class);\r\n            startActivityForResult(intent, 0);\r\n            Toast.makeText(AddMachineActivity.this, \"Scanning QR\", Toast.LENGTH_SHORT).show();\r\n        });\r\n\r\n        getLocation.setOnClickListener(view -> {\r\n            Toast.makeText(AddMachineActivity.this, \"Map Clicked\", Toast.LENGTH_SHORT).show();\r\n            Intent intent = new Intent(view.getContext(), LocationMapsActivity.class);\r\n            startActivityForResult(intent, LOCATION_REQUEST_CODE);\r\n        });\r\n\r\n        Intent intent = getIntent();\r\n\r\n        if (intent.hasExtra(EXTRA_ID)) {\r\n\r\n            editItemSelected(intent);\r\n\r\n        } else {\r\n            setTitle(\"Adding Machine\");\r\n        }\r\n\r\n\r\n        btnSave.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                saveNote();\r\n            }\r\n        });\r\n//        multspinRentBrgy.setHintText(\"Select Barangays\");\r\n//        singlespinBarangay.setItems(pairingOfList(Arrays.asList(getResources().getStringArray(R.array.blank))), new SingleSpinnerListener() {\r\n//            @Override\r\n//            public void onItemsSelected(KeyPairBoolData selectedItem) {\r\n//\r\n//            }\r\n//\r\n//            @Override\r\n//            public void onClear() {\r\n//\r\n//            }\r\n//        });\r\n//        multspinRentBrgy.setItems(pairingOfList(Arrays.asList(getResources().getStringArray(R.array.blank))), new MultiSpinnerListener() {\r\n//            @Override\r\n//            public void onItemsSelected(List<KeyPairBoolData> selectedItems) {\r\n//                for (int i = 0; i < selectedItems.size(); i++) {\r\n//                    Log.d(\"MULT SPIN\", i + \" : \" + selectedItems.get(i).getName() + \" : \" + selectedItems.get(i).isSelected());\r\n//                }\r\n//            }\r\n//        });\r\n//        spinProvince.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n//            @Override\r\n//            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {\r\n//                provMunSort(i);\r\n//            }\r\n//\r\n//            @Override\r\n//            public void onNothingSelected(AdapterView<?> adapterView) {\r\n//\r\n//            }\r\n//        });\r\n        spinBrand.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n                brandSelect(spinBrand.getSelectedItem().toString());\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) {\r\n\r\n            }\r\n        });\r\n\r\n        spinModel.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n                modelSelect(spinModel.getSelectedItem().toString());\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) {\r\n\r\n            }\r\n        });\r\n\r\n        spinAgency.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n                otherAgency(position);\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) {\r\n\r\n            }\r\n        });\r\n\r\n\r\n        spinConditionPresent.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {\r\n                problemsUnused(i);\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> adapterView) {\r\n\r\n            }\r\n        });\r\n\r\n        spinAvailability.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {\r\n                availabilitySelected(i);\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> adapterView) {\r\n\r\n            }\r\n        });\r\n\r\n        spinCustomUnit.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {\r\n                customUnitSelect(i);\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> adapterView) {\r\n\r\n            }\r\n        });\r\n\r\n        spinRental.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {\r\n                rentSelect(i);\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> adapterView) {\r\n\r\n            }\r\n        });\r\n\r\n        spinOwnership.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {\r\n                ownershipSelect(i);\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> adapterView) {\r\n                ownershipSelect(0);\r\n            }\r\n        });\r\n\r\n        spinPurchGrantDono.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {\r\n                purchGrantDonoSelect(i);\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> adapterView) {\r\n\r\n            }\r\n        });\r\n\r\n        spinMachineType.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {\r\n                machineSelect(i);\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> adapterView) {\r\n\r\n            }\r\n        });\r\n\r\n        List<KeyPairBoolData> allProvinces = pairingOfList(Arrays.asList(getResources().getStringArray(R.array.provinces)));\r\n        singlespinProvince.setItems(allProvinces, new SingleSpinnerListener() {\r\n            @Override\r\n            public void onItemsSelected(KeyPairBoolData selectedItem) {\r\n\r\n                Log.d(\"Single Prov\", selectedItem.getName());\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onClear() {\r\n\r\n            }\r\n        });\r\n\r\n        List<KeyPairBoolData> allMunicipalities = pairingOfList(Arrays.asList(getResources().getStringArray(R.array.municipalities)));\r\n        singlespinMunicipality.setItems(allMunicipalities, new SingleSpinnerListener() {\r\n            @Override\r\n            public void onItemsSelected(KeyPairBoolData selectedItem) {\r\n\r\n                Log.d(\"Single Mun\", selectedItem.getName());\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onClear() {\r\n            }\r\n        });\r\n\r\n        List<KeyPairBoolData> allBarangays = pairingOfList(Arrays.asList(getResources().getStringArray(R.array.barangays)));\r\n        singlespinBarangay.setItems(allBarangays, new SingleSpinnerListener() {\r\n            @Override\r\n            public void onItemsSelected(KeyPairBoolData selectedItem) {\r\n                Log.d(\"Single Brgy\", selectedItem.getName());\r\n            }\r\n\r\n            @Override\r\n            public void onClear() {\r\n            }\r\n        });\r\n    }\r\n\r\n    private void initAllLayoutParameters() {\r\n        paramstvBrand = (ConstraintLayout.LayoutParams) tvBrand.getLayoutParams();\r\n        paramstvMachineAvailability = (ConstraintLayout.LayoutParams) tvMachineAvailability.getLayoutParams();\r\n        paramsedtNameOfOwnerOrg = (ConstraintLayout.LayoutParams) edtNameOfOwnerOrg.getLayoutParams();\r\n        paramstvConditionPresent = (ConstraintLayout.LayoutParams) tvConditionPresent.getLayoutParams();\r\n        paramstvLocation = (ConstraintLayout.LayoutParams) tvLocation.getLayoutParams();\r\n        paramstvModel = (ConstraintLayout.LayoutParams) tvModel.getLayoutParams();\r\n        paramsedtRatedPower = (ConstraintLayout.LayoutParams) edtRatedPower.getLayoutParams();\r\n\r\n        paramstvBrand.topToBottom = R.id.edtQRCode;\r\n        paramstvBrand.topMargin = bigMargin;\r\n        tvBrand.setLayoutParams(paramstvBrand);\r\n\r\n        paramstvMachineAvailability.topToBottom = R.id.spinRental;\r\n        paramstvMachineAvailability.topMargin = bigMargin;\r\n        tvMachineAvailability.setLayoutParams(paramstvMachineAvailability);\r\n\r\n        paramsedtNameOfOwnerOrg.topToBottom = R.id.spinOwnership;\r\n        paramsedtNameOfOwnerOrg.topMargin = bigMargin;\r\n        edtNameOfOwnerOrg.setLayoutParams(paramsedtNameOfOwnerOrg);\r\n    }\r\n\r\n    private void setInputFilters() {\r\n        edtAveOpHours.setFilters(new InputFilter[]{new MinMaxFilter(\"0\", \"24\")});\r\n        edtAveOpDays.setFilters(new InputFilter[]{new MinMaxFilter(\"1\", \"365\")});\r\n        edtServiceArea.setFilters(new InputFilter[]{new DecimalDigitsInputFilter(5, 2)});\r\n    }\r\n\r\n    public static float pxFromDp(final Context context, final float dp) {\r\n        return dp * context.getResources().getDisplayMetrics().density;\r\n    }\r\n\r\n    private void setMargins() {\r\n        smallMargin = (int) pxFromDp(this, 8);\r\n        bigMargin = (int) pxFromDp(this, 32);\r\n    }\r\n\r\n    public List<KeyPairBoolData> pairingOfList(List<String> stringList) {\r\n        final List<KeyPairBoolData> listArray1 = new ArrayList<>();\r\n        List<String> list = stringList;\r\n        for (int i = 0; i < list.size(); i++) {\r\n            KeyPairBoolData h = new KeyPairBoolData();\r\n            h.setId(i + 1);\r\n            h.setName(list.get(i));\r\n            listArray1.add(h);\r\n        }\r\n        return listArray1;\r\n    }\r\n\r\n    private void brandSelect(String position) {\r\n        String pos = position;\r\n        String typeMachine = spinMachineType.getSelectedItem().toString();\r\n        switch (pos) {\r\n            case \"OTHERS\":\r\n                edtOtherBrand.setVisibility(View.VISIBLE);\r\n                paramstvModel.topToBottom = R.id.edtOtherBrand;\r\n                paramstvModel.topToBottom = R.id.edtOtherBrand;\r\n                ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, Arrays.asList(getResources().getStringArray(R.array.specify_only_brand_boom_sprayer_cane_grab_infield)));\r\n                dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n                spinModel.setAdapter(dataAdapter);\r\n                break;\r\n            default:\r\n                edtOtherBrand.setVisibility(View.INVISIBLE);\r\n                paramstvModel.topToBottom = R.id.spinBrand;\r\n                switch (typeMachine) {\r\n                    case \"2 WHEEL TRACTOR\":\r\n                        sortingBrand2WheelTractor(pos);\r\n                        break;\r\n                    case \"4 WHEEL TRACTOR\":\r\n                        sortingBrand4WheelTractor(pos);\r\n                        break;\r\n                    case \"WATER PUMP\":\r\n                        sortingBrandWaterPump(pos);\r\n                        break;\r\n\r\n                    case \"HARVESTER\":\r\n                        sortingBrandHarvester(pos);\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                break;\r\n        }\r\n        paramstvModel.topMargin = bigMargin;\r\n        tvModel.setLayoutParams(paramstvModel);\r\n\r\n\r\n    }\r\n\r\n    private void editItemSelected(Intent intent1) {\r\n        int position = -1;\r\n\r\n        intentFromDb = intent1;\r\n        Intent intent = intent1;\r\n\r\n        String stringCompare = intent.getStringExtra(EXTRA_MACHINE_TYPE);\r\n        ArrayAdapter<CharSequence> adaptercompare = ArrayAdapter.createFromResource(this, R.array.machine_types_sugarcane, android.R.layout.simple_spinner_item);\r\n        adaptercompare.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        if (stringCompare != null) {\r\n            position = adaptercompare.getPosition(stringCompare);\r\n        }\r\n        Log.d(\"Position MACHINE TYPE\", \"Position is: \" + intent.getStringExtra(EXTRA_MACHINE_TYPE) + \" \" + position);\r\n        spinMachineType.setSelection(position);\r\n\r\n        edtQRCode.setText(intent.getStringExtra(EXTRA_MACHINE_QRCODE));\r\n\r\n        stringCompare = intent.getStringExtra(EXTRA_TYPE_TUBEWELLS);\r\n        adaptercompare = ArrayAdapter.createFromResource(this, R.array.type_of_tubewells, android.R.layout.simple_spinner_item);\r\n        adaptercompare.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        if (!isNullOrEmpty(stringCompare.trim())) {\r\n            position = adaptercompare.getPosition(stringCompare);\r\n        } else {\r\n            position = 0;\r\n        }\r\n        Log.d(\"Position TUBEWELL\", \"Position is: \" + intent.getStringExtra(EXTRA_TYPE_TUBEWELLS) + \" \" + position);\r\n        spinTypeofTubeWells.setSelection(position);\r\n\r\n        stringCompare = intent.getStringExtra(EXTRA_TYPE_MILL);\r\n        adaptercompare = ArrayAdapter.createFromResource(this, R.array.type_of_mill, android.R.layout.simple_spinner_item);\r\n        adaptercompare.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        if (!isNullOrEmpty(stringCompare.trim())) {\r\n            position = adaptercompare.getPosition(stringCompare);\r\n        } else {\r\n            position = 0;\r\n        }\r\n        Log.d(\"Position TYPE MILL\", \"Position is: \" + intent.getStringExtra(EXTRA_TYPE_MILL) + \" \" + position);\r\n        spinTypeOfMill.setSelection(position);\r\n\r\n//        stringCompare = intent.getStringExtra(EXTRA_BRAND);\r\n//        adaptercompare = ArrayAdapter.createFromResource(this, R.array.all_machine_brands, android.R.layout.simple_spinner_item);\r\n//        adaptercompare.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n//        if (!isNullOrEmpty(stringCompare)) {\r\n//\r\n//            spinBrand.getAdapter().getItem();\r\n//            position = adaptercompare.getPosition(stringCompare);\r\n//        }\r\n//\r\n//        for (int i = 0; i < adaptercompare.getCount(); i++) {\r\n//            Log.d(\"Array:\", adaptercompare.getItem(i).toString());\r\n//        }\r\n//\r\n//        Log.d(\"Position BRAND\", \"Position is: \" + intent.getStringExtra(EXTRA_BRAND) + \" \" + position);\r\n//        spinBrand.setSelection(position);\r\n\r\n        edtOtherBrand.setText(intent.getStringExtra(EXTRA_BRAND_SPECIFY));\r\n\r\n//        stringCompare = intent.getStringExtra(EXTRA_MODEL);\r\n//        adaptercompare = ArrayAdapter.createFromResource(this, R.array.all_models_machines, android.R.layout.simple_spinner_item);\r\n//        adaptercompare.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n//        if (!isNullOrEmpty(stringCompare)) {\r\n//            position = adaptercompare.getPosition(stringCompare);\r\n//        }\r\n//        Log.d(\"Position MODEL\", \"Position is: \" + intent.getStringExtra(EXTRA_MODEL) + \" \" + position);\r\n//        spinModel.setSelection(position);\r\n\r\n        edtOtherModel.setText(intent.getStringExtra(EXTRA_MODEL_SPECIFY));\r\n\r\n        edtRatedPower.setText(intent.getStringExtra(EXTRA_RATED_POWER));\r\n        edtServiceArea.setText(intent.getStringExtra(EXTRA_SERVICE_AREA));\r\n        edtAveOpHours.setText(intent.getStringExtra(EXTRA_AVE_OP_HOURS));\r\n        edtAveOpDays.setText(intent.getStringExtra(EXTRA_AVE_OP_DAYS));\r\n        edtCapacity.setText(intent.getStringExtra(EXTRA_CAPACITY));\r\n        edtAveYield.setText(intent.getStringExtra(EXTRA_AVE_YIELD));\r\n        edtNumLoads.setText(intent.getStringExtra(EXTRA_NUM_LOADS));\r\n        edtRate.setText(intent.getStringExtra(EXTRA_RATE));\r\n\r\n        stringCompare = intent.getStringExtra(EXTRA_OWNERSHIP);\r\n        adaptercompare = ArrayAdapter.createFromResource(this, R.array.ownership_of_machine, android.R.layout.simple_spinner_item);\r\n        adaptercompare.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        if (!isNullOrEmpty(stringCompare)) {\r\n            position = adaptercompare.getPosition(stringCompare);\r\n        }\r\n        Log.d(\"Position OWNERSHIP\", \"Position is: \" + intent.getStringExtra(EXTRA_OWNERSHIP) + \" \" + position);\r\n        spinOwnership.setSelection(position);\r\n\r\n        stringCompare = intent.getStringExtra(EXTRA_PURCH_GRANT_DONO);\r\n        adaptercompare = ArrayAdapter.createFromResource(this, R.array.purchasing_method, android.R.layout.simple_spinner_item);\r\n        adaptercompare.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        if (!isNullOrEmpty(stringCompare)) {\r\n            position = adaptercompare.getPosition(stringCompare);\r\n        }\r\n        Log.d(\"Position PURCHGRANTDONO\", \"Position is: \" + intent.getStringExtra(EXTRA_PURCH_GRANT_DONO) + \" \" + position);\r\n        spinPurchGrantDono.setSelection(position);\r\n\r\n        stringCompare = intent.getStringExtra(EXTRA_AGENCY);\r\n        adaptercompare = ArrayAdapter.createFromResource(this, R.array.agency, android.R.layout.simple_spinner_item);\r\n        adaptercompare.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        if (!isNullOrEmpty(stringCompare)) {\r\n            position = adaptercompare.getPosition(stringCompare);\r\n        }\r\n        Log.d(\"Position AGENCY\", \"Position is: \" + intent.getStringExtra(EXTRA_AGENCY) + \" \" + position);\r\n        spinAgency.setSelection(position);\r\n\r\n        edtOtherAgency.setText(intent.getStringExtra(EXTRA_AGENCY_SPECIFY));\r\n\r\n        edtNameOfOwnerOrg.setText(intent.getStringExtra(EXTRA_NAME_OWNER));\r\n\r\n        ArrayList<String> years = new ArrayList<String>();\r\n        years.add(\"\");\r\n        for (int i = 1960; i <= Calendar.getInstance().get(Calendar.YEAR); i++) {\r\n            years.add(Integer.toString(i));\r\n\r\n        }\r\n\r\n        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, years);\r\n\r\n        stringCompare = intent.getStringExtra(EXTRA_YEAR_ACQUIRED);\r\n        if (!isNullOrEmpty(stringCompare)) {\r\n            position = adapter.getPosition(stringCompare);\r\n        }\r\n        Log.d(\"Position YEAR\", \"Position is: \" + intent.getStringExtra(EXTRA_YEAR_ACQUIRED) + \" \" + position);\r\n        spinYearAcquired.setSelection(position);\r\n\r\n//        adapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, Variable.getListResCode());\r\n//        stringCompare = intent.getStringExtra(EXTRA_RES_CODE);\r\n//        if (!isNullOrEmpty(stringCompare)) {\r\n//            position = adapter.getPosition(stringCompare);\r\n//        }\r\n//        Log.d(\"Position RESCODE\", \"Position is: \" + stringCompare + \" \" + position);\r\n//        spinRespName.setSelection(position);\r\n\r\n        stringCompare = intent.getStringExtra(EXTRA_CONDITION_ACQUIRED);\r\n        adaptercompare = ArrayAdapter.createFromResource(this, R.array.condition_when_bought, android.R.layout.simple_spinner_item);\r\n        adaptercompare.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        if (!isNullOrEmpty(stringCompare)) {\r\n            position = adaptercompare.getPosition(stringCompare);\r\n        }\r\n        Log.d(\"Position CONDITION ACQ\", \"Position is: \" + intent.getStringExtra(EXTRA_CONDITION_ACQUIRED) + \" \" + position);\r\n        spinConditionAcquired.setSelection(position);\r\n\r\n        stringCompare = intent.getStringExtra(EXTRA_RENTAL);\r\n        adaptercompare = ArrayAdapter.createFromResource(this, R.array.yes_no, android.R.layout.simple_spinner_item);\r\n        adaptercompare.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        if (!isNullOrEmpty(stringCompare)) {\r\n            position = adaptercompare.getPosition(stringCompare);\r\n        }\r\n        Log.d(\"Position RENTAL\", \"Position is: \" + intent.getStringExtra(EXTRA_RENTAL) + \" \" + position);\r\n        spinRental.setSelection(position);\r\n\r\n        edtCustomRate.setText(intent.getStringExtra(EXTRA_CUSTOM_RATE));\r\n\r\n        stringCompare = intent.getStringExtra(EXTRA_CUSTOM_UNIT);\r\n        adaptercompare = ArrayAdapter.createFromResource(this, R.array.custom_rate_units, android.R.layout.simple_spinner_item);\r\n        adaptercompare.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        if (!isNullOrEmpty(stringCompare)) {\r\n            position = adaptercompare.getPosition(stringCompare);\r\n        }\r\n        Log.d(\"Position CUSTOM UNIT\", \"Position is: \" + intent.getStringExtra(EXTRA_CUSTOM_UNIT) + \" \" + position);\r\n        spinCustomUnit.setSelection(position);\r\n\r\n        edtCustomRateUnit.setText(intent.getStringExtra(EXTRA_CUSTOM_UNIT_SPECIFY));\r\n\r\n        stringCompare = intent.getStringExtra(EXTRA_AVAILABILITY);\r\n        adaptercompare = ArrayAdapter.createFromResource(this, R.array.rent_availablity, android.R.layout.simple_spinner_item);\r\n        adaptercompare.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        if (!isNullOrEmpty(stringCompare)) {\r\n            position = adaptercompare.getPosition(stringCompare);\r\n        }\r\n        Log.d(\"Position AGENCY\", \"Position is: \" + intent.getStringExtra(EXTRA_AVAILABILITY) + \" \" + position);\r\n        spinAvailability.setSelection(position);\r\n\r\n        edtRentProv.setText(intent.getStringExtra(EXTRA_RENT_PROV));\r\n        edtRentMun.setText(intent.getStringExtra(EXTRA_RENT_MUN));\r\n        edtRentBrgy.setText(intent.getStringExtra(EXTRA_RENT_BRGY));\r\n\r\n        stringCompare = intent.getStringExtra(EXTRA_CONDITION);\r\n        adaptercompare = ArrayAdapter.createFromResource(this, R.array.condition, android.R.layout.simple_spinner_item);\r\n        adaptercompare.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        if (!isNullOrEmpty(stringCompare)) {\r\n            position = adaptercompare.getPosition(stringCompare);\r\n        }\r\n        Log.d(\"Position CONDITION\", \"Position is: \" + intent.getStringExtra(EXTRA_CONDITION) + \" \" + position);\r\n        spinConditionPresent.setSelection(position);\r\n\r\n        stringCompare = intent.getStringExtra(EXTRA_LOCATION);\r\n        adaptercompare = ArrayAdapter.createFromResource(this, R.array.location, android.R.layout.simple_spinner_item);\r\n        adaptercompare.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        if (!isNullOrEmpty(stringCompare)) {\r\n            position = adaptercompare.getPosition(stringCompare);\r\n        }\r\n        Log.d(\"Position LOCATION\", \"Position is: \" + intent.getStringExtra(EXTRA_LOCATION) + \" \" + position);\r\n        spinLocationOfMachine.setSelection(position);\r\n\r\n//        edtProvince.setText(intent.getStringExtra(EXTRA_PROV));\r\n//        edtMunicipality.setText(intent.getStringExtra(EXTRA_MUN));\r\n//        edtBarangay.setText(intent.getStringExtra(EXTRA_BRGY));\r\n\r\n\r\n        tvLat.setText(intent.getStringExtra(EXTRA_LAT));\r\n        tvLong.setText(intent.getStringExtra(EXTRA_LONG));\r\n\r\n        accuracy = intent.getStringExtra(EXTRA_ACC);\r\n\r\n        encodedImage = Variable.getStringImage();\r\n\r\n        dateToStr = intent.getStringExtra(EXTRA_DATE_TIME);\r\n\r\n        byte[] decodedString = Base64.decode(Variable.getStringImage(), Base64.DEFAULT);\r\n        Bitmap decodedByte = BitmapFactory.decodeByteArray(decodedString, 0, decodedString.length);\r\n        selectedImage.setImageBitmap(decodedByte);\r\n    }\r\n\r\n    //\r\n    private void sortingBrand4WheelTractor(String position) {\r\n        List<String> stringListModel4WheelTractor = Arrays.asList(getResources().getStringArray(R.array.blank));\r\n        switch (position) {\r\n            case \"AGRINDO\":\r\n                stringListModel4WheelTractor = Arrays.asList(getResources().getStringArray(R.array.agrindo_models_4wheel_tractor));\r\n                break;\r\n            case \"BRANSON\":\r\n                stringListModel4WheelTractor = Arrays.asList(getResources().getStringArray(R.array.branson_models_4wheel_tractor));\r\n                break;\r\n            case \"CASE IH\":\r\n                stringListModel4WheelTractor = Arrays.asList(getResources().getStringArray(R.array.cash_ih_models_4wheel_tractor));\r\n                break;\r\n            case \"DEUTZ-FAHR\":\r\n                stringListModel4WheelTractor = Arrays.asList(getResources().getStringArray(R.array.deutz_fahr_models_4wheel_tractor));\r\n                break;\r\n            case \"EUROTRAC\":\r\n                stringListModel4WheelTractor = Arrays.asList(getResources().getStringArray(R.array.eurotrac_models_4wheel_tactor));\r\n                break;\r\n            case \"FARM ROVER\":\r\n                stringListModel4WheelTractor = Arrays.asList(getResources().getStringArray(R.array.farm_rover_models_4wheel_tractor));\r\n                break;\r\n            case \"FIAT\":\r\n                stringListModel4WheelTractor = Arrays.asList(getResources().getStringArray(R.array.fiat_models_4wheel_tractor));\r\n                break;\r\n            case \"FORD\":\r\n                stringListModel4WheelTractor = Arrays.asList(getResources().getStringArray(R.array.ford_models_4wheel_tractor));\r\n                break;\r\n            case \"FORDSON\":\r\n                stringListModel4WheelTractor = Arrays.asList(getResources().getStringArray(R.array.fordson_models_4wheel_tractor));\r\n                break;\r\n            case \"FOTON\":\r\n                stringListModel4WheelTractor = Arrays.asList(getResources().getStringArray(R.array.foton_models_4wheel_tractor));\r\n                break;\r\n            case \"GLOBAL FARM\":\r\n                stringListModel4WheelTractor = Arrays.asList(getResources().getStringArray(R.array.global_farm_models_4wheel_tractor));\r\n                break;\r\n            case \"INTERNATIONAL HARVESTER IH\":\r\n                stringListModel4WheelTractor = Arrays.asList(getResources().getStringArray(R.array.international_harvester_ih_models_4wheel_tractor));\r\n                break;\r\n            case \"ISEKI\":\r\n                stringListModel4WheelTractor = Arrays.asList(getResources().getStringArray(R.array.iseki_models_4wheel_tractor));\r\n                break;\r\n            case \"ITMCO\":\r\n                stringListModel4WheelTractor = Arrays.asList(getResources().getStringArray(R.array.itmco_models_4wheel_tractor));\r\n                break;\r\n            case \"JOHN DEERE\":\r\n                stringListModel4WheelTractor = Arrays.asList(getResources().getStringArray(R.array.john_deere_models_4wheel_tractor));\r\n                break;\r\n            case \"KAMOL\":\r\n                stringListModel4WheelTractor = Arrays.asList(getResources().getStringArray(R.array.kamol_models_4hwheel_tractors));\r\n                break;\r\n            case \"KIOTI\":\r\n                stringListModel4WheelTractor = Arrays.asList(getResources().getStringArray(R.array.kioti_models_4wheel_tractors));\r\n                break;\r\n            case \"KUBOTA\":\r\n                stringListModel4WheelTractor = Arrays.asList(getResources().getStringArray(R.array.kubota_models_4wheel_tractors));\r\n                break;\r\n            case \"LANDINI\":\r\n                stringListModel4WheelTractor = Arrays.asList(getResources().getStringArray(R.array.landini_models_4wheel_tractors));\r\n                break;\r\n            case \"LEYLAND\":\r\n                stringListModel4WheelTractor = Arrays.asList(getResources().getStringArray(R.array.leyland_models_4wheel_tractors));\r\n                break;\r\n            case \"LOVOL\":\r\n                stringListModel4WheelTractor = Arrays.asList(getResources().getStringArray(R.array.lovol_models_4wheel_tractors));\r\n                break;\r\n            case \"LS\":\r\n                stringListModel4WheelTractor = Arrays.asList(getResources().getStringArray(R.array.ls_models_4wheel_tractors));\r\n                break;\r\n            case \"MAHINDRA\":\r\n                stringListModel4WheelTractor = Arrays.asList(getResources().getStringArray(R.array.mahindra_models_4wheel_tractors));\r\n                break;\r\n            case \"MASSEY FERGUSON\":\r\n                stringListModel4WheelTractor = Arrays.asList(getResources().getStringArray(R.array.massey_ferguson_models_4wheel_tractors));\r\n                break;\r\n            case \"MC CORMICK\":\r\n                stringListModel4WheelTractor = Arrays.asList(getResources().getStringArray(R.array.mc_cormick_models_4wheel_tractors));\r\n                break;\r\n            case \"NEW HOLLAND\":\r\n                stringListModel4WheelTractor = Arrays.asList(getResources().getStringArray(R.array.new_holland_models_4wheel_tractors));\r\n                break;\r\n            case \"PREET\":\r\n                stringListModel4WheelTractor = Arrays.asList(getResources().getStringArray(R.array.preet_models_4wheel_tractors));\r\n                break;\r\n            case \"SHUHE\":\r\n                stringListModel4WheelTractor = Arrays.asList(getResources().getStringArray(R.array.shuhe_models_4wheel_tractors));\r\n                break;\r\n            case \"SONALIKA\":\r\n                stringListModel4WheelTractor = Arrays.asList(getResources().getStringArray(R.array.sonalika_models_4wheel_tractors));\r\n                break;\r\n            case \"VALTRA\":\r\n                stringListModel4WheelTractor = Arrays.asList(getResources().getStringArray(R.array.valtra_models_4wheel_tractors));\r\n                break;\r\n            case \"WEITAI\":\r\n                stringListModel4WheelTractor = Arrays.asList(getResources().getStringArray(R.array.weitai_models_4wheel_tractors));\r\n                break;\r\n            case \"YANMAR\":\r\n                stringListModel4WheelTractor = Arrays.asList(getResources().getStringArray(R.array.yanmar_models_4wheel_tractors));\r\n                break;\r\n            default:\r\n                stringListModel4WheelTractor = Arrays.asList(getResources().getStringArray(R.array.specify_only_brand_boom_sprayer_cane_grab_infield));\r\n                break;\r\n\r\n        }\r\n        ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, stringListModel4WheelTractor);\r\n        dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        spinModel.setAdapter(dataAdapter);\r\n\r\n        Intent intent = intentFromDb;\r\n        int pos = 0;\r\n        if (intent != null && intent.hasExtra(EXTRA_ID)) {\r\n\r\n            String stringCompare = intent.getStringExtra(EXTRA_MODEL);\r\n\r\n            if (!isNullOrEmpty(stringCompare)) {\r\n                pos = dataAdapter.getPosition(stringCompare);\r\n            }\r\n            spinModel.setSelection(pos);\r\n        }\r\n\r\n    }\r\n\r\n    private void sortingBrand2WheelTractor(String position) {\r\n        List<String> stringListModel2WheelTractor = Arrays.asList(getResources().getStringArray(R.array.blank));\r\n        int stringArrayId = 0;\r\n\r\n        switch (position) {\r\n            case \"ACT\":\r\n                stringArrayId = R.array.act_models_2wheel_tractors;\r\n                break;\r\n            case \"AIMS\":\r\n                stringArrayId = R.array.aims_models_2wheel_tractors;\r\n                break;\r\n            case \"APT\":\r\n                stringArrayId = R.array.apt_models_2wheel_tractors;\r\n                break;\r\n            case \"BOWA\":\r\n                stringArrayId = R.array.bowa_models_2wheel_tractors;\r\n                break;\r\n            case \"BUFFALO\":\r\n                stringArrayId = R.array.buffalo_models_2wheel_tractors;\r\n                break;\r\n            case \"D.U.A\":\r\n                stringArrayId = R.array.dua_models_2wheel_tractors;\r\n                break;\r\n            case \"FARM MASTER\":\r\n                stringArrayId = R.array.farm_master_models_2wheel_tractors;\r\n                break;\r\n            case \"KAPITAN\":\r\n                stringArrayId = R.array.kapitan_models_2wheel_tractors;\r\n                break;\r\n            case \"KASAMA HARABAS\":\r\n                stringArrayId = R.array.kasama_harabas_models_2wheel_tractors;\r\n                break;\r\n            case \"KATO\":\r\n                stringArrayId = R.array.kato_models_2wheel_tractors;\r\n                break;\r\n            case \"KELLY\":\r\n                stringArrayId = R.array.kelly_models_2wheel_tractors;\r\n                break;\r\n            case \"KULIGLIG\":\r\n                stringArrayId = R.array.kuliglig_models_2wheel_tractors;\r\n                break;\r\n            case \"LONG FOONG\":\r\n                stringArrayId = R.array.long_foong_models_2wheel_tractors;\r\n                break;\r\n            case \"MITSUBOMAR\":\r\n                stringArrayId = R.array.mitsubomar_models_2wheel_tractors;\r\n                break;\r\n            case \"NICHINO\":\r\n                stringArrayId = R.array.nichino_models_2wheel_tractors;\r\n                break;\r\n            case \"SUMO PLUS\":\r\n                stringArrayId = R.array.sumo_plus_models_2wheel_tractors;\r\n                break;\r\n            case \"SUPER\":\r\n                stringArrayId = R.array.super_models_2wheel_tractors;\r\n                break;\r\n            case \"TIBAY KULIGLIG\":\r\n                stringArrayId = R.array.tibay_kuliglig_models_2wheel_tractors;\r\n                break;\r\n            case \"TRIPLE J\":\r\n                stringArrayId = R.array.triple_j_models_2wheel_tractors;\r\n                break;\r\n            case \"WEST WIND\":\r\n                stringArrayId = R.array.west_wind_models_2wheel_tractors;\r\n                break;\r\n            default:\r\n                stringArrayId = R.array.specify_only_brand_boom_sprayer_cane_grab_infield;\r\n                break;\r\n\r\n        }\r\n        stringListModel2WheelTractor = Arrays.asList(getResources().getStringArray(stringArrayId));\r\n        ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, stringListModel2WheelTractor);\r\n        dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        spinModel.setAdapter(dataAdapter);\r\n\r\n        Intent intent = intentFromDb;\r\n        int pos = 0;\r\n        if (intent != null && intent.hasExtra(EXTRA_ID)) {\r\n\r\n            String stringCompare = intent.getStringExtra(EXTRA_MODEL);\r\n\r\n            if (!isNullOrEmpty(stringCompare)) {\r\n                pos = dataAdapter.getPosition(stringCompare);\r\n            }\r\n            spinModel.setSelection(pos);\r\n        }\r\n    }\r\n\r\n    private void sortingBrandWaterPump(String position) {\r\n        List<String> stringListModelWaterPump;\r\n\r\n        switch (position) {\r\n\r\n            case \"BLUMAX\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.blumax_models_water_pump));\r\n                break;\r\n            case \"BRIGGS AND STRATTON\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.briggs_stratton_models_water_pump));\r\n                break;\r\n            case \"COMET\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.comet_models_water_pump));\r\n                break;\r\n            case \"EAGLE\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.eagle_models_water_pump));\r\n                break;\r\n            case \"EXTREME\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.extreme_models_water_pump));\r\n                break;\r\n            case \"GAUDI\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.gaudi_models_water_pump));\r\n                break;\r\n            case \"GRUNDFOS\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.grundfos_models_water_pump));\r\n                break;\r\n            case \"HAKATA\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.hakata_models_water_pump));\r\n                break;\r\n            case \"HINOKI\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.hinoki_models_water_pump));\r\n                break;\r\n            case \"HONDA\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.honda_models_water_pump));\r\n                break;\r\n            case \"INNOVA\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.innova_models_water_pump));\r\n                break;\r\n            case \"ISHII\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.ishii_models_water_pump));\r\n                break;\r\n            case \"KAIAO\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.kaiao_models_water_pump));\r\n                break;\r\n            case \"KAITO\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.kaito_models_water_pump));\r\n                break;\r\n            case \"KAMA\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.kama_models_water_pump));\r\n                break;\r\n            case \"KATO\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.kato_models_water_pump));\r\n                break;\r\n            case \"KENBO\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.kenbo_models_water_pump));\r\n                break;\r\n            case \"KITACO\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.kiataco_models_water_pump));\r\n                break;\r\n            case \"LAUNTOP\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.launtop_models_water_pump));\r\n                break;\r\n            case \"LORENTZ\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.lorentz_models_water_pump));\r\n                break;\r\n            case \"MAXIPRO\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.maxipro_models_water_pump));\r\n                break;\r\n            case \"MIYATA\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.miyata_models_water_pump));\r\n                break;\r\n            case \"MOTORSTAR\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.motorstar_models_water_pump));\r\n                break;\r\n            case \"NITTOO\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.nittoo_models_water_pump));\r\n                break;\r\n            case \"OKAMA\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.okama_models_water_pump));\r\n                break;\r\n            case \"PLATINUM\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.platinum_models_water_pump));\r\n                break;\r\n            case \"ROBIN\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.robin_models_water_pump));\r\n                break;\r\n            case \"SAKAI\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.sakai_models_water_pump));\r\n                break;\r\n            case \"SOLAR PUMP\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.solar_pump_models_water_pump));\r\n                break;\r\n            case \"SUMO\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.sumo_models_water_pump));\r\n                break;\r\n            case \"SUPER KASAMA\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.super_kasama_models_water_pump));\r\n                break;\r\n            case \"TARO\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.taro_models_water_pump));\r\n                break;\r\n            case \"TAY\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.tay_models_water_pump));\r\n                break;\r\n            case \"TSURUMI\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.tsurumi_models_water_pump));\r\n                break;\r\n            case \"VIKYNO\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.vikyno_models_water_pump));\r\n                break;\r\n            case \"YAMADA\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.yamada_models_water_pump));\r\n                break;\r\n            case \"YAMAHA\":\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.yamaha_models_water_pump));\r\n                break;\r\n            default:\r\n                stringListModelWaterPump = Arrays.asList(getResources().getStringArray(R.array.specify_only_brand_boom_sprayer_cane_grab_infield));\r\n                break;\r\n        }\r\n        ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, stringListModelWaterPump);\r\n        dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        spinModel.setAdapter(dataAdapter);\r\n\r\n        Intent intent = intentFromDb;\r\n        int pos = 0;\r\n        if (intent != null && intent.hasExtra(EXTRA_ID)) {\r\n\r\n            String stringCompare = intent.getStringExtra(EXTRA_MODEL);\r\n\r\n            if (!isNullOrEmpty(stringCompare)) {\r\n                pos = dataAdapter.getPosition(stringCompare);\r\n            }\r\n            spinModel.setSelection(pos);\r\n        }\r\n    }\r\n\r\n    private void sortingBrandHarvester(String position) {\r\n        List<String> stringListModelHarvester;\r\n\r\n\r\n        switch (position) {\r\n\r\n            case \"CAMECO\":\r\n                stringListModelHarvester = Arrays.asList(getResources().getStringArray(R.array.cameco_models_harvester));\r\n                break;\r\n            case \"CASE IH\":\r\n                stringListModelHarvester = Arrays.asList(getResources().getStringArray(R.array.case_ih_models_harvester));\r\n                break;\r\n            case \"CATERPILLAR\":\r\n                stringListModelHarvester = Arrays.asList(getResources().getStringArray(R.array.caterpillar_models_harvester));\r\n                break;\r\n            case \"ESMECH\":\r\n                stringListModelHarvester = Arrays.asList(getResources().getStringArray(R.array.esmech_models_harvester));\r\n                break;\r\n            case \"FORD\":\r\n                stringListModelHarvester = Arrays.asList(getResources().getStringArray(R.array.ford_models_harvester));\r\n                break;\r\n            case \"JOHN DEERE\":\r\n                stringListModelHarvester = Arrays.asList(getResources().getStringArray(R.array.john_deere_models_harvester));\r\n                break;\r\n            case \"KUBOTA\":\r\n                stringListModelHarvester = Arrays.asList(getResources().getStringArray(R.array.kubota_models_harvester));\r\n                break;\r\n            case \"SHAKTIMAN\":\r\n                stringListModelHarvester = Arrays.asList(getResources().getStringArray(R.array.shaktiman_models_harvester));\r\n                break;\r\n            case \"TOFT\":\r\n                stringListModelHarvester = Arrays.asList(getResources().getStringArray(R.array.toft_models_harvester));\r\n                break;\r\n            case \"YANMAR\":\r\n                stringListModelHarvester = Arrays.asList(getResources().getStringArray(R.array.yanmar_models_harvester));\r\n                break;\r\n            default:\r\n                stringListModelHarvester = Arrays.asList(getResources().getStringArray(R.array.specify_only_brand_boom_sprayer_cane_grab_infield));\r\n                break;\r\n\r\n\r\n        }\r\n\r\n        ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, stringListModelHarvester);\r\n        dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        spinModel.setAdapter(dataAdapter);\r\n        Intent intent = intentFromDb;\r\n        int pos = 0;\r\n        if (intent != null && intent.hasExtra(EXTRA_ID)) {\r\n\r\n            String stringCompare = intent.getStringExtra(EXTRA_MODEL).trim();\r\n\r\n            if (!isNullOrEmpty(stringCompare)) {\r\n                pos = dataAdapter.getPosition(stringCompare);\r\n            }\r\n            else {\r\n                pos = 0;\r\n            }\r\n            spinModel.setSelection(pos);\r\n        }\r\n    }\r\n\r\n    private void modelSelect(String position) {\r\n        String pos = position;\r\n\r\n        switch (pos) {\r\n            case \"OTHERS\":\r\n                edtOtherModel.setVisibility(View.VISIBLE);\r\n                paramsedtRatedPower.topToBottom = R.id.edtOtherModel;\r\n\r\n//                List<String> stringList = Arrays.asList(getResources().getStringArray(R.array.specify_only_brand_boom_sprayer_cane_grab_infield));\r\n//                ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, stringList);\r\n//                dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n//                spinModel.setAdapter(dataAdapter);\r\n//\r\n//                Intent intent = intentFromDb;\r\n//                int positions = 0;\r\n//                if (intent != null && intent.hasExtra(EXTRA_ID)) {\r\n//\r\n//                    String stringCompare = intent.getStringExtra(EXTRA_MODEL);\r\n//\r\n//                    if (!isNullOrEmpty(stringCompare)) {\r\n//                        positions = dataAdapter.getPosition(stringCompare);\r\n//                    }\r\n//                    spinModel.setSelection(positions);\r\n//                }\r\n\r\n                break;\r\n            default:\r\n                edtOtherModel.setVisibility(View.INVISIBLE);\r\n                paramsedtRatedPower.topToBottom = R.id.spinModel;\r\n                break;\r\n        }\r\n        paramsedtRatedPower.topMargin = bigMargin;\r\n        edtRatedPower.setLayoutParams(paramsedtRatedPower);\r\n\r\n\r\n    }\r\n\r\n//    private void provMunSort(int position) {\r\n//        String pos = spinProvince.getItemAtPosition(position).toString();\r\n//        ArrayAdapter<String> adaptermun;\r\n//        List<KeyPairBoolData> selectedBrgy = pairingOfList(Arrays.asList(getResources().getStringArray(R.array.blank)));\r\n//\r\n//        switch (pos) {\r\n//            case \"CAPIZ\":\r\n//                adaptermun = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, getResources().getStringArray(R.array.capiz_mun));\r\n//                break;\r\n//            case \"AKLAN\":\r\n//                adaptermun = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, getResources().getStringArray(R.array.aklan_mun));\r\n//                selectedBrgy = pairingOfList(Arrays.asList(getResources().getStringArray(R.array.aklan_all_brgy)));\r\n//                break;\r\n//            case \"ILOILO\":\r\n//                adaptermun = new ArrayAdapter<>(this, android.R.layout.simple_spinner_item, getResources().getStringArray(R.array.iloilo_mun));\r\n//                break;\r\n//            case \"ANTIQUE\":\r\n//                adaptermun = new ArrayAdapter<>(this, android.R.layout.simple_spinner_item, getResources().getStringArray(R.array.antique_mun));\r\n//                break;\r\n//            case \"NEGROS OCCIDENTAL\":\r\n//                adaptermun = new ArrayAdapter<>(this, android.R.layout.simple_spinner_item, getResources().getStringArray(R.array.negros_occidental_mun));\r\n//                break;\r\n//            case \"BATANGAS\":\r\n//                adaptermun = new ArrayAdapter<>(this, android.R.layout.simple_spinner_item, getResources().getStringArray(R.array.batangas_mun));\r\n//                break;\r\n//            case \"NEGROS ORIENTAL\":\r\n//                adaptermun = new ArrayAdapter<>(this, android.R.layout.simple_spinner_item, getResources().getStringArray(R.array.negros_oriental_mun));\r\n//                break;\r\n//            case \"BUKIDNON\":\r\n//                adaptermun = new ArrayAdapter<>(this, android.R.layout.simple_spinner_item, getResources().getStringArray(R.array.bukidnon_mun));\r\n//                break;\r\n//            default:\r\n//                adaptermun = new ArrayAdapter<>(this, android.R.layout.simple_spinner_item, getResources().getStringArray(R.array.bukidnon_mun));\r\n//                selectedBrgy = selectedBrgy = pairingOfList(Arrays.asList(getResources().getStringArray(R.array.blank)));\r\n//                break;\r\n//        }\r\n//        adaptermun.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n//        spinMunicipality.setAdapter(adaptermun);\r\n//        singlespinBarangay.setItems(selectedBrgy, new SingleSpinnerListener() {\r\n//            @Override\r\n//            public void onItemsSelected(KeyPairBoolData selectedItem) {\r\n//\r\n//            }\r\n//\r\n//            @Override\r\n//            public void onClear() {\r\n//\r\n//            }\r\n//        });\r\n//\r\n//    }\r\n\r\n    private void problemsUnused(int position) {\r\n        String pos = spinConditionPresent.getItemAtPosition(position).toString();\r\n        List<KeyPairBoolData> selectedProb = pairingOfList(Arrays.asList(getResources().getStringArray(R.array.blank)));\r\n        Integer stringArray = R.array.blank;\r\n\r\n        switch (pos) {\r\n            case \"FUNCTIONAL USED\":\r\n                multspinProblemsUnused.setVisibility(View.INVISIBLE);\r\n                edtOtherProblems.setVisibility(View.INVISIBLE);\r\n                paramstvLocation.topToBottom = R.id.spinConditionPresent;\r\n                break;\r\n            case \"FUNCTIONAL UNUSED\":\r\n                multspinProblemsUnused.setVisibility(View.VISIBLE);\r\n                stringArray = R.array.problems_unused;\r\n                paramstvLocation.topToBottom = R.id.multspinProblemsUnused;\r\n                break;\r\n            case \"NON-FUNCTIONAL\":\r\n                multspinProblemsUnused.setVisibility(View.VISIBLE);\r\n                stringArray = R.array.problems_nonfunctional;\r\n                paramstvLocation.topToBottom = R.id.multspinProblemsUnused;\r\n                break;\r\n        }\r\n\r\n        selectedProb = pairingOfList(Arrays.asList(getResources().getStringArray(stringArray)));\r\n        multspinProblemsUnused.setItems(selectedProb, new MultiSpinnerListener() {\r\n            @Override\r\n            public void onItemsSelected(List<KeyPairBoolData> selectedItems) {\r\n                String pos = new String();\r\n                for (int i = 0; i < selectedItems.size(); i++) {\r\n                    pos = selectedItems.get(i).getName() + \", \" + pos;\r\n                    Log.d(\"MULT SPIN\", i + \" : \" + selectedItems.get(i).getName() + \" : \" + selectedItems.get(i).isSelected());\r\n                }\r\n                listOfProblems = pos;\r\n                if (pos.contains(\"OTHERS\")) {\r\n                    edtOtherProblems.setVisibility(View.VISIBLE);\r\n                    paramstvLocation.topToBottom = R.id.edtOtherProblems;\r\n                }\r\n\r\n            }\r\n        });\r\n        paramstvLocation.topMargin = bigMargin;\r\n        tvLocation.setLayoutParams(paramstvLocation);\r\n\r\n    }\r\n\r\n    private void availabilitySelected(int position) {\r\n        String pos = spinAvailability.getItemAtPosition(position).toString();\r\n\r\n        switch (pos) {\r\n            case \"OUTSIDE BARANGAY\":\r\n//                spinRentProv.setVisibility(View.VISIBLE);\r\n//                spinRentMun.setVisibility(View.VISIBLE);\r\n//                multspinRentBrgy.setVisibility(View.VISIBLE);\r\n//                paramstvConditionPresent.topToBottom = R.id.multispinRentBrgy;\r\n                edtRentProv.setVisibility(View.VISIBLE);\r\n                edtRentMun.setVisibility(View.VISIBLE);\r\n                edtRentBrgy.setVisibility(View.VISIBLE);\r\n                tvCommas.setVisibility(View.VISIBLE);\r\n                paramstvConditionPresent.topToBottom = R.id.tvCommas;\r\n                break;\r\n            case \"WITHIN BARANGAY\":\r\n            default:\r\n//                spinRentProv.setVisibility(View.INVISIBLE);\r\n//                spinRentMun.setVisibility(View.INVISIBLE);\r\n//                multspinRentBrgy.setVisibility(View.INVISIBLE);\r\n                edtRentProv.setVisibility(View.INVISIBLE);\r\n                edtRentMun.setVisibility(View.INVISIBLE);\r\n                edtRentBrgy.setVisibility(View.INVISIBLE);\r\n                tvCommas.setVisibility(View.INVISIBLE);\r\n                paramstvConditionPresent.topToBottom = R.id.spinAvailability;\r\n                break;\r\n        }\r\n        paramstvConditionPresent.topMargin = bigMargin;\r\n        tvConditionPresent.setLayoutParams(paramstvConditionPresent);\r\n    }\r\n\r\n    private void customUnitSelect(int position) {\r\n        String pos = spinCustomUnit.getItemAtPosition(position).toString();\r\n\r\n        Log.d(\"UNIT SELECT\", pos);\r\n\r\n        switch (pos) {\r\n            case \"SPECIFY\":\r\n                edtCustomRateUnit.setVisibility(View.VISIBLE);\r\n                paramstvMachineAvailability.topToBottom = R.id.edtCustomRateUnit;\r\n                break;\r\n            default:\r\n                edtCustomRateUnit.setVisibility(View.INVISIBLE);\r\n                paramstvMachineAvailability.topToBottom = R.id.edtCustomRate;\r\n                break;\r\n        }\r\n\r\n        paramstvMachineAvailability.topMargin = bigMargin;\r\n        tvMachineAvailability.setLayoutParams(paramstvMachineAvailability);\r\n\r\n    }\r\n\r\n    private void rentSelect(int position) {\r\n        String pos = spinRental.getItemAtPosition(position).toString();\r\n\r\n        switch (pos) {\r\n            case \"NO\":\r\n            default:\r\n                edtCustomRateUnit.setVisibility(View.INVISIBLE);\r\n                edtCustomRate.setVisibility(View.INVISIBLE);\r\n                spinCustomUnit.setVisibility(View.INVISIBLE);\r\n                paramstvMachineAvailability.topToBottom = R.id.spinRental;\r\n                break;\r\n            case \"YES\":\r\n                edtCustomRate.setVisibility(View.VISIBLE);\r\n                spinCustomUnit.setVisibility(View.VISIBLE);\r\n                paramstvMachineAvailability.topToBottom = R.id.edtCustomRate;\r\n                break;\r\n        }\r\n        paramstvMachineAvailability.topMargin = bigMargin;\r\n        tvMachineAvailability.setLayoutParams(paramstvMachineAvailability);\r\n    }\r\n\r\n    private void machineSelect(int position) {\r\n        String machineType = spinMachineType.getItemAtPosition(position).toString();\r\n        List<String> stringListBrand = Arrays.asList(getResources().getStringArray(R.array.blank));\r\n        int stringArrayId = 0;\r\n\r\n        switch (machineType) {\r\n            case \"2 WHEEL TRACTOR\":\r\n                tvTypeOfMill.setVisibility(View.INVISIBLE);\r\n                spinTypeOfMill.setVisibility(View.INVISIBLE);\r\n                edtCapacity.setVisibility(View.INVISIBLE);\r\n                tvTypeOfTubewells.setVisibility(View.INVISIBLE);\r\n                spinTypeofTubeWells.setVisibility(View.INVISIBLE);\r\n                edtAveYield.setVisibility(View.INVISIBLE);\r\n                edtNumLoads.setVisibility(View.INVISIBLE);\r\n                edtRate.setVisibility(View.INVISIBLE);\r\n                getParams(1);\r\n                stringArrayId = R.array.wheel2_tractor_brand;\r\n                break;\r\n            case \"4 WHEEL TRACTOR\":\r\n                tvTypeOfMill.setVisibility(View.INVISIBLE);\r\n                spinTypeOfMill.setVisibility(View.INVISIBLE);\r\n                edtCapacity.setVisibility(View.INVISIBLE);\r\n                tvTypeOfTubewells.setVisibility(View.INVISIBLE);\r\n                spinTypeofTubeWells.setVisibility(View.INVISIBLE);\r\n                edtAveYield.setVisibility(View.INVISIBLE);\r\n                edtNumLoads.setVisibility(View.INVISIBLE);\r\n                edtRate.setVisibility(View.INVISIBLE);\r\n                stringArrayId = R.array.wheel4_tractor_brand;\r\n                getParams(1);\r\n                break;\r\n            case \"BOOM SPRAYER\":\r\n                tvTypeOfMill.setVisibility(View.INVISIBLE);\r\n                spinTypeOfMill.setVisibility(View.INVISIBLE);\r\n                tvTypeOfTubewells.setVisibility(View.INVISIBLE);\r\n                spinTypeofTubeWells.setVisibility(View.INVISIBLE);\r\n                edtAveYield.setVisibility(View.INVISIBLE);\r\n                edtNumLoads.setVisibility(View.INVISIBLE);\r\n                edtRate.setVisibility(View.INVISIBLE);\r\n                edtCapacity.setVisibility(View.VISIBLE);\r\n                edtCapacity.setHint(\"Tank Capacity (in L)\");\r\n                stringArrayId = R.array.specify_only_brand_boom_sprayer_cane_grab_infield;\r\n                getParams(2);\r\n                break;\r\n            case \"POWER SPRAYER\":\r\n                tvTypeOfMill.setVisibility(View.INVISIBLE);\r\n                spinTypeOfMill.setVisibility(View.INVISIBLE);\r\n                tvTypeOfTubewells.setVisibility(View.INVISIBLE);\r\n                spinTypeofTubeWells.setVisibility(View.INVISIBLE);\r\n                edtAveYield.setVisibility(View.INVISIBLE);\r\n                edtNumLoads.setVisibility(View.INVISIBLE);\r\n                edtRate.setVisibility(View.INVISIBLE);\r\n                edtCapacity.setVisibility(View.VISIBLE);\r\n                edtCapacity.setHint(\"Tank Capacity (in L)\");\r\n                getParams(2);\r\n                break;\r\n            case \"CANE GRAB LOADER\":\r\n                tvTypeOfMill.setVisibility(View.INVISIBLE);\r\n                spinTypeOfMill.setVisibility(View.INVISIBLE);\r\n                tvTypeOfTubewells.setVisibility(View.INVISIBLE);\r\n                spinTypeofTubeWells.setVisibility(View.INVISIBLE);\r\n                edtAveYield.setVisibility(View.INVISIBLE);\r\n                edtRate.setVisibility(View.INVISIBLE);\r\n                edtCapacity.setVisibility(View.VISIBLE);\r\n                edtNumLoads.setVisibility(View.VISIBLE);\r\n                edtCapacity.setHint(\"Loading Capacity (in tons/load)\");\r\n                stringArrayId = R.array.specify_only_brand_boom_sprayer_cane_grab_infield;\r\n                getParams(3);\r\n                break;\r\n            case \"COMBINE HARVESTER\":\r\n                tvTypeOfMill.setVisibility(View.INVISIBLE);\r\n                spinTypeOfMill.setVisibility(View.INVISIBLE);\r\n                tvTypeOfTubewells.setVisibility(View.INVISIBLE);\r\n                spinTypeofTubeWells.setVisibility(View.INVISIBLE);\r\n                edtNumLoads.setVisibility(View.INVISIBLE);\r\n                edtRate.setVisibility(View.INVISIBLE);\r\n                edtCapacity.setVisibility(View.VISIBLE);\r\n                edtAveYield.setVisibility(View.VISIBLE);\r\n                edtCapacity.setHint(\"Capacity (in ha/h)\");\r\n                edtAveYield.setHint(\"Average Yield (in ton cannes/ha)\");\r\n                getParams(4);\r\n                break;\r\n            case \"HARVESTER\":\r\n                tvTypeOfMill.setVisibility(View.INVISIBLE);\r\n                spinTypeOfMill.setVisibility(View.INVISIBLE);\r\n                tvTypeOfTubewells.setVisibility(View.INVISIBLE);\r\n                spinTypeofTubeWells.setVisibility(View.INVISIBLE);\r\n                edtNumLoads.setVisibility(View.INVISIBLE);\r\n                edtRate.setVisibility(View.INVISIBLE);\r\n                edtCapacity.setVisibility(View.VISIBLE);\r\n                edtAveYield.setVisibility(View.VISIBLE);\r\n                edtCapacity.setHint(\"Capacity (in ha/h)\");\r\n                edtAveYield.setHint(\"Average Yield (in ton/ha)\");\r\n                stringArrayId = R.array.harvester_brands;\r\n                getParams(4);\r\n                break;\r\n            case \"DRYER\":\r\n                tvTypeOfMill.setVisibility(View.INVISIBLE);\r\n                spinTypeOfMill.setVisibility(View.INVISIBLE);\r\n                tvTypeOfTubewells.setVisibility(View.INVISIBLE);\r\n                spinTypeofTubeWells.setVisibility(View.INVISIBLE);\r\n                edtAveYield.setVisibility(View.INVISIBLE);\r\n                edtNumLoads.setVisibility(View.INVISIBLE);\r\n                edtCapacity.setVisibility(View.VISIBLE);\r\n                edtRate.setVisibility(View.VISIBLE);\r\n                edtCapacity.setHint(\"Loading Capacity (in kg/h)\");\r\n                edtRate.setHint(\"Drying Rate (in tons/h)\");\r\n                getParams(5);\r\n                break;\r\n            case \"INFIELD HAULER\":\r\n                tvTypeOfMill.setVisibility(View.INVISIBLE);\r\n                spinTypeOfMill.setVisibility(View.INVISIBLE);\r\n                tvTypeOfTubewells.setVisibility(View.INVISIBLE);\r\n                spinTypeofTubeWells.setVisibility(View.INVISIBLE);\r\n                edtAveYield.setVisibility(View.INVISIBLE);\r\n                edtNumLoads.setVisibility(View.INVISIBLE);\r\n                edtRate.setVisibility(View.INVISIBLE);\r\n                edtCapacity.setVisibility(View.VISIBLE);\r\n                edtCapacity.setHint(\"Capacity (in tons/load)\");\r\n                stringArrayId = R.array.specify_only_brand_boom_sprayer_cane_grab_infield;\r\n                getParams(2);\r\n                break;\r\n            case \"MECHANICAL PLANTER\":\r\n            case \"REAPER\":\r\n            case \"PICKER\":\r\n                tvTypeOfMill.setVisibility(View.INVISIBLE);\r\n                spinTypeOfMill.setVisibility(View.INVISIBLE);\r\n                tvTypeOfTubewells.setVisibility(View.INVISIBLE);\r\n                spinTypeofTubeWells.setVisibility(View.INVISIBLE);\r\n                edtAveYield.setVisibility(View.INVISIBLE);\r\n                edtNumLoads.setVisibility(View.INVISIBLE);\r\n                edtRate.setVisibility(View.INVISIBLE);\r\n                edtCapacity.setVisibility(View.VISIBLE);\r\n                edtCapacity.setHint(\"Capacity (in ha/h)\");\r\n                getParams(2);\r\n                break;\r\n            case \"MILL\":\r\n                tvTypeOfMill.setVisibility(View.VISIBLE);\r\n                spinTypeOfMill.setVisibility(View.VISIBLE);\r\n                tvTypeOfTubewells.setVisibility(View.INVISIBLE);\r\n                spinTypeofTubeWells.setVisibility(View.INVISIBLE);\r\n                edtAveYield.setVisibility(View.INVISIBLE);\r\n                edtNumLoads.setVisibility(View.INVISIBLE);\r\n                edtRate.setVisibility(View.VISIBLE);\r\n                edtCapacity.setVisibility(View.VISIBLE);\r\n                edtCapacity.setHint(\"Capacity (in kg)\");\r\n                edtRate.setHint(\"Milling Rate (in tons/h)\");\r\n                getParams(7);\r\n                break;\r\n            case \"SHELLER\":\r\n                tvTypeOfMill.setVisibility(View.INVISIBLE);\r\n                spinTypeOfMill.setVisibility(View.INVISIBLE);\r\n                tvTypeOfTubewells.setVisibility(View.INVISIBLE);\r\n                spinTypeofTubeWells.setVisibility(View.INVISIBLE);\r\n                edtAveYield.setVisibility(View.INVISIBLE);\r\n                edtNumLoads.setVisibility(View.INVISIBLE);\r\n                edtRate.setVisibility(View.VISIBLE);\r\n                edtCapacity.setVisibility(View.VISIBLE);\r\n                edtCapacity.setHint(\"Capacity (in kg)\");\r\n                edtRate.setHint(\"Shelling Rate (in tons/h)\");\r\n                getParams(5);\r\n                break;\r\n            case \"THRESHER\":\r\n                tvTypeOfMill.setVisibility(View.INVISIBLE);\r\n                spinTypeOfMill.setVisibility(View.INVISIBLE);\r\n                tvTypeOfTubewells.setVisibility(View.INVISIBLE);\r\n                spinTypeofTubeWells.setVisibility(View.INVISIBLE);\r\n                edtAveYield.setVisibility(View.INVISIBLE);\r\n                edtNumLoads.setVisibility(View.INVISIBLE);\r\n                edtRate.setVisibility(View.VISIBLE);\r\n                edtCapacity.setVisibility(View.VISIBLE);\r\n                edtCapacity.setHint(\"Capacity (in kg)\");\r\n                edtRate.setHint(\"Threshing Rate (in tons/h)\");\r\n                getParams(5);\r\n                break;\r\n            case \"WATER PUMP\":\r\n                tvTypeOfMill.setVisibility(View.INVISIBLE);\r\n                spinTypeOfMill.setVisibility(View.INVISIBLE);\r\n                edtAveYield.setVisibility(View.INVISIBLE);\r\n                edtNumLoads.setVisibility(View.INVISIBLE);\r\n                edtRate.setVisibility(View.INVISIBLE);\r\n                edtCapacity.setVisibility(View.VISIBLE);\r\n                tvTypeOfTubewells.setVisibility(View.VISIBLE);\r\n                spinTypeofTubeWells.setVisibility(View.VISIBLE);\r\n                edtCapacity.setHint(\"Capacity (in L/s)\");\r\n                stringArrayId = R.array.waterpump_brands;\r\n                getParams(6);\r\n                break;\r\n            default:\r\n                tvTypeOfMill.setVisibility(View.INVISIBLE);\r\n                spinTypeOfMill.setVisibility(View.INVISIBLE);\r\n                tvTypeOfTubewells.setVisibility(View.INVISIBLE);\r\n                spinTypeofTubeWells.setVisibility(View.INVISIBLE);\r\n                edtAveYield.setVisibility(View.INVISIBLE);\r\n                edtNumLoads.setVisibility(View.INVISIBLE);\r\n                edtRate.setVisibility(View.INVISIBLE);\r\n                edtCapacity.setVisibility(View.VISIBLE);\r\n                stringArrayId = R.array.specify_only_brand_boom_sprayer_cane_grab_infield;\r\n                getParams(2);\r\n                break;\r\n        }\r\n\r\n        stringListBrand = Arrays.asList(getResources().getStringArray(stringArrayId));\r\n        ArrayAdapter<String> dataAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, stringListBrand);\r\n        dataAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        spinBrand.setAdapter(dataAdapter);\r\n\r\n        Intent intent = intentFromDb;\r\n        if (intent != null && intent.hasExtra(EXTRA_ID)) {\r\n\r\n            String stringCompare = intent.getStringExtra(EXTRA_BRAND);\r\n\r\n            if (!isNullOrEmpty(stringCompare)) {\r\n                position = dataAdapter.getPosition(stringCompare);\r\n            }\r\n            spinBrand.setSelection(position);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    private void ownershipSelect(int position) {\r\n        String pos = spinOwnership.getItemAtPosition(position).toString();\r\n\r\n        Log.d(\"GOT TO OWNERSHIP\", pos);\r\n        switch (pos) {\r\n            case \"PRIVATELY OWNED\":\r\n            default:\r\n                spinPurchGrantDono.setVisibility(View.INVISIBLE);\r\n                spinAgency.setVisibility(View.INVISIBLE);\r\n                paramsedtNameOfOwnerOrg.topToBottom = R.id.spinOwnership;\r\n                Log.d(\"INSIDE PRIVATELY OWNED\", pos + \":\" + paramsedtNameOfOwnerOrg);\r\n                break;\r\n            case \"COOPERATIVE/ASSOCIATION\":\r\n            case \"CUSTOM PROVIDER\":\r\n            case \"LGU\":\r\n                spinPurchGrantDono.setVisibility(View.VISIBLE);\r\n                paramsedtNameOfOwnerOrg.topToBottom = R.id.spinPurchGrantDono;\r\n                break;\r\n        }\r\n        paramsedtNameOfOwnerOrg.topMargin = bigMargin;\r\n        edtNameOfOwnerOrg.setLayoutParams(paramsedtNameOfOwnerOrg);\r\n    }\r\n\r\n    private void purchGrantDonoSelect(int position) {\r\n        String pos = spinPurchGrantDono.getItemAtPosition(position).toString();\r\n\r\n        switch (pos) {\r\n            case \"PURCHASED\":\r\n            default:\r\n                Log.d(\"INSIDE PURCHASE\", pos);\r\n                spinAgency.setVisibility(View.INVISIBLE);\r\n                paramsedtNameOfOwnerOrg.topToBottom = R.id.spinPurchGrantDono;\r\n                spinAgency.setSelection(0);\r\n                break;\r\n            case \"GRANT\":\r\n            case \"DONATION\":\r\n                spinAgency.setVisibility(View.VISIBLE);\r\n                paramsedtNameOfOwnerOrg.topToBottom = R.id.spinAgency;\r\n                break;\r\n        }\r\n\r\n        paramsedtNameOfOwnerOrg.topMargin = bigMargin;\r\n        edtNameOfOwnerOrg.setLayoutParams(paramsedtNameOfOwnerOrg);\r\n    }\r\n\r\n\r\n    private void otherAgency(int position) {\r\n        String pos = spinAgency.getItemAtPosition(position).toString();\r\n\r\n        Log.d(\"POSITION OF AGENCY\", pos);\r\n\r\n        switch (pos) {\r\n            case \"OTHERS\":\r\n                paramsedtNameOfOwnerOrg.topToBottom = R.id.edtOtherAgency;\r\n                edtOtherAgency.setVisibility(View.VISIBLE);\r\n                break;\r\n            default:\r\n                paramsedtNameOfOwnerOrg.topToBottom = R.id.spinAgency;\r\n                edtOtherAgency.setVisibility(View.INVISIBLE);\r\n                break;\r\n        }\r\n        paramsedtNameOfOwnerOrg.topMargin = bigMargin;\r\n        edtNameOfOwnerOrg.setLayoutParams(paramsedtNameOfOwnerOrg);\r\n\r\n    }\r\n\r\n    private void getParams(int input) {\r\n        int type = 0;\r\n\r\n        paramstvOwnership = (ConstraintLayout.LayoutParams) tvOwnership.getLayoutParams();\r\n        paramsedtCapacity = (ConstraintLayout.LayoutParams) edtCapacity.getLayoutParams();\r\n        paramsedtNumLoads = (ConstraintLayout.LayoutParams) edtNumLoads.getLayoutParams();\r\n        paramsedtAveYield = (ConstraintLayout.LayoutParams) edtAveYield.getLayoutParams();\r\n        paramsedtRate = (ConstraintLayout.LayoutParams) edtRate.getLayoutParams();\r\n        paramstvTypeTubewells = (ConstraintLayout.LayoutParams) tvTypeOfTubewells.getLayoutParams();\r\n\r\n        type = input;\r\n\r\n        switch (type) {\r\n            case 1:\r\n            default:\r\n                paramstvBrand.topToBottom = R.id.edtQRCode;\r\n                paramstvOwnership.topToBottom = R.id.tvSubInputDays;\r\n                break;\r\n            case 2:\r\n                paramstvBrand.topToBottom = R.id.edtQRCode;\r\n                paramstvOwnership.topToBottom = R.id.edtCapacity;\r\n                paramsedtCapacity.topToBottom = R.id.tvSubInputDays;\r\n                break;\r\n            case 3:\r\n                paramstvBrand.topToBottom = R.id.edtQRCode;\r\n                paramstvOwnership.topToBottom = R.id.edtNumberOfLoads;\r\n                paramsedtCapacity.topToBottom = R.id.tvSubInputDays;\r\n                paramsedtNumLoads.topToBottom = R.id.edtCapacity;\r\n                break;\r\n            case 4:\r\n                paramstvBrand.topToBottom = R.id.edtQRCode;\r\n                paramstvOwnership.topToBottom = R.id.edtAveYield;\r\n                paramsedtCapacity.topToBottom = R.id.tvSubInputDays;\r\n                paramsedtAveYield.topToBottom = R.id.edtCapacity;\r\n                break;\r\n            case 5:\r\n                paramstvBrand.topToBottom = R.id.edtQRCode;\r\n                paramstvOwnership.topToBottom = R.id.edtRate;\r\n                paramsedtCapacity.topToBottom = R.id.tvSubInputDays;\r\n                paramsedtRate.topToBottom = R.id.edtCapacity;\r\n                break;\r\n            case 6:\r\n                paramstvTypeTubewells.topToBottom = R.id.edtQRCode;\r\n                paramstvBrand.topToBottom = R.id.spinTypeOfTubewells;\r\n                paramstvOwnership.topToBottom = R.id.edtCapacity;\r\n                paramsedtCapacity.topToBottom = R.id.tvSubInputDays;\r\n                break;\r\n            case 7:\r\n                paramstvBrand.topToBottom = R.id.spinTypeMill;\r\n                paramstvOwnership.topToBottom = R.id.edtRate;\r\n                paramsedtCapacity.topToBottom = R.id.tvSubInputDays;\r\n                paramsedtRate.topToBottom = R.id.edtCapacity;\r\n                break;\r\n        }\r\n\r\n        paramstvBrand.topMargin = bigMargin;\r\n        paramstvOwnership.topMargin = bigMargin;\r\n        paramsedtCapacity.topMargin = bigMargin;\r\n        paramsedtNumLoads.topMargin = bigMargin;\r\n        paramsedtAveYield.topMargin = bigMargin;\r\n        paramsedtRate.topMargin = bigMargin;\r\n\r\n        tvBrand.setLayoutParams(paramstvBrand);\r\n        tvOwnership.setLayoutParams(paramstvOwnership);\r\n        edtCapacity.setLayoutParams(paramsedtCapacity);\r\n        edtNumLoads.setLayoutParams(paramsedtNumLoads);\r\n        edtAveYield.setLayoutParams(paramsedtAveYield);\r\n    }\r\n\r\n    public static boolean isNullOrEmpty(String str) {\r\n        return str == null || str.isEmpty();\r\n    }\r\n\r\n    private void saveNote() {\r\n        String machineType = spinMachineType.getSelectedItem().toString();\r\n        String machineQRCode = edtQRCode.getText().toString();\r\n        String latitude = tvLat.getText().toString();\r\n        String longitude = tvLong.getText().toString();\r\n\r\n\r\n        profileViewModel.getAllProfiles().observe(this, new Observer<List<Profile>>() {\r\n            @Override\r\n            public void onChanged(List<Profile> profiles) {\r\n                List<String> profileList = new ArrayList<String>();\r\n                for (int i = 0; i < profiles.size(); i++) {\r\n                    profileList.add(profiles.get(i).getId() + \" \" + profiles.get(i).getName_respondent());\r\n                }\r\n                ArrayAdapter<String> spinnerArrayAdapter = new ArrayAdapter<String>(getApplicationContext(), android.R.layout.simple_spinner_item, profileList);\r\n\r\n                int posRespName = spinnerArrayAdapter.getPosition(spinRespName.getSelectedItem().toString());\r\n                resName = profiles.get(posRespName).getName_respondent();\r\n                resCode = profiles.get(posRespName).getResCode();\r\n            }\r\n        });\r\n\r\n        if (machineType.trim().isEmpty() ||\r\n                machineQRCode.trim().isEmpty() ||\r\n                isNullOrEmpty(latitude) ||\r\n                isNullOrEmpty(longitude)) {\r\n            Toast.makeText(this, \"Incomplete Data\", Toast.LENGTH_SHORT).show();\r\n        } else {\r\n\r\n            Intent dataAddMachine = new Intent();\r\n\r\n            if (isNullOrEmpty(encodedImage)) {\r\n\r\n                encodedImage = getResources().getString(R.string.default_image);\r\n            }\r\n\r\n            int id = getIntent().getIntExtra(EXTRA_ID, -1);\r\n            if (id != -1) {\r\n                dataAddMachine.putExtra(EXTRA_ID, id);\r\n                dataAddMachine.putExtra(EXTRA_MACHINE_TYPE, spinMachineType.getSelectedItem().toString());\r\n                dataAddMachine.putExtra(EXTRA_MACHINE_QRCODE, edtQRCode.getText().toString());\r\n                dataAddMachine.putExtra(EXTRA_TYPE_TUBEWELLS, spinTypeofTubeWells.getSelectedItem().toString());\r\n                dataAddMachine.putExtra(EXTRA_TYPE_MILL, spinTypeOfMill.getSelectedItem().toString());\r\n                dataAddMachine.putExtra(EXTRA_DATE_TIME, dateToStr);\r\n                dataAddMachine.putExtra(EXTRA_BRAND, spinBrand.getSelectedItem().toString());\r\n                dataAddMachine.putExtra(EXTRA_BRAND_SPECIFY, edtOtherBrand.getText().toString().toUpperCase());\r\n                dataAddMachine.putExtra(EXTRA_MODEL, spinModel.getSelectedItem().toString());\r\n                dataAddMachine.putExtra(EXTRA_MODEL_SPECIFY, edtOtherModel.getText().toString().toUpperCase());\r\n                dataAddMachine.putExtra(EXTRA_RATED_POWER, edtRatedPower.getText().toString());\r\n                dataAddMachine.putExtra(EXTRA_SERVICE_AREA, edtServiceArea.getText().toString());\r\n                dataAddMachine.putExtra(EXTRA_AVE_OP_HOURS, edtAveOpHours.getText().toString());\r\n                dataAddMachine.putExtra(EXTRA_AVE_OP_DAYS, edtAveOpDays.getText().toString());\r\n                dataAddMachine.putExtra(EXTRA_CAPACITY, edtCapacity.getText().toString());\r\n                dataAddMachine.putExtra(EXTRA_AVE_YIELD, edtAveYield.getText().toString());\r\n                dataAddMachine.putExtra(EXTRA_NUM_LOADS, edtNumLoads.getText().toString());\r\n                dataAddMachine.putExtra(EXTRA_RATE, edtRate.getText().toString());\r\n                dataAddMachine.putExtra(EXTRA_OWNERSHIP, spinOwnership.getSelectedItem().toString());\r\n                dataAddMachine.putExtra(EXTRA_PURCH_GRANT_DONO, spinPurchGrantDono.getSelectedItem().toString());\r\n                dataAddMachine.putExtra(EXTRA_AGENCY, spinAgency.getSelectedItem().toString());\r\n                dataAddMachine.putExtra(EXTRA_AGENCY_SPECIFY, edtOtherAgency.getText().toString().toUpperCase());\r\n                dataAddMachine.putExtra(EXTRA_NAME_OWNER, edtNameOfOwnerOrg.getText().toString().toUpperCase());\r\n                dataAddMachine.putExtra(EXTRA_YEAR_ACQUIRED, spinYearAcquired.getSelectedItem().toString());\r\n                dataAddMachine.putExtra(EXTRA_CONDITION_ACQUIRED, spinConditionAcquired.getSelectedItem().toString());\r\n                dataAddMachine.putExtra(EXTRA_RENTAL, spinRental.getSelectedItem().toString());\r\n                dataAddMachine.putExtra(EXTRA_CUSTOM_RATE, edtCustomRate.getText().toString());\r\n                dataAddMachine.putExtra(EXTRA_CUSTOM_UNIT, spinCustomUnit.getSelectedItem().toString());\r\n                dataAddMachine.putExtra(EXTRA_CUSTOM_UNIT_SPECIFY, edtCustomRateUnit.getText().toString().toUpperCase());\r\n                dataAddMachine.putExtra(EXTRA_AVAILABILITY, spinAvailability.getSelectedItem().toString());\r\n                dataAddMachine.putExtra(EXTRA_RENT_PROV, edtRentProv.getText().toString().toUpperCase());\r\n                dataAddMachine.putExtra(EXTRA_RENT_MUN, edtRentMun.getText().toString().toUpperCase());\r\n                dataAddMachine.putExtra(EXTRA_RENT_BRGY, edtRentBrgy.getText().toString().toUpperCase());\r\n                dataAddMachine.putExtra(EXTRA_CONDITION, spinConditionPresent.getSelectedItem().toString());\r\n                dataAddMachine.putExtra(EXTRA_PROBLEMS, listOfProblems);\r\n                dataAddMachine.putExtra(EXTRA_PROBLEMS_SPECIFY, edtOtherProblems.getText().toString().toUpperCase());\r\n                dataAddMachine.putExtra(EXTRA_LOCATION, spinLocationOfMachine.getSelectedItem().toString());\r\n                dataAddMachine.putExtra(EXTRA_PROV, singlespinProvince.getSelectedItem().toString().toUpperCase());\r\n                dataAddMachine.putExtra(EXTRA_MUN, singlespinMunicipality.getSelectedItem().toString().toUpperCase());\r\n                dataAddMachine.putExtra(EXTRA_BRGY, singlespinBarangay.getSelectedItem().toString().toUpperCase());\r\n                Variable.setStringImage(encodedImage);\r\n                dataAddMachine.putExtra(EXTRA_LAT, tvLat.getText().toString());\r\n                dataAddMachine.putExtra(EXTRA_LONG, tvLong.getText().toString());\r\n                dataAddMachine.putExtra(EXTRA_ACC, accuracy);\r\n                dataAddMachine.putExtra(EXTRA_RES_CODE, resCode.toUpperCase());\r\n                dataAddMachine.putExtra(EXTRA_RES_NAME, resName.toUpperCase());\r\n\r\n            }\r\n            else {\r\n\r\n                dateToStr = new SimpleDateFormat(\"MM/dd/yy HH:mm:ss\").format(new Date());\r\n\r\n                dataAddMachine.putExtra(EXTRA_MACHINE_TYPE, spinMachineType.getSelectedItem().toString());\r\n                dataAddMachine.putExtra(EXTRA_MACHINE_QRCODE, edtQRCode.getText().toString());\r\n                dataAddMachine.putExtra(EXTRA_TYPE_TUBEWELLS, spinTypeofTubeWells.getSelectedItem().toString());\r\n                dataAddMachine.putExtra(EXTRA_TYPE_MILL, spinTypeOfMill.getSelectedItem().toString());\r\n                dataAddMachine.putExtra(EXTRA_DATE_TIME, dateToStr);\r\n                dataAddMachine.putExtra(EXTRA_BRAND, spinBrand.getSelectedItem().toString());\r\n                dataAddMachine.putExtra(EXTRA_BRAND_SPECIFY, edtOtherBrand.getText().toString().toUpperCase());\r\n                dataAddMachine.putExtra(EXTRA_MODEL, spinModel.getSelectedItem().toString());\r\n                dataAddMachine.putExtra(EXTRA_MODEL_SPECIFY, edtOtherModel.getText().toString().toUpperCase());\r\n                dataAddMachine.putExtra(EXTRA_RATED_POWER, edtRatedPower.getText().toString());\r\n                dataAddMachine.putExtra(EXTRA_SERVICE_AREA, edtServiceArea.getText().toString());\r\n                dataAddMachine.putExtra(EXTRA_AVE_OP_HOURS, edtAveOpHours.getText().toString());\r\n                dataAddMachine.putExtra(EXTRA_AVE_OP_DAYS, edtAveOpDays.getText().toString());\r\n                dataAddMachine.putExtra(EXTRA_CAPACITY, edtCapacity.getText().toString());\r\n                dataAddMachine.putExtra(EXTRA_AVE_YIELD, edtAveYield.getText().toString());\r\n                dataAddMachine.putExtra(EXTRA_NUM_LOADS, edtNumLoads.getText().toString());\r\n                dataAddMachine.putExtra(EXTRA_RATE, edtRate.getText().toString());\r\n                dataAddMachine.putExtra(EXTRA_OWNERSHIP, spinOwnership.getSelectedItem().toString());\r\n                dataAddMachine.putExtra(EXTRA_PURCH_GRANT_DONO, spinPurchGrantDono.getSelectedItem().toString());\r\n                dataAddMachine.putExtra(EXTRA_AGENCY, spinAgency.getSelectedItem().toString());\r\n                dataAddMachine.putExtra(EXTRA_AGENCY_SPECIFY, edtOtherAgency.getText().toString().toUpperCase());\r\n                dataAddMachine.putExtra(EXTRA_NAME_OWNER, edtNameOfOwnerOrg.getText().toString().toUpperCase());\r\n                dataAddMachine.putExtra(EXTRA_YEAR_ACQUIRED, spinYearAcquired.getSelectedItem().toString());\r\n                dataAddMachine.putExtra(EXTRA_CONDITION_ACQUIRED, spinConditionAcquired.getSelectedItem().toString());\r\n                dataAddMachine.putExtra(EXTRA_RENTAL, spinRental.getSelectedItem().toString());\r\n                dataAddMachine.putExtra(EXTRA_CUSTOM_RATE, edtCustomRate.getText().toString());\r\n                dataAddMachine.putExtra(EXTRA_CUSTOM_UNIT, spinCustomUnit.getSelectedItem().toString());\r\n                dataAddMachine.putExtra(EXTRA_CUSTOM_UNIT_SPECIFY, edtCustomRateUnit.getText().toString().toUpperCase());\r\n                dataAddMachine.putExtra(EXTRA_AVAILABILITY, spinAvailability.getSelectedItem().toString());\r\n                dataAddMachine.putExtra(EXTRA_RENT_PROV, edtRentProv.getText().toString().toUpperCase());\r\n                dataAddMachine.putExtra(EXTRA_RENT_MUN, edtRentMun.getText().toString().toUpperCase());\r\n                dataAddMachine.putExtra(EXTRA_RENT_BRGY, edtRentBrgy.getText().toString().toUpperCase());\r\n                dataAddMachine.putExtra(EXTRA_CONDITION, spinConditionPresent.getSelectedItem().toString());\r\n                dataAddMachine.putExtra(EXTRA_PROBLEMS, listOfProblems);\r\n                dataAddMachine.putExtra(EXTRA_PROBLEMS_SPECIFY, edtOtherProblems.getText().toString().toUpperCase());\r\n                dataAddMachine.putExtra(EXTRA_LOCATION, spinLocationOfMachine.getSelectedItem().toString());\r\n                dataAddMachine.putExtra(EXTRA_PROV, singlespinProvince.getSelectedItem().toString().toUpperCase());\r\n                dataAddMachine.putExtra(EXTRA_MUN, singlespinMunicipality.getSelectedItem().toString().toUpperCase());\r\n                dataAddMachine.putExtra(EXTRA_BRGY, singlespinBarangay.getSelectedItem().toString().toUpperCase());\r\n                Variable.setStringImage(encodedImage);\r\n                dataAddMachine.putExtra(EXTRA_LAT, tvLat.getText().toString());\r\n                dataAddMachine.putExtra(EXTRA_LONG, tvLong.getText().toString());\r\n                dataAddMachine.putExtra(EXTRA_ACC, accuracy);\r\n                dataAddMachine.putExtra(EXTRA_RES_CODE, resCode.toUpperCase());\r\n                dataAddMachine.putExtra(EXTRA_RES_NAME, resName.toUpperCase());\r\n            }\r\n\r\n            setResult(RESULT_OK, dataAddMachine);\r\n            finish();\r\n        }\r\n\r\n    }\r\n\r\n    private Bitmap scale(Bitmap bitmap, int maxWidth, int maxHeight) {\r\n        // Determine the constrained dimension, which determines both dimensions.\r\n        int width;\r\n        int height;\r\n        float widthRatio = (float) bitmap.getWidth() / maxWidth;\r\n        float heightRatio = (float) bitmap.getHeight() / maxHeight;\r\n        // Width constrained.\r\n        if (widthRatio >= heightRatio) {\r\n            width = maxWidth;\r\n            height = (int) (((float) width / bitmap.getWidth()) * bitmap.getHeight());\r\n        }\r\n        // Height constrained.\r\n        else {\r\n            height = maxHeight;\r\n            width = (int) (((float) height / bitmap.getHeight()) * bitmap.getWidth());\r\n        }\r\n        Bitmap scaledBitmap = Bitmap.createBitmap(width, height, Bitmap.Config.ARGB_8888);\r\n\r\n        float ratioX = (float) width / bitmap.getWidth();\r\n        float ratioY = (float) height / bitmap.getHeight();\r\n        float middleX = width / 2.0f;\r\n        float middleY = height / 2.0f;\r\n        Matrix scaleMatrix = new Matrix();\r\n        scaleMatrix.setScale(ratioX, ratioY, middleX, middleY);\r\n\r\n        Canvas canvas = new Canvas(scaledBitmap);\r\n        canvas.setMatrix(scaleMatrix);\r\n        canvas.drawBitmap(bitmap, middleX - bitmap.getWidth() / 2, middleY - bitmap.getHeight() / 2, new Paint(Paint.FILTER_BITMAP_FLAG));\r\n        return scaledBitmap;\r\n    }\r\n\r\n    public void askCameraPermission() {\r\n        if (ContextCompat.checkSelfPermission(this, Manifest.permission.CAMERA) != PackageManager.PERMISSION_GRANTED) {\r\n            ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.CAMERA}, CAMERA_PERM_CODE);\r\n        }\r\n        else {\r\n            //TODO ADD PICTURE INTENT\r\n        }\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\r\n        if (requestCode == CAMERA_PERM_CODE) {\r\n            if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n                Toast.makeText(this, \"Camera Permission granted\", Toast.LENGTH_SHORT).show();\r\n            } else {\r\n                Toast.makeText(this, \"Camera Permission is Required to Use camera.\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        } else if (requestCode == WRITE_PERM_CODE) {\r\n            if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n                Log.e(\"value\", \"Write Permission granted\");\r\n            } else {\r\n                Log.e(\"value\", \"Write Permission not granted\");\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    private boolean checkExternalPermission() {\r\n        int result = ContextCompat.checkSelfPermission(AddMachineActivity.this, android.Manifest.permission.WRITE_EXTERNAL_STORAGE);\r\n        if (result == PackageManager.PERMISSION_GRANTED) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private void requestExtrernalPermission() {\r\n\r\n        if (ActivityCompat.shouldShowRequestPermissionRationale(AddMachineActivity.this, android.Manifest.permission.WRITE_EXTERNAL_STORAGE)) {\r\n//            Toast.makeText(AddMachineActivity.this, \"NECESITAMOS QUE NOS CONCEDAS LOS PERMISOS DE ALMACENAMIENTO PARA GUARDAR NOTICIAS O RADIOS COMO FAVORITOS.\", Toast.LENGTH_LONG).show();\r\n        } else {\r\n            ActivityCompat.requestPermissions(AddMachineActivity.this, new String[]{android.Manifest.permission.WRITE_EXTERNAL_STORAGE}, WRITE_PERM_CODE);\r\n        }\r\n    }\r\n\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (requestCode == CAMERA_REQUEST_CODE) {\r\n            if (resultCode == Activity.RESULT_OK) {\r\n//                File f = new File(currentPhotoPath);\r\n//                selectedImage.setImageURI(Uri.fromFile(f));\r\n//                Log.d(\"tag\", \"Absolute Url of Image is \" + Uri.fromFile(f));\r\n//\r\n//                Intent mediaScanIntent = new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE);\r\n//                Uri contentUri = Uri.fromFile(f);\r\n//                mediaScanIntent.setData(contentUri);\r\n//                this.sendBroadcast(mediaScanIntent);\r\n                Bitmap bitmap = null;\r\n                try {\r\n                    bitmap = MediaStore.Images.Media.getBitmap(this.getContentResolver(), capturedImageUri);\r\n\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n                ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\r\n                bitmap = scale(bitmap, 1080, 1920);\r\n                bitmap.compress(Bitmap.CompressFormat.JPEG, 100, byteArrayOutputStream);\r\n                byte[] imgInByte = byteArrayOutputStream.toByteArray();\r\n                encodedImage = Base64.encodeToString(imgInByte, Base64.DEFAULT);\r\n                selectedImage.setImageBitmap(bitmap);\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if (requestCode == LOCATION_REQUEST_CODE && resultCode == RESULT_OK && data != null) {\r\n            tvLat.setText(data.getStringExtra(\"strLat\"));\r\n            tvLong.setText(data.getStringExtra(\"StrLong\"));\r\n            accuracy = data.getStringExtra(\"StrAcc\");\r\n        }\r\n\r\n        if (requestCode == GALLERY_REQUEST_CODE) {\r\n            if (resultCode == Activity.RESULT_OK) {\r\n\r\n                //Code for getting image as URI\r\n                /* Uri contentUri = data.getData();\r\n                String timeStamp = new SimpleDateFormat(\"yyyyMMdd_HHmmss\").format(new Date());\r\n                String imageFileName = \"JPEG_\" + timeStamp + \".\" + getFileExt(contentUri);\r\n                Log.d(\"tag\", \"onActivityResult: Gallery Image Uri:  \" + imageFileName);\r\n                selectedImage.setImageURI(contentUri); */\r\n\r\n                InputStream inputStream = null;\r\n                try {\r\n                    inputStream = getContentResolver().openInputStream(data.getData());\r\n                } catch (FileNotFoundException e) {\r\n                    e.printStackTrace();\r\n                }\r\n\r\n                ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\r\n                Bitmap bitmap = BitmapFactory.decodeStream(inputStream);\r\n//                bitmap = scale(bitmap, 576, 1024);\r\n                bitmap = scale(bitmap, 1080, 1920);\r\n                bitmap.compress(Bitmap.CompressFormat.JPEG, 100, byteArrayOutputStream);\r\n                byte[] imgInByte = byteArrayOutputStream.toByteArray();\r\n                encodedImage = Base64.encodeToString(imgInByte, Base64.DEFAULT);\r\n                selectedImage.setImageBitmap(bitmap);\r\n            }\r\n\r\n        }\r\n\r\n        if (requestCode == 0) {\r\n            if (resultCode == CommonStatusCodes.SUCCESS) {\r\n                if (data != null) {\r\n                    Log.e(\"Check\", \"Receiving data\");\r\n                    Barcode barcode = data.getParcelableExtra(\"barcode\");\r\n                    edtQRCode.setText(barcode.displayValue);\r\n                } else {\r\n                    edtQRCode.setHint(\"No Barcode found\");\r\n                }\r\n\r\n            }\r\n        } else {\r\n            super.onActivityResult(requestCode, resultCode, data);\r\n        }\r\n    }\r\n\r\n    private void initViews() {\r\n        camera = findViewById(R.id.btnCamera);\r\n        gallery = findViewById(R.id.btnGallery);\r\n        selectedImage = findViewById(R.id.imgMachine);\r\n        getLocation = findViewById(R.id.btnGetLocation);\r\n        edtQRCode = findViewById(R.id.edtQRCode);\r\n        btnScanQR = findViewById(R.id.btnScanQRCodeMach);\r\n        tvLat = findViewById(R.id.tvLat);\r\n        tvLong = findViewById(R.id.tvLong);\r\n        spinMachineType = findViewById(R.id.spinMachineType);\r\n        btnSave = findViewById(R.id.btnSaveNewMachine);\r\n        multspinProblemsUnused = findViewById(R.id.multspinProblemsUnused);\r\n//        multspinRentBrgy = findViewById(R.id.multispinRentBrgy);\r\n//        spinRentMun = findViewById(R.id.spinRentMunicipality);\r\n//        spinRentProv = findViewById(R.id.spinRentProvince);\r\n        singlespinProvince = findViewById(R.id.singlespinProvince);\r\n        singlespinMunicipality = findViewById(R.id.singlespinMunicipalities);\r\n        singlespinBarangay = findViewById(R.id.singlespinBarangays);\r\n        edtRentProv = findViewById(R.id.edtRentProv);\r\n        edtRentMun = findViewById(R.id.edtRentMun);\r\n        edtRentBrgy = findViewById(R.id.edtRentBrgy);\r\n        tvTypeOfMill = findViewById(R.id.tvTypeMill);\r\n        spinTypeOfMill = findViewById(R.id.spinTypeMill);\r\n        tvBrand = findViewById(R.id.tvBrand);\r\n        edtCapacity = findViewById(R.id.edtCapacity);\r\n        tvOwnership = findViewById(R.id.tvOwnership);\r\n        edtAveYield = findViewById(R.id.edtAveYield);\r\n        edtNumLoads = findViewById(R.id.edtNumberOfLoads);\r\n        edtRate = findViewById(R.id.edtRate);\r\n        tvTypeOfTubewells = findViewById(R.id.tvTypeOfTubewells);\r\n        spinTypeofTubeWells = findViewById(R.id.spinTypeOfTubewells);\r\n        edtAveOpDays = findViewById(R.id.edtAverageOperatingDays);\r\n        edtAveOpHours = findViewById(R.id.edtAverageOperatingHours);\r\n        edtServiceArea = findViewById(R.id.edtServiceArea);\r\n        spinOwnership = findViewById(R.id.spinOwnership);\r\n        spinPurchGrantDono = findViewById(R.id.spinPurchGrantDono);\r\n        spinAgency = findViewById(R.id.spinAgency);\r\n        edtNameOfOwnerOrg = findViewById(R.id.edtNameOfOwnerOrOrganization);\r\n        spinYearAcquired = findViewById(R.id.spinYearAcquired);\r\n        spinRental = findViewById(R.id.spinRental);\r\n        edtCustomRate = findViewById(R.id.edtCustomRate);\r\n        spinCustomUnit = findViewById(R.id.spinCustomUnit);\r\n        edtCustomRateUnit = findViewById(R.id.edtCustomRateUnit);\r\n        tvMachineAvailability = findViewById(R.id.tvMachineAvailability);\r\n        spinAvailability = findViewById(R.id.spinAvailability);\r\n        tvConditionPresent = findViewById(R.id.tvConditionPresent);\r\n        spinConditionPresent = findViewById(R.id.spinConditionPresent);\r\n        tvLocation = findViewById(R.id.tvLocationOfMachine);\r\n        spinConditionAcquired = findViewById(R.id.spinConditionAcquired);\r\n//        spinProvince = findViewById(R.id.spinProvince);\r\n//        spinMunicipality = findViewById(R.id.spinMunicipality);\r\n//        singlespinBarangay = findViewById(R.id.singlespinBrgy);\r\n        edtOtherAgency = findViewById(R.id.edtOtherAgency);\r\n        edtOtherBrand = findViewById(R.id.edtOtherBrand);\r\n        edtOtherModel = findViewById(R.id.edtOtherModel);\r\n        spinBrand = findViewById(R.id.spinBrand);\r\n        spinModel = findViewById(R.id.spinModel);\r\n        tvModel = findViewById(R.id.tvModel);\r\n        edtRatedPower = findViewById(R.id.edtRatedPower);\r\n        edtOtherProblems = findViewById(R.id.edtOtherProblems);\r\n        tvCommas = findViewById(R.id.tvCommas);\r\n        spinLocationOfMachine = findViewById(R.id.spinLocationOfMachine);\r\n        spinRespName = findViewById(R.id.spinRespondentName);\r\n    }\r\n\r\n    private void hide() {\r\n        tvTypeOfMill.setVisibility(View.INVISIBLE);\r\n        spinTypeOfMill.setVisibility(View.INVISIBLE);\r\n        tvTypeOfTubewells.setVisibility(View.INVISIBLE);\r\n        spinTypeofTubeWells.setVisibility(View.INVISIBLE);\r\n        spinPurchGrantDono.setVisibility(View.INVISIBLE);\r\n        spinAgency.setVisibility(View.INVISIBLE);\r\n        edtCustomRate.setVisibility(View.INVISIBLE);\r\n        spinCustomUnit.setVisibility(View.INVISIBLE);\r\n        edtCustomRateUnit.setVisibility(View.INVISIBLE);\r\n        multspinProblemsUnused.setVisibility(View.INVISIBLE);\r\n        edtOtherAgency.setVisibility(View.INVISIBLE);\r\n        edtOtherModel.setVisibility(View.INVISIBLE);\r\n        edtOtherBrand.setVisibility(View.INVISIBLE);\r\n        edtOtherProblems.setVisibility(View.INVISIBLE);\r\n        //Hiding Location Spinners\r\n//        spinProvince.setVisibility(View.INVISIBLE);\r\n//        spinMunicipality.setVisibility(View.INVISIBLE);\r\n//        singlespinBarangay.setVisibility(View.INVISIBLE);\r\n        //Hiding Rent Locations\r\n//        spinRentProv.setVisibility(View.INVISIBLE);\r\n//        spinRentMun.setVisibility(View.INVISIBLE);\r\n//        multspinRentBrgy.setVisibility(View.INVISIBLE);\r\n        edtRentProv.setVisibility(View.INVISIBLE);\r\n        edtRentMun.setVisibility(View.INVISIBLE);\r\n        edtRentBrgy.setVisibility(View.INVISIBLE);\r\n        tvCommas.setVisibility(View.INVISIBLE);\r\n    }\r\n}\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/m3das/biomech/design/AddMachineActivity.java	(revision b65a8d4092c36b149b09627eb3ea7b43cf4e495d)
+++ app/src/main/java/com/m3das/biomech/design/AddMachineActivity.java	(date 1605683860600)
@@ -158,6 +158,10 @@
         initViews();
         hide();
 
+        tvLat.setText("Not yet Acquired");
+        tvLong.setText("Not yet Acquired");
+        accuracy = "Not yet Acquired";
+
         machineListViewModel = new ViewModelProvider(this).get(MachineListViewModel.class);
 
         setInputFilters();
@@ -1751,7 +1755,7 @@
 
             if (isNullOrEmpty(encodedImage)) {
 
-                encodedImage = getResources().getString(R.string.default_image);
+                encodedImage = "Not yet Acquired";
             }
 
             int id = getIntent().getIntExtra(EXTRA_ID, -1);
@@ -1897,7 +1901,6 @@
             ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.CAMERA}, CAMERA_PERM_CODE);
         }
         else {
-            //TODO ADD PICTURE INTENT
         }
 
     }
Index: app/src/main/res/layout/view_implements_activity.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<ScrollView xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".ViewImplements\">\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvListForImplements\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"50dp\"\r\n            android:text=\"TextView\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintHorizontal_bias=\"0.25\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n</ScrollView>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/view_implements_activity.xml	(revision b65a8d4092c36b149b09627eb3ea7b43cf4e495d)
+++ app/src/main/res/layout/view_implements_activity.xml	(date 1605577604069)
@@ -15,7 +15,6 @@
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
             android:layout_marginTop="50dp"
-            android:text="TextView"
             app:layout_constraintEnd_toEndOf="parent"
             app:layout_constraintHorizontal_bias="0.25"
             app:layout_constraintStart_toStartOf="parent"
Index: app/src/main/java/com/m3das/biomech/design/ViewImplements.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.m3das.biomech.design;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.lifecycle.ViewModelProvider;\r\n\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.widget.TextView;\r\n\r\nimport com.m3das.biomech.design.profiledb.Profile;\r\nimport com.m3das.biomech.design.viewmodels.MachineListViewModel;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class ViewImplements extends AppCompatActivity {\r\n    private TextView tvOutput;\r\n    private MachineListViewModel machineListViewModel;\r\n    private String impList;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.view_implements_activity);\r\n\r\n        tvOutput = findViewById(R.id.tvListForImplements);\r\n\r\n        impList = Variable.getImpList();\r\n        Log.d(\"Value\", \"of profile List\" + impList);\r\n\r\n\r\n        tvOutput.setText(impList);\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/m3das/biomech/design/ViewImplements.java	(revision b65a8d4092c36b149b09627eb3ea7b43cf4e495d)
+++ app/src/main/java/com/m3das/biomech/design/ViewImplements.java	(date 1605577696290)
@@ -27,10 +27,18 @@
         tvOutput = findViewById(R.id.tvListForImplements);
 
         impList = Variable.getImpList();
-        Log.d("Value", "of profile List" + impList);
+        Log.d("Value", "of profile List" + " > " + impList);
 
 
+        if (isNullOrEmpty(impList.trim())) {
+            impList = "No implements please add an implement first";
+        }
         tvOutput.setText(impList);
 
+
+    }
+
+    public static boolean isNullOrEmpty(String str) {
+        return str == null || str.isEmpty();
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/m3das/biomech/design/fragments/ImplementsFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.m3das.biomech.design.fragments;\r\n\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.res.ColorStateList;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Spinner;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.lifecycle.ViewModelProvider;\r\nimport androidx.recyclerview.widget.ItemTouchHelper;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\nimport com.m3das.biomech.design.AddImplementActivity;\r\nimport com.m3das.biomech.design.AddMachineActivity;\r\nimport com.m3das.biomech.design.ImplementAdapter;\r\nimport com.m3das.biomech.design.MachineAdapter;\r\nimport com.m3das.biomech.design.R;\r\nimport com.m3das.biomech.design.Variable;\r\nimport com.m3das.biomech.design.implementdb.Implements;\r\nimport com.m3das.biomech.design.machinedb.Machines;\r\nimport com.m3das.biomech.design.viewmodels.ImplementViewModel;\r\nimport com.m3das.biomech.design.viewmodels.MachineListViewModel;\r\n\r\nimport java.util.List;\r\n\r\npublic class ImplementsFragment extends Fragment {\r\n\r\n    private ImplementViewModel mViewModel;\r\n    private Spinner selectFrag;\r\n    private FloatingActionButton fabAddImplement, fabDeleteImplement;\r\n    private ImplementViewModel implementViewModel;\r\n    private RecyclerView recyclerView;\r\n    private int num;\r\n    public static final int ADD_IMPLEMENT_REQUEST = 19283012;\r\n    public static final int EDIT_IMPLEMENT_REQUEST = 9123123;\r\n\r\n\r\n    public static ImplementsFragment newInstance() {\r\n        return new ImplementsFragment();\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container,\r\n                             @Nullable Bundle savedInstanceState) {\r\n        View v = inflater.inflate(R.layout.implements_fragment, container, false);\r\n        num = 3;\r\n        fabAddImplement = v.findViewById(R.id.floatingActionButtonImpAdd);\r\n        fabDeleteImplement = v.findViewById(R.id.floatingActionButtonDeleteImplement);\r\n        fabAddImplement.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                openAddImplementActivity();\r\n            }\r\n        });\r\n        recyclerView = v.findViewById(R.id.recyclerViewIL);\r\n        recyclerView.setLayoutManager(new LinearLayoutManager(this.getContext()));\r\n        recyclerView.setHasFixedSize(true);\r\n\r\n        ImplementAdapter implementAdapter = new ImplementAdapter();\r\n        recyclerView.setAdapter(implementAdapter);\r\n\r\n        implementViewModel = new ViewModelProvider(this).get(ImplementViewModel.class);\r\n\r\n        implementViewModel.getAllImplements().observe(getActivity(), new Observer<List<Implements>>() {\r\n            @Override\r\n            public void onChanged(List<Implements> anImplements) {\r\n                String implementList = new String();\r\n                for (int i = anImplements.size() - 1; i > -1; i--) {\r\n                    implementList = implementList + \"Implement ID: \" + anImplements.get(i).getId();\r\n                    implementList = implementList + \"\\nImplement QR Code: \" + anImplements.get(i).getImplement_qrcode();\r\n                    implementList = implementList + \"\\nAttached to Machine: \" + anImplements.get(i).getUsed_on_machine();\r\n                    implementList = implementList + \"\\nImplement type: \" + anImplements.get(i).getImplement_type()+ \"\\n\\n\";\r\n                }\r\n                Variable.setImpList(implementList);\r\n\r\n                implementAdapter.setImplementsArrayListList(anImplements);\r\n            }\r\n        });\r\n\r\n        fabDeleteImplement.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                num = num + 1;\r\n\r\n                if (num % 2 == 0) {\r\n                    fabDeleteImplement.setBackgroundTintList(ColorStateList.valueOf(getResources().getColor(R.color.colorPrimaryDark)));\r\n                    fabDeleteImplement.setRippleColor(ColorStateList.valueOf(getResources().getColor(R.color.colorAccent)));\r\n                    Toast.makeText(getContext(), \"Now you can delete items by swiping\", Toast.LENGTH_SHORT).show();\r\n\r\n                } else {\r\n\r\n                    fabDeleteImplement.setBackgroundTintList(ColorStateList.valueOf(getResources().getColor(R.color.colorAccent)));\r\n                    fabDeleteImplement.setRippleColor(ColorStateList.valueOf(getResources().getColor(R.color.colorPrimaryDark)));\r\n\r\n                }\r\n\r\n                Log.d(\"Value of Num CLICK\", String.valueOf(num));\r\n            }\r\n        });\r\n\r\n        new ItemTouchHelper(new ItemTouchHelper.SimpleCallback(0, ItemTouchHelper.LEFT | ItemTouchHelper.RIGHT) {\r\n            @Override\r\n            public boolean onMove(@NonNull RecyclerView recyclerView, @NonNull RecyclerView.ViewHolder viewHolder, @NonNull RecyclerView.ViewHolder target) {\r\n                return false;\r\n            }\r\n\r\n            @Override\r\n            public void onSwiped(@NonNull RecyclerView.ViewHolder viewHolder, int direction) {\r\n\r\n\r\n                AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\r\n                builder.setTitle(\"Deleting Item\")\r\n                        .setMessage(\"You will be deleting this: \"+ implementAdapter.getImplement(viewHolder.getAdapterPosition()).getImplement_qrcode())\r\n                        .setPositiveButton(\"Okay\", new DialogInterface.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(DialogInterface dialogInterface, int i) {\r\n                                implementViewModel.delete(implementAdapter.getImplement(viewHolder.getAdapterPosition()));\r\n                            }\r\n\r\n                        })\r\n                        .setNegativeButton(\"Cancel\", new DialogInterface.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(DialogInterface dialog, int which) {\r\n                                implementAdapter.notifyDataSetChanged();\r\n                            }\r\n                        });\r\n                builder.show();\r\n\r\n            }\r\n\r\n            @Override\r\n            public int getSwipeDirs(@NonNull RecyclerView recyclerView, @NonNull RecyclerView.ViewHolder viewHolder) {\r\n                Log.d(\"Value of Num ITH\", String.valueOf(num));\r\n                if (num % 2 != 0) {\r\n                    return 0;\r\n                }\r\n                return super.getSwipeDirs(recyclerView, viewHolder);\r\n            }\r\n        }).attachToRecyclerView(recyclerView);\r\n\r\n\r\n        return v;\r\n    }\r\n\r\n    public void openAddImplementActivity(){\r\n        Intent intent = new Intent(getContext(), AddImplementActivity.class);\r\n        startActivityForResult(intent, ADD_IMPLEMENT_REQUEST);\r\n    }\r\n/*\r\n    @Override\r\n    public void onActivityCreated(@Nullable Bundle savedInstanceState) {\r\n        super.onActivityCreated(savedInstanceState);\r\n        //mViewModel = ViewModelProviders.of(this).get(ImplementViewModel.class);\r\n\r\n        mViewModel = new ViewModelProvider(this).get(ImplementViewModel.class);\r\n\r\n    }\r\n\r\n*/\r\n\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (requestCode == ADD_IMPLEMENT_REQUEST && resultCode == Activity.RESULT_OK) {\r\n\r\n            String implement_type = data.getStringExtra(AddImplementActivity.EXTRA_IMP_TYPE);\r\n            String implement_qr_code = data.getStringExtra(AddImplementActivity.EXTRA_IMP_QR);\r\n            String date_of_survey = data.getStringExtra(AddImplementActivity.EXTRA_DATE);\r\n            String used_on_machine = data.getStringExtra(AddImplementActivity.EXTRA_USED_ON);\r\n            String used_on_machine_complete = data.getStringExtra(AddImplementActivity.EXTRA_USED_COMPLETE);\r\n            String land_clearing = data.getStringExtra(AddImplementActivity.EXTRA_LAND_CLEAR);\r\n            String pre_planting = data.getStringExtra(AddImplementActivity.EXTRA_PRE_PLANT);\r\n            String planting = data.getStringExtra(AddImplementActivity.EXTRA_PLANTING);\r\n            String fertilizer_application = data.getStringExtra(AddImplementActivity.EXTRA_FERT_APP);\r\n            String pesticide_application = data.getStringExtra(AddImplementActivity.EXTRA_PEST_APP);\r\n            String irrigation_drainage = data.getStringExtra(AddImplementActivity.EXTRA_IRRI_DRAIN);\r\n            String cultivation = data.getStringExtra(AddImplementActivity.EXTRA_CULT);\r\n            String ratooning = data.getStringExtra(AddImplementActivity.EXTRA_RATOON);\r\n            String harvest = data.getStringExtra(AddImplementActivity.EXTRA_HARVEST);\r\n            String post_harvest = data.getStringExtra(AddImplementActivity.EXTRA_POST_HARVEST);\r\n            String hauling = data.getStringExtra(AddImplementActivity.EXTRA_HAULING);\r\n            String total_service_area_main = data.getStringExtra(AddImplementActivity.EXTRA_TSA_MAIN);\r\n            String average_operating_hours_main = data.getStringExtra(AddImplementActivity.EXTRA_AVE_OP_HOURS_MAIN);\r\n            String average_operating_days_main = data.getStringExtra(AddImplementActivity.EXTRA_AVE_OP_DAYS_MAIN);\r\n            String effective_area_accomplished_main = data.getStringExtra(AddImplementActivity.EXTRA_EFF_AREA_ACC_MAIN);\r\n            String time_used_during_operation_main = data.getStringExtra(AddImplementActivity.EXTRA_TIME_USED_OP_MAIN);\r\n            String field_capacity_main = data.getStringExtra(AddImplementActivity.EXTRA_FIELD_CAP_MAIN);\r\n            String type_of_planter = data.getStringExtra(AddImplementActivity.EXTRA_TYPE_PLANT);\r\n            String number_of_rows_planter = data.getStringExtra(AddImplementActivity.EXTRA_NUM_ROWS_PLANT);\r\n            String distance_of_materials_planter = data.getStringExtra(AddImplementActivity.EXTRA_DIST_MAT_PLANT);\r\n            String total_service_area_planter = data.getStringExtra(AddImplementActivity.EXTRA_TSA_PLANT);\r\n            String average_operating_hours_planter = data.getStringExtra(AddImplementActivity.EXTRA_AVE_OP_HOURS_PLANT);\r\n            String average_operating_days_planter = data.getStringExtra(AddImplementActivity.EXTRA_AVE_OP_DAYS_PLANT);\r\n            String effective_area_accomplished_planter = data.getStringExtra(AddImplementActivity.EXTRA_EFF_AREA_ACC_PLANT);\r\n            String time_used_during_operation_planter = data.getStringExtra(AddImplementActivity.EXTRA_TIME_USED_OP_PLANT);\r\n            String field_capacity_planter = data.getStringExtra(AddImplementActivity.EXTRA_FIELD_CAP_PLANT);\r\n            String total_service_area_fertilizer = data.getStringExtra(AddImplementActivity.EXTRA_TSA_FERT);\r\n            String average_operating_hours_fertilizer = data.getStringExtra(AddImplementActivity.EXTRA_AVE_OP_HOURS_FERT);\r\n            String average_operating_days_fertilizer = data.getStringExtra(AddImplementActivity.EXTRA_AVE_OP_DAYS_FERT);\r\n            String effective_area_accomplished_fertilizer = data.getStringExtra(AddImplementActivity.EXTRA_EFF_AREA_ACC_FERT);\r\n            String time_used_during_operation_fertilizer = data.getStringExtra(AddImplementActivity.EXTRA_TIME_USED_OP_FERT);\r\n            String field_capacity_fertilizer = data.getStringExtra(AddImplementActivity.EXTRA_FIELD_CAP_FERT);\r\n            String weight_fertilizer = data.getStringExtra(AddImplementActivity.EXTRA_WEIGHT_FERT);\r\n            String delivery_rate_fetilizer = data.getStringExtra(AddImplementActivity.EXTRA_DEL_RATE_FERT);\r\n            String total_service_area_harvester = data.getStringExtra(AddImplementActivity.EXTRA_TSA_HARVEST);\r\n            String average_operating_hours_harvester = data.getStringExtra(AddImplementActivity.EXTRA_AVE_OP_HOURS_HARVEST);\r\n            String average_operating_days_harvester = data.getStringExtra(AddImplementActivity.EXTRA_AVE_OP_DAYS_HARVEST);\r\n            String effective_area_accomplished_harvester = data.getStringExtra(AddImplementActivity.EXTRA_EFF_AREA_ACC_HARVEST);\r\n            String time_used_during_operation_harvester = data.getStringExtra(AddImplementActivity.EXTRA_TIME_USED_OP_HARVEST);\r\n            String field_capacity_harvester = data.getStringExtra(AddImplementActivity.EXTRA_FIELD_CAP_HARVEST);\r\n            String average_yield_harvester = data.getStringExtra(AddImplementActivity.EXTRA_AVE_YIELD_HARVEST);\r\n            String total_service_area_cane_grab_loader = data.getStringExtra(AddImplementActivity.EXTRA_TSA_GRAB);\r\n            String average_operating_hours_cane_grab_loader = data.getStringExtra(AddImplementActivity.EXTRA_AVE_OP_HOURS_GRAB);\r\n            String average_operating_days_cane_grab_loader = data.getStringExtra(AddImplementActivity.EXTRA_AVE_OP_DAYS_GRAB);\r\n            String loading_capacity_cane_grab_loader = data.getStringExtra(AddImplementActivity.EXTRA_LOAD_CAP_GRAB);\r\n            String number_loads_cane_grab_loader = data.getStringExtra(AddImplementActivity.EXTRA_NUM_LOAD_GRAB);\r\n            String total_service_area_ditcher = data.getStringExtra(AddImplementActivity.EXTRA_TSA_DITCH);\r\n            String average_operating_hours_ditcher = data.getStringExtra(AddImplementActivity.EXTRA_AVE_OP_HOURS_DITCH);\r\n            String average_operating_days_ditcher = data.getStringExtra(AddImplementActivity.EXTRA_AVE_OP_DAYS_DITCH);\r\n            String depth_cut_ditcher = data.getStringExtra(AddImplementActivity.EXTRA_DEPTH_CUT_DITCH);\r\n            String year_acquired = data.getStringExtra(AddImplementActivity.EXTRA_YEAR_ACQUIRED);\r\n            String condition = data.getStringExtra(AddImplementActivity.EXTRA_CONDITION);\r\n            String location = data.getStringExtra(AddImplementActivity.EXTRA_LOCATION);\r\n            String province = data.getStringExtra(AddImplementActivity.EXTRA_PROVINCE);\r\n            String city = data.getStringExtra(AddImplementActivity.EXTRA_MUNICIPALITY);\r\n            String barangay = data.getStringExtra(AddImplementActivity.EXTRA_BARANGAY);\r\n            String image_base64 = Variable.getStringImage();\r\n            String latitude = data.getStringExtra(AddImplementActivity.EXTRA_LATITUDE);\r\n            String longitude = data.getStringExtra(AddImplementActivity.EXTRA_LONGITUDE);\r\n            String accuracy = data.getStringExtra(AddImplementActivity.EXTRA_ACCURACY);\r\n\r\n            Implements imp = new Implements(implement_type, implement_qr_code,date_of_survey, used_on_machine,used_on_machine_complete,land_clearing,pre_planting,planting,fertilizer_application,\r\n                    pesticide_application,irrigation_drainage,cultivation,ratooning,harvest,post_harvest,hauling,total_service_area_main,average_operating_hours_main,average_operating_days_main,\r\n                    effective_area_accomplished_main,time_used_during_operation_main,field_capacity_main,type_of_planter,number_of_rows_planter,distance_of_materials_planter,total_service_area_planter\r\n                    ,average_operating_hours_planter,average_operating_days_planter,effective_area_accomplished_planter,time_used_during_operation_planter,field_capacity_planter,total_service_area_fertilizer\r\n                    ,average_operating_hours_fertilizer,average_operating_days_fertilizer,effective_area_accomplished_fertilizer,time_used_during_operation_fertilizer,field_capacity_fertilizer,\r\n                    weight_fertilizer, delivery_rate_fetilizer,total_service_area_harvester,average_operating_hours_harvester,average_operating_days_harvester,effective_area_accomplished_harvester,\r\n                    time_used_during_operation_harvester,field_capacity_harvester,average_yield_harvester,total_service_area_cane_grab_loader,average_operating_hours_cane_grab_loader,\r\n                    average_operating_days_cane_grab_loader,\"effective_area_accomplished_cane_grab_loader\",loading_capacity_cane_grab_loader,number_loads_cane_grab_loader,total_service_area_ditcher,\r\n                    average_operating_hours_ditcher,average_operating_days_ditcher,depth_cut_ditcher,year_acquired,condition,location,province,city,barangay,image_base64,latitude,longitude,accuracy);\r\n\r\n            implementViewModel.insert(imp);\r\n\r\n            Log.d(\"Is note saved\", \"Note Saved\" + implement_type);\r\n            Toast.makeText(getActivity(), \"Note saved\", Toast.LENGTH_SHORT).show();\r\n        }\r\n        else if (requestCode == EDIT_IMPLEMENT_REQUEST && resultCode == Activity.RESULT_OK) {\r\n            int id = data.getIntExtra(AddImplementActivity.EXTRA_IMP_ID, -1);\r\n            if (id == -1) {\r\n                Toast.makeText(getActivity(), \"Note can't be updated\", Toast.LENGTH_SHORT).show();\r\n                return;\r\n            }\r\n            String implement_type = data.getStringExtra(AddImplementActivity.EXTRA_IMP_TYPE);\r\n            String implement_qr_code = data.getStringExtra(AddImplementActivity.EXTRA_IMP_QR);\r\n            String date_of_survey = data.getStringExtra(AddImplementActivity.EXTRA_DATE);\r\n            String used_on_machine = data.getStringExtra(AddImplementActivity.EXTRA_USED_ON);\r\n            String used_on_machine_complete = data.getStringExtra(AddImplementActivity.EXTRA_USED_COMPLETE);\r\n            String land_clearing = data.getStringExtra(AddImplementActivity.EXTRA_LAND_CLEAR);\r\n            String pre_planting = data.getStringExtra(AddImplementActivity.EXTRA_PRE_PLANT);\r\n            String planting = data.getStringExtra(AddImplementActivity.EXTRA_PLANTING);\r\n            String fertilizer_application = data.getStringExtra(AddImplementActivity.EXTRA_FERT_APP);\r\n            String pesticide_application = data.getStringExtra(AddImplementActivity.EXTRA_PEST_APP);\r\n            String irrigation_drainage = data.getStringExtra(AddImplementActivity.EXTRA_IRRI_DRAIN);\r\n            String cultivation = data.getStringExtra(AddImplementActivity.EXTRA_CULT);\r\n            String ratooning = data.getStringExtra(AddImplementActivity.EXTRA_RATOON);\r\n            String harvest = data.getStringExtra(AddImplementActivity.EXTRA_HARVEST);\r\n            String post_harvest = data.getStringExtra(AddImplementActivity.EXTRA_POST_HARVEST);\r\n            String hauling = data.getStringExtra(AddImplementActivity.EXTRA_HAULING);\r\n            String total_service_area_main = data.getStringExtra(AddImplementActivity.EXTRA_TSA_MAIN);\r\n            String average_operating_hours_main = data.getStringExtra(AddImplementActivity.EXTRA_AVE_OP_HOURS_MAIN);\r\n            String average_operating_days_main = data.getStringExtra(AddImplementActivity.EXTRA_AVE_OP_DAYS_MAIN);\r\n            String effective_area_accomplished_main = data.getStringExtra(AddImplementActivity.EXTRA_EFF_AREA_ACC_MAIN);\r\n            String time_used_during_operation_main = data.getStringExtra(AddImplementActivity.EXTRA_TIME_USED_OP_MAIN);\r\n            String field_capacity_main = data.getStringExtra(AddImplementActivity.EXTRA_FIELD_CAP_MAIN);\r\n            String type_of_planter = data.getStringExtra(AddImplementActivity.EXTRA_TYPE_PLANT);\r\n            String number_of_rows_planter = data.getStringExtra(AddImplementActivity.EXTRA_NUM_ROWS_PLANT);\r\n            String distance_of_materials_planter = data.getStringExtra(AddImplementActivity.EXTRA_DIST_MAT_PLANT);\r\n            String total_service_area_planter = data.getStringExtra(AddImplementActivity.EXTRA_TSA_PLANT);\r\n            String average_operating_hours_planter = data.getStringExtra(AddImplementActivity.EXTRA_AVE_OP_HOURS_PLANT);\r\n            String average_operating_days_planter = data.getStringExtra(AddImplementActivity.EXTRA_AVE_OP_DAYS_PLANT);\r\n            String effective_area_accomplished_planter = data.getStringExtra(AddImplementActivity.EXTRA_EFF_AREA_ACC_PLANT);\r\n            String time_used_during_operation_planter = data.getStringExtra(AddImplementActivity.EXTRA_TIME_USED_OP_PLANT);\r\n            String field_capacity_planter = data.getStringExtra(AddImplementActivity.EXTRA_FIELD_CAP_PLANT);\r\n            String total_service_area_fertilizer = data.getStringExtra(AddImplementActivity.EXTRA_TSA_FERT);\r\n            String average_operating_hours_fertilizer = data.getStringExtra(AddImplementActivity.EXTRA_AVE_OP_HOURS_FERT);\r\n            String average_operating_days_fertilizer = data.getStringExtra(AddImplementActivity.EXTRA_AVE_OP_DAYS_FERT);\r\n            String effective_area_accomplished_fertilizer = data.getStringExtra(AddImplementActivity.EXTRA_EFF_AREA_ACC_FERT);\r\n            String time_used_during_operation_fertilizer = data.getStringExtra(AddImplementActivity.EXTRA_TIME_USED_OP_FERT);\r\n            String field_capacity_fertilizer = data.getStringExtra(AddImplementActivity.EXTRA_FIELD_CAP_FERT);\r\n            String weight_fertilizer = data.getStringExtra(AddImplementActivity.EXTRA_WEIGHT_FERT);\r\n            String delivery_rate_fetilizer = data.getStringExtra(AddImplementActivity.EXTRA_DEL_RATE_FERT);\r\n            String total_service_area_harvester = data.getStringExtra(AddImplementActivity.EXTRA_TSA_HARVEST);\r\n            String average_operating_hours_harvester = data.getStringExtra(AddImplementActivity.EXTRA_AVE_OP_HOURS_HARVEST);\r\n            String average_operating_days_harvester = data.getStringExtra(AddImplementActivity.EXTRA_AVE_OP_DAYS_HARVEST);\r\n            String effective_area_accomplished_harvester = data.getStringExtra(AddImplementActivity.EXTRA_EFF_AREA_ACC_HARVEST);\r\n            String time_used_during_operation_harvester = data.getStringExtra(AddImplementActivity.EXTRA_TIME_USED_OP_HARVEST);\r\n            String field_capacity_harvester = data.getStringExtra(AddImplementActivity.EXTRA_FIELD_CAP_HARVEST);\r\n            String average_yield_harvester = data.getStringExtra(AddImplementActivity.EXTRA_AVE_YIELD_HARVEST);\r\n            String total_service_area_cane_grab_loader = data.getStringExtra(AddImplementActivity.EXTRA_TSA_GRAB);\r\n            String average_operating_hours_cane_grab_loader = data.getStringExtra(AddImplementActivity.EXTRA_AVE_OP_HOURS_GRAB);\r\n            String average_operating_days_cane_grab_loader = data.getStringExtra(AddImplementActivity.EXTRA_AVE_OP_DAYS_GRAB);\r\n            String loading_capacity_cane_grab_loader = data.getStringExtra(AddImplementActivity.EXTRA_LOAD_CAP_GRAB);\r\n            String number_loads_cane_grab_loader = data.getStringExtra(AddImplementActivity.EXTRA_NUM_LOAD_GRAB);\r\n            String total_service_area_ditcher = data.getStringExtra(AddImplementActivity.EXTRA_TSA_DITCH);\r\n            String average_operating_hours_ditcher = data.getStringExtra(AddImplementActivity.EXTRA_AVE_OP_HOURS_DITCH);\r\n            String average_operating_days_ditcher = data.getStringExtra(AddImplementActivity.EXTRA_AVE_OP_DAYS_DITCH);\r\n            String depth_cut_ditcher = data.getStringExtra(AddImplementActivity.EXTRA_DEPTH_CUT_DITCH);\r\n            String year_acquired = data.getStringExtra(AddImplementActivity.EXTRA_YEAR_ACQUIRED);\r\n            String condition = data.getStringExtra(AddImplementActivity.EXTRA_CONDITION);\r\n            String location = data.getStringExtra(AddImplementActivity.EXTRA_LOCATION);\r\n            String province = data.getStringExtra(AddImplementActivity.EXTRA_PROVINCE);\r\n            String city = data.getStringExtra(AddImplementActivity.EXTRA_MUNICIPALITY);\r\n            String barangay = data.getStringExtra(AddImplementActivity.EXTRA_BARANGAY);\r\n            String image_base64 = Variable.getStringImage();\r\n            String latitude = data.getStringExtra(AddImplementActivity.EXTRA_LATITUDE);\r\n            String longitude = data.getStringExtra(AddImplementActivity.EXTRA_LONGITUDE);\r\n            String accuracy = data.getStringExtra(AddImplementActivity.EXTRA_ACCURACY);\r\n\r\n            Implements imp = new Implements(implement_type, implement_qr_code,date_of_survey, used_on_machine,used_on_machine_complete,land_clearing,pre_planting,planting,fertilizer_application,\r\n                    pesticide_application,irrigation_drainage,cultivation,ratooning,harvest,post_harvest,hauling,total_service_area_main,average_operating_hours_main,average_operating_days_main,\r\n                    effective_area_accomplished_main,time_used_during_operation_main,field_capacity_main,type_of_planter,number_of_rows_planter,distance_of_materials_planter,total_service_area_planter\r\n                    ,average_operating_hours_planter,average_operating_days_planter,effective_area_accomplished_planter,time_used_during_operation_planter,field_capacity_planter,total_service_area_fertilizer\r\n                    ,average_operating_hours_fertilizer,average_operating_days_fertilizer,effective_area_accomplished_fertilizer,time_used_during_operation_fertilizer,field_capacity_fertilizer,\r\n                    weight_fertilizer, delivery_rate_fetilizer,total_service_area_harvester,average_operating_hours_harvester,average_operating_days_harvester,effective_area_accomplished_harvester,\r\n                    time_used_during_operation_harvester,field_capacity_harvester,average_yield_harvester,total_service_area_cane_grab_loader,average_operating_hours_cane_grab_loader,\r\n                    average_operating_days_cane_grab_loader,\"effective_area_accomplished_cane_grab_loader\",loading_capacity_cane_grab_loader,number_loads_cane_grab_loader,total_service_area_ditcher,\r\n                    average_operating_hours_ditcher,average_operating_days_ditcher,depth_cut_ditcher,year_acquired,condition,location,province,city,barangay,image_base64,latitude,longitude,accuracy);\r\n\r\n            implementViewModel.insert(imp);\r\n\r\n            imp.setId(id);\r\n\r\n            implementViewModel.update(imp);\r\n            Toast.makeText(getActivity(), \"Note updated\", Toast.LENGTH_SHORT).show();\r\n        } else {\r\n            Toast.makeText(getActivity(), \"Note not saved\", Toast.LENGTH_SHORT).show();\r\n            Log.d(\"Is note saved\", \"Note Not Saved\");\r\n        }\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/m3das/biomech/design/fragments/ImplementsFragment.java	(revision b65a8d4092c36b149b09627eb3ea7b43cf4e495d)
+++ app/src/main/java/com/m3das/biomech/design/fragments/ImplementsFragment.java	(date 1606093652211)
@@ -27,10 +27,12 @@
 import com.m3das.biomech.design.AddMachineActivity;
 import com.m3das.biomech.design.ImplementAdapter;
 import com.m3das.biomech.design.MachineAdapter;
+import com.m3das.biomech.design.ProfileAdapter;
 import com.m3das.biomech.design.R;
 import com.m3das.biomech.design.Variable;
 import com.m3das.biomech.design.implementdb.Implements;
 import com.m3das.biomech.design.machinedb.Machines;
+import com.m3das.biomech.design.profiledb.Profile;
 import com.m3das.biomech.design.viewmodels.ImplementViewModel;
 import com.m3das.biomech.design.viewmodels.MachineListViewModel;
 
@@ -82,7 +84,7 @@
                     implementList = implementList + "Implement ID: " + anImplements.get(i).getId();
                     implementList = implementList + "\nImplement QR Code: " + anImplements.get(i).getImplement_qrcode();
                     implementList = implementList + "\nAttached to Machine: " + anImplements.get(i).getUsed_on_machine();
-                    implementList = implementList + "\nImplement type: " + anImplements.get(i).getImplement_type()+ "\n\n";
+                    implementList = implementList + "\nImplement type: " + anImplements.get(i).getImplement_type() + "\n\n";
                 }
                 Variable.setImpList(implementList);
 
@@ -90,6 +92,13 @@
             }
         });
 
+        implementAdapter.setOnItemClickListener(new ImplementAdapter.OnItemClickListener() {
+            @Override
+            public void onItemClick(Implements implement) {
+                Toast.makeText(getContext(), "Editing implement still unavailable", Toast.LENGTH_SHORT).show();
+            }
+        });
+
         fabDeleteImplement.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -123,7 +132,7 @@
 
                 AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
                 builder.setTitle("Deleting Item")
-                        .setMessage("You will be deleting this: "+ implementAdapter.getImplement(viewHolder.getAdapterPosition()).getImplement_qrcode())
+                        .setMessage("You will be deleting this: " + implementAdapter.getImplement(viewHolder.getAdapterPosition()).getImplement_qrcode())
                         .setPositiveButton("Okay", new DialogInterface.OnClickListener() {
                             @Override
                             public void onClick(DialogInterface dialogInterface, int i) {
@@ -155,7 +164,7 @@
         return v;
     }
 
-    public void openAddImplementActivity(){
+    public void openAddImplementActivity() {
         Intent intent = new Intent(getContext(), AddImplementActivity.class);
         startActivityForResult(intent, ADD_IMPLEMENT_REQUEST);
     }
@@ -242,22 +251,21 @@
             String longitude = data.getStringExtra(AddImplementActivity.EXTRA_LONGITUDE);
             String accuracy = data.getStringExtra(AddImplementActivity.EXTRA_ACCURACY);
 
-            Implements imp = new Implements(implement_type, implement_qr_code,date_of_survey, used_on_machine,used_on_machine_complete,land_clearing,pre_planting,planting,fertilizer_application,
-                    pesticide_application,irrigation_drainage,cultivation,ratooning,harvest,post_harvest,hauling,total_service_area_main,average_operating_hours_main,average_operating_days_main,
-                    effective_area_accomplished_main,time_used_during_operation_main,field_capacity_main,type_of_planter,number_of_rows_planter,distance_of_materials_planter,total_service_area_planter
-                    ,average_operating_hours_planter,average_operating_days_planter,effective_area_accomplished_planter,time_used_during_operation_planter,field_capacity_planter,total_service_area_fertilizer
-                    ,average_operating_hours_fertilizer,average_operating_days_fertilizer,effective_area_accomplished_fertilizer,time_used_during_operation_fertilizer,field_capacity_fertilizer,
-                    weight_fertilizer, delivery_rate_fetilizer,total_service_area_harvester,average_operating_hours_harvester,average_operating_days_harvester,effective_area_accomplished_harvester,
-                    time_used_during_operation_harvester,field_capacity_harvester,average_yield_harvester,total_service_area_cane_grab_loader,average_operating_hours_cane_grab_loader,
-                    average_operating_days_cane_grab_loader,"effective_area_accomplished_cane_grab_loader",loading_capacity_cane_grab_loader,number_loads_cane_grab_loader,total_service_area_ditcher,
-                    average_operating_hours_ditcher,average_operating_days_ditcher,depth_cut_ditcher,year_acquired,condition,location,province,city,barangay,image_base64,latitude,longitude,accuracy);
+            Implements imp = new Implements(implement_type, implement_qr_code, date_of_survey, used_on_machine, used_on_machine_complete, land_clearing, pre_planting, planting, fertilizer_application,
+                    pesticide_application, irrigation_drainage, cultivation, ratooning, harvest, post_harvest, hauling, total_service_area_main, average_operating_hours_main, average_operating_days_main,
+                    effective_area_accomplished_main, time_used_during_operation_main, field_capacity_main, type_of_planter, number_of_rows_planter, distance_of_materials_planter, total_service_area_planter
+                    , average_operating_hours_planter, average_operating_days_planter, effective_area_accomplished_planter, time_used_during_operation_planter, field_capacity_planter, total_service_area_fertilizer
+                    , average_operating_hours_fertilizer, average_operating_days_fertilizer, effective_area_accomplished_fertilizer, time_used_during_operation_fertilizer, field_capacity_fertilizer,
+                    weight_fertilizer, delivery_rate_fetilizer, total_service_area_harvester, average_operating_hours_harvester, average_operating_days_harvester, effective_area_accomplished_harvester,
+                    time_used_during_operation_harvester, field_capacity_harvester, average_yield_harvester, total_service_area_cane_grab_loader, average_operating_hours_cane_grab_loader,
+                    average_operating_days_cane_grab_loader, "effective_area_accomplished_cane_grab_loader", loading_capacity_cane_grab_loader, number_loads_cane_grab_loader, total_service_area_ditcher,
+                    average_operating_hours_ditcher, average_operating_days_ditcher, depth_cut_ditcher, year_acquired, condition, location, province, city, barangay, image_base64, latitude, longitude, accuracy);
 
             implementViewModel.insert(imp);
 
             Log.d("Is note saved", "Note Saved" + implement_type);
             Toast.makeText(getActivity(), "Note saved", Toast.LENGTH_SHORT).show();
-        }
-        else if (requestCode == EDIT_IMPLEMENT_REQUEST && resultCode == Activity.RESULT_OK) {
+        } else if (requestCode == EDIT_IMPLEMENT_REQUEST && resultCode == Activity.RESULT_OK) {
             int id = data.getIntExtra(AddImplementActivity.EXTRA_IMP_ID, -1);
             if (id == -1) {
                 Toast.makeText(getActivity(), "Note can't be updated", Toast.LENGTH_SHORT).show();
@@ -329,15 +337,15 @@
             String longitude = data.getStringExtra(AddImplementActivity.EXTRA_LONGITUDE);
             String accuracy = data.getStringExtra(AddImplementActivity.EXTRA_ACCURACY);
 
-            Implements imp = new Implements(implement_type, implement_qr_code,date_of_survey, used_on_machine,used_on_machine_complete,land_clearing,pre_planting,planting,fertilizer_application,
-                    pesticide_application,irrigation_drainage,cultivation,ratooning,harvest,post_harvest,hauling,total_service_area_main,average_operating_hours_main,average_operating_days_main,
-                    effective_area_accomplished_main,time_used_during_operation_main,field_capacity_main,type_of_planter,number_of_rows_planter,distance_of_materials_planter,total_service_area_planter
-                    ,average_operating_hours_planter,average_operating_days_planter,effective_area_accomplished_planter,time_used_during_operation_planter,field_capacity_planter,total_service_area_fertilizer
-                    ,average_operating_hours_fertilizer,average_operating_days_fertilizer,effective_area_accomplished_fertilizer,time_used_during_operation_fertilizer,field_capacity_fertilizer,
-                    weight_fertilizer, delivery_rate_fetilizer,total_service_area_harvester,average_operating_hours_harvester,average_operating_days_harvester,effective_area_accomplished_harvester,
-                    time_used_during_operation_harvester,field_capacity_harvester,average_yield_harvester,total_service_area_cane_grab_loader,average_operating_hours_cane_grab_loader,
-                    average_operating_days_cane_grab_loader,"effective_area_accomplished_cane_grab_loader",loading_capacity_cane_grab_loader,number_loads_cane_grab_loader,total_service_area_ditcher,
-                    average_operating_hours_ditcher,average_operating_days_ditcher,depth_cut_ditcher,year_acquired,condition,location,province,city,barangay,image_base64,latitude,longitude,accuracy);
+            Implements imp = new Implements(implement_type, implement_qr_code, date_of_survey, used_on_machine, used_on_machine_complete, land_clearing, pre_planting, planting, fertilizer_application,
+                    pesticide_application, irrigation_drainage, cultivation, ratooning, harvest, post_harvest, hauling, total_service_area_main, average_operating_hours_main, average_operating_days_main,
+                    effective_area_accomplished_main, time_used_during_operation_main, field_capacity_main, type_of_planter, number_of_rows_planter, distance_of_materials_planter, total_service_area_planter
+                    , average_operating_hours_planter, average_operating_days_planter, effective_area_accomplished_planter, time_used_during_operation_planter, field_capacity_planter, total_service_area_fertilizer
+                    , average_operating_hours_fertilizer, average_operating_days_fertilizer, effective_area_accomplished_fertilizer, time_used_during_operation_fertilizer, field_capacity_fertilizer,
+                    weight_fertilizer, delivery_rate_fetilizer, total_service_area_harvester, average_operating_hours_harvester, average_operating_days_harvester, effective_area_accomplished_harvester,
+                    time_used_during_operation_harvester, field_capacity_harvester, average_yield_harvester, total_service_area_cane_grab_loader, average_operating_hours_cane_grab_loader,
+                    average_operating_days_cane_grab_loader, "effective_area_accomplished_cane_grab_loader", loading_capacity_cane_grab_loader, number_loads_cane_grab_loader, total_service_area_ditcher,
+                    average_operating_hours_ditcher, average_operating_days_ditcher, depth_cut_ditcher, year_acquired, condition, location, province, city, barangay, image_base64, latitude, longitude, accuracy);
 
             implementViewModel.insert(imp);
 
Index: app/src/main/java/com/m3das/biomech/design/fragments/ProfileFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.m3das.biomech.design.fragments;\r\n\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.res.ColorStateList;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.lifecycle.ViewModelProvider;\r\nimport androidx.recyclerview.widget.ItemTouchHelper;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\nimport com.m3das.biomech.design.AddImplementActivity;\r\nimport com.m3das.biomech.design.AddMachineActivity;\r\nimport com.m3das.biomech.design.AddProfile;\r\nimport com.m3das.biomech.design.PrivacyAndConsentActivity;\r\nimport com.m3das.biomech.design.ProfileAdapter;\r\nimport com.m3das.biomech.design.R;\r\nimport com.m3das.biomech.design.Variable;\r\nimport com.m3das.biomech.design.implementdb.Implements;\r\nimport com.m3das.biomech.design.profiledb.Profile;\r\nimport com.m3das.biomech.design.viewmodels.ProfileViewModel;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class ProfileFragment extends Fragment {\r\n\r\n    private FloatingActionButton fabAddNewProfile, fabDeleteProfile;\r\n    private RecyclerView recyclerView;\r\n    public static final int ADD_PROFILE_REQUEST = 279;\r\n    public static final int EDIT_PROFILE_REQUEST = 927;\r\n    private int num;\r\n    private ProfileViewModel profileViewModel;\r\n\r\n    public static ProfileFragment newInstance() {\r\n        return new ProfileFragment();\r\n    }\r\n\r\n\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container,\r\n                             @Nullable Bundle savedInstanceState) {\r\n\r\n        View v = inflater.inflate(R.layout.profile_fragment, container, false);\r\n        num = 3;\r\n        fabAddNewProfile = v.findViewById(R.id.floatingActionButtonAddProfile);\r\n        fabDeleteProfile = v.findViewById(R.id.floatingActionButtonDeleteProfile);\r\n\r\n        recyclerView = v.findViewById(R.id.recyclerViewProfileList);\r\n        recyclerView.setLayoutManager(new LinearLayoutManager(this.getContext()));\r\n        recyclerView.setHasFixedSize(true);\r\n\r\n        ProfileAdapter profileAdapter = new ProfileAdapter();\r\n        recyclerView.setAdapter(profileAdapter);\r\n\r\n        profileViewModel = new ViewModelProvider(this).get(ProfileViewModel.class);\r\n\r\n\r\n        profileViewModel.getAllProfiles().observe(getActivity(), new Observer<List<Profile>>() {\r\n            @Override\r\n            public void onChanged(List<Profile> profiles) {\r\n//                String profileList = \"\";\r\n//                for (int i = profiles.size() - 1; i > -1; i--) {\r\n//                    profileList = profileList + \"Profile ID: \" + profiles.get(i).getId();\r\n//                    profileList = profileList + \"\\nName of Respondent:\" + profiles.get(i).getName_respondent() + \"\\n\\n\";\r\n//\r\n//                }\r\n\r\n                ArrayList<String> profileListAfterSet = new ArrayList<>();\r\n                for (int i = 0; i < profiles.size(); i++) {\r\n                    profileListAfterSet.add(profiles.get(i).getResCode());\r\n                }\r\n\r\n\r\n                Variable.setListResCode(profileListAfterSet);\r\n\r\n\r\n//                Variable.setProfileList(profileList);\r\n\r\n                profileAdapter.setProfileList(profiles);\r\n            }\r\n        });\r\n\r\n        fabAddNewProfile.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(getContext(), AddProfile.class);\r\n                startActivityForResult(intent, ADD_PROFILE_REQUEST);\r\n            }\r\n        });\r\n\r\n        fabDeleteProfile.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                num = num + 1;\r\n\r\n                if (num % 2 == 0) {\r\n                    fabDeleteProfile.setBackgroundTintList(ColorStateList.valueOf(getResources().getColor(R.color.colorPrimaryDark)));\r\n                    fabDeleteProfile.setRippleColor(ColorStateList.valueOf(getResources().getColor(R.color.colorAccent)));\r\n                    Toast.makeText(getContext(), \"Now you can delete items by swiping\", Toast.LENGTH_SHORT).show();\r\n\r\n                } else {\r\n\r\n                    fabDeleteProfile.setBackgroundTintList(ColorStateList.valueOf(getResources().getColor(R.color.colorAccent)));\r\n                    fabDeleteProfile.setRippleColor(ColorStateList.valueOf(getResources().getColor(R.color.colorPrimaryDark)));\r\n\r\n                }\r\n\r\n                Log.d(\"Value of Num CLICK\", String.valueOf(num));\r\n            }\r\n        });\r\n\r\n        new ItemTouchHelper(new ItemTouchHelper.SimpleCallback(0, ItemTouchHelper.LEFT | ItemTouchHelper.RIGHT) {\r\n            @Override\r\n            public boolean onMove(@NonNull RecyclerView recyclerView, @NonNull RecyclerView.ViewHolder viewHolder, @NonNull RecyclerView.ViewHolder target) {\r\n                return false;\r\n            }\r\n\r\n            @Override\r\n            public void onSwiped(@NonNull RecyclerView.ViewHolder viewHolder, int direction) {\r\n\r\n\r\n                AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\r\n                builder.setTitle(\"Deleting Item\")\r\n                        .setMessage(\"You will be deleting this: \" + profileAdapter.getProfileAt(viewHolder.getAdapterPosition()).getName_respondent())\r\n                        .setPositiveButton(\"Okay\", new DialogInterface.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(DialogInterface dialogInterface, int i) {\r\n                                profileViewModel.delete(profileAdapter.getProfileAt(viewHolder.getAdapterPosition()));\r\n                            }\r\n\r\n                        })\r\n                        .setNegativeButton(\"Cancel\", new DialogInterface.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(DialogInterface dialog, int which) {\r\n                                profileAdapter.notifyDataSetChanged();\r\n                            }\r\n                        });\r\n                builder.show();\r\n\r\n            }\r\n\r\n            @Override\r\n            public int getSwipeDirs(@NonNull RecyclerView recyclerView, @NonNull RecyclerView.ViewHolder viewHolder) {\r\n                Log.d(\"Value of Num ITH\", String.valueOf(num));\r\n                if (num % 2 != 0) {\r\n                    return 0;\r\n                }\r\n                return super.getSwipeDirs(recyclerView, viewHolder);\r\n            }\r\n        }).attachToRecyclerView(recyclerView);\r\n        return v;\r\n    }\r\n\r\n    public void addNewProfile() {\r\n        Intent intent = new Intent(getContext(), PrivacyAndConsentActivity.class);\r\n        startActivityForResult(intent, ADD_PROFILE_REQUEST);\r\n    }\r\n\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n\r\n        if (requestCode == ADD_PROFILE_REQUEST && resultCode == Activity.RESULT_OK) {\r\n\r\n            String resCode = data.getStringExtra(AddProfile.EXTRA_PROFILE_RESCODE);\r\n            String profileofres = data.getStringExtra(AddProfile.EXTRA_PROFILE);\r\n            String profile_specify = data.getStringExtra(AddProfile.EXTRA_PROFILE_SPECIFY);\r\n            String owner_type = data.getStringExtra(AddProfile.EXTRA_PROFILE_OWNER_TYPE);\r\n            String name_respondent = data.getStringExtra(AddProfile.EXTRA_PROFILE_NAME);\r\n            String address = data.getStringExtra(AddProfile.EXTRA_PROFILE_ADDRESS);\r\n            String age = data.getStringExtra(AddProfile.EXTRA_PROFILE_AGE);\r\n            String sex = data.getStringExtra(AddProfile.EXTRA_PROFILE_SEX);\r\n            String contact_number = data.getStringExtra(AddProfile.EXTRA_PROFILE_CONTACT_INFO);\r\n            String mobnum1 = data.getStringExtra(AddProfile.EXTRA_PROFILE_MOB_NUM1);\r\n            String mobnum2 = data.getStringExtra(AddProfile.EXTRA_PROFILE_MOB_NUM2);\r\n            String telnum1 = data.getStringExtra(AddProfile.EXTRA_PROFILE_TEL_NUM1);\r\n            String telnum2 = data.getStringExtra(AddProfile.EXTRA_PROFILE_TEL_NUM2);\r\n            String educational_attainment = data.getStringExtra(AddProfile.EXTRA_PROFILE_EDUC_ATTAIN);\r\n\r\n            Profile profile = new Profile(resCode, profileofres, profile_specify, owner_type, name_respondent,\r\n                    address, age, sex, contact_number, mobnum1, mobnum2, telnum1, telnum2, educational_attainment);\r\n\r\n            profileViewModel.insert(profile);\r\n        } else if (requestCode == EDIT_PROFILE_REQUEST && resultCode == Activity.RESULT_OK) {\r\n            int id = data.getIntExtra(AddProfile.EXTRA_PROFILE_ID, -1);\r\n            if (id == -1) {\r\n                Toast.makeText(getActivity(), \"Note can't be updated\", Toast.LENGTH_SHORT).show();\r\n                return;\r\n            }\r\n            String resCode = data.getStringExtra(AddProfile.EXTRA_PROFILE_RESCODE);\r\n            String profileofres = data.getStringExtra(AddProfile.EXTRA_PROFILE);\r\n            String profile_specify = data.getStringExtra(AddProfile.EXTRA_PROFILE_SPECIFY);\r\n            String owner_type = data.getStringExtra(AddProfile.EXTRA_PROFILE_OWNER_TYPE);\r\n            String name_respondent = data.getStringExtra(AddProfile.EXTRA_PROFILE_NAME);\r\n            String address = data.getStringExtra(AddProfile.EXTRA_PROFILE_ADDRESS);\r\n            String age = data.getStringExtra(AddProfile.EXTRA_PROFILE_AGE);\r\n            String sex = data.getStringExtra(AddProfile.EXTRA_PROFILE_SEX);\r\n            String contact_number = data.getStringExtra(AddProfile.EXTRA_PROFILE_CONTACT_INFO);\r\n            String mobnum1 = data.getStringExtra(AddProfile.EXTRA_PROFILE_MOB_NUM1);\r\n            String mobnum2 = data.getStringExtra(AddProfile.EXTRA_PROFILE_MOB_NUM2);\r\n            String telnum1 = data.getStringExtra(AddProfile.EXTRA_PROFILE_TEL_NUM1);\r\n            String telnum2 = data.getStringExtra(AddProfile.EXTRA_PROFILE_TEL_NUM2);\r\n            String educational_attainment = data.getStringExtra(AddProfile.EXTRA_PROFILE_EDUC_ATTAIN);\r\n\r\n            Profile profile = new Profile(resCode, profileofres, profile_specify, owner_type, name_respondent,\r\n                    address, age, sex, contact_number,mobnum1, mobnum2,telnum1, telnum2, educational_attainment );\r\n\r\n            profile.setId(id);\r\n            profileViewModel.update(profile);\r\n\r\n            Toast.makeText(getActivity(), \"Note updated\", Toast.LENGTH_SHORT).show();\r\n        } else {\r\n            Toast.makeText(getActivity(), \"Note not saved\", Toast.LENGTH_SHORT).show();\r\n            Log.d(\"Is note saved\", \"Note Not Saved\");\r\n        }\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/m3das/biomech/design/fragments/ProfileFragment.java	(revision b65a8d4092c36b149b09627eb3ea7b43cf4e495d)
+++ app/src/main/java/com/m3das/biomech/design/fragments/ProfileFragment.java	(date 1606093642572)
@@ -94,6 +94,13 @@
             }
         });
 
+        profileAdapter.setOnItemClickListener(new ProfileAdapter.OnItemClickListener() {
+            @Override
+            public void onItemClick(Profile profile) {
+                Toast.makeText(getContext(), "Editing profile still unavailable", Toast.LENGTH_SHORT).show();
+            }
+        });
+
         fabAddNewProfile.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
Index: app/src/main/java/com/m3das/biomech/design/fragments/DataFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.m3das.biomech.design.fragments;\r\n\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.lifecycle.ViewModelProvider;\r\nimport androidx.lifecycle.ViewModelProviders;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.Toast;\r\n\r\nimport com.m3das.biomech.design.AddMachineActivity;\r\nimport com.m3das.biomech.design.R;\r\nimport com.m3das.biomech.design.Variable;\r\nimport com.m3das.biomech.design.ViewDataActivity;\r\nimport com.m3das.biomech.design.ViewImplements;\r\nimport com.m3das.biomech.design.ViewMachines;\r\nimport com.m3das.biomech.design.machinedb.Machines;\r\nimport com.m3das.biomech.design.uploadtoserver.ResponsePojo;\r\nimport com.m3das.biomech.design.uploadtoserver.RetroClient;\r\nimport com.m3das.biomech.design.viewmodels.DataViewModel;\r\nimport com.m3das.biomech.design.viewmodels.MachineListViewModel;\r\n\r\nimport java.util.List;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\n\r\npublic class DataFragment extends Fragment {\r\n\r\n    private MachineListViewModel machineListViewModel;\r\n\r\n    public static DataFragment newInstance() {\r\n        return new DataFragment();\r\n    }\r\n\r\n    private Button btnView, btnUpload, btnViewMachines, btnViewImplements;\r\n    private String machineType, machineQRCode, datesurvey, brand, brand_specify, model, model_specify, rated_power, service_area, ave_op_hours, ave_op_days, capacity, ave_yield, num_loads, rate,\r\n            ownership, purch_grant_dono, agency, agency_specify, name_owner, year_acquired, condition_acquired, rental, custom_rate, custom_unit, custom_unit_specify, availablity, rent_prov,\r\n            rent_mun, rent_brgy, condition, problems, problems_specify, location, prov, mun, brgy, latitude, longitude, imageString, accuracy, tubewells, type_mill, resCode, resName;\r\n\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container,\r\n                             @Nullable Bundle savedInstanceState) {\r\n        View v = inflater.inflate(R.layout.data_fragment, container, false);\r\n        btnView = v.findViewById(R.id.btnView);\r\n        btnUpload = v.findViewById(R.id.btnUpload);\r\n        btnViewMachines = v.findViewById(R.id.btnViewMachinesList);\r\n        btnViewImplements = v.findViewById(R.id.btnViewImplementsList);\r\n\r\n        btnView.setVisibility(View.GONE);\r\n\r\n        machineListViewModel = new ViewModelProvider(this).get(MachineListViewModel.class);\r\n\r\n        btnUpload.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                uploadData();\r\n            }\r\n        });\r\n\r\n        btnView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                openViewDataActivity();\r\n            }\r\n        });\r\n\r\n        btnViewMachines.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                Intent intent = new Intent(getContext(), ViewMachines.class);\r\n                getActivity().startActivity(intent);\r\n\r\n            }\r\n        });\r\n\r\n        btnViewImplements.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(getContext(), ViewImplements.class);\r\n                getActivity().startActivity(intent);\r\n            }\r\n        });\r\n\r\n\r\n        return v;\r\n\r\n\r\n    }\r\n\r\n    private void uploadData() {\r\n\r\n        machineListViewModel.getAllMachines().observe(this, new Observer<List<Machines>>() {\r\n            @Override\r\n            public void onChanged(List<Machines> machines) {\r\n\r\n                for (int i = 0; i < machines.size(); i++) {\r\n\r\n                    machineType = machines.get(i).getMachine_type();\r\n                    machineQRCode = machines.get(i).getMachine_qrcode();\r\n                    datesurvey = machines.get(i).getDate_of_survey();\r\n                    brand = machines.get(i).getMachine_brand();\r\n                    brand_specify = machines.get(i).getMachine_brand_specify();\r\n                    model = machines.get(i).getMachine_model();\r\n                    model_specify = machines.get(i).getMachine_model_specify();\r\n                    rated_power = machines.get(i).getRated_power();\r\n                    service_area = machines.get(i).getService_area();\r\n                    ave_op_hours = machines.get(i).getAve_op_hours();\r\n                    ave_op_days = machines.get(i).getAve_op_days();\r\n                    capacity = machines.get(i).getCapacity();\r\n                    ave_yield = machines.get(i).getAve_yield();\r\n                    num_loads = machines.get(i).getNum_loads();\r\n                    rate = machines.get(i).getRate();\r\n                    ownership = machines.get(i).getOwnership();\r\n                    purch_grant_dono = machines.get(i).getPurch_grant_dono();\r\n                    agency = machines.get(i).getAgency();\r\n                    agency_specify = machines.get(i).getAgency_specify();\r\n                    name_owner = machines.get(i).getName_owner();\r\n                    year_acquired = machines.get(i).getYear_acquired();\r\n                    condition_acquired = machines.get(i).getCondition_acquired();\r\n                    rental = machines.get(i).getRental();\r\n                    custom_rate = machines.get(i).getCustom_rate();\r\n                    custom_unit = machines.get(i).getCustom_unit();\r\n                    custom_unit_specify = machines.get(i).getSpecify_custom_unit();\r\n                    availablity = machines.get(i).getAvailability();\r\n                    rent_prov = machines.get(i).getRent_prov();\r\n                    rent_mun = machines.get(i).getRent_mun();\r\n                    rent_brgy = machines.get(i).getRent_brgy();\r\n                    condition = machines.get(i).getCondition();\r\n                    problems = machines.get(i).getProblems();\r\n                    problems_specify = machines.get(i).getSpecify_problems();\r\n                    location = machines.get(i).getLocation();\r\n                    prov = machines.get(i).getProv();\r\n                    mun = machines.get(i).getMun();\r\n                    brgy = machines.get(i).getBrgy();\r\n                    latitude = machines.get(i).getMachine_latitude();\r\n                    longitude = machines.get(i).getMachine_longitude();\r\n                    imageString = machines.get(i).getMachine_image_base64();\r\n                    accuracy = machines.get(i).getAccuracy();\r\n                    tubewells = machines.get(i).getType_tubewells();\r\n                    type_mill = machines.get(i).getType_mill();\r\n                    resCode = machines.get(i).getResCode();\r\n                    resName = machines.get(i).getResName();\r\n\r\n\r\n                    Call<ResponsePojo> responsePojoCall = RetroClient.getInstance().getMachinesApi().uploadMachines(machineType, tubewells, type_mill, machineQRCode, datesurvey, brand, brand_specify, model,\r\n                            model_specify, rated_power, service_area, ave_op_hours, ave_op_days, capacity, ave_yield, num_loads, rate, ownership, purch_grant_dono, agency, agency_specify, name_owner, year_acquired,\r\n                            condition_acquired, rental, custom_rate, custom_unit, custom_unit_specify, availablity, rent_prov, rent_mun, rent_brgy, condition, problems, problems_specify, location, prov, mun, brgy, latitude,\r\n                            longitude, imageString, accuracy, resCode, resName);\r\n\r\n                    responsePojoCall.enqueue(new Callback<ResponsePojo>() {\r\n                        @Override\r\n                        public void onResponse(Call<ResponsePojo> call, Response<ResponsePojo> response) {\r\n                            Toast.makeText(getActivity(), response.body().getRemarks(), Toast.LENGTH_LONG).show();\r\n                            if (response.body().isStatus()) {\r\n\r\n                            } else {\r\n\r\n                            }\r\n                        }\r\n\r\n                        @Override\r\n                        public void onFailure(Call<ResponsePojo> call, Throwable t) {\r\n                            Toast.makeText(getActivity(), \"Network Failed: \" + t.getMessage(), Toast.LENGTH_SHORT).show();\r\n\r\n                        }\r\n                    });\r\n\r\n                }\r\n//                machineType = machines.get(0).getMachine_type();\r\n//                machineQRCode = machines.get(0).getMachine_qrcode();\r\n//                datesurvey = machines.get(0).getDate_of_survey();\r\n//                brand = machines.get(0).getMachine_brand();\r\n//                brand_specify = machines.get(0).getMachine_brand_specify();\r\n//                model = machines.get(0).getMachine_model();\r\n//                model_specify = machines.get(0).getMachine_model_specify();\r\n//                rated_power = machines.get(0).getRated_power();\r\n//                service_area = machines.get(0).getService_area();\r\n//                ave_op_hours = machines.get(0).getAve_op_hours();\r\n//                ave_op_days = machines.get(0).getAve_op_days();\r\n//                capacity = machines.get(0).getCapacity();\r\n//                ave_yield = machines.get(0).getAve_yield();\r\n//                num_loads = machines.get(0).getNum_loads();\r\n//                rate = machines.get(0).getRate();\r\n//                ownership = machines.get(0).getOwnership();\r\n//                purch_grant_dono = machines.get(0).getPurch_grant_dono();\r\n//                agency = machines.get(0).getAgency();\r\n//                agency_specify = machines.get(0).getAgency_specify();\r\n//                name_owner = machines.get(0).getName_owner();\r\n//                year_acquired = machines.get(0).getYear_acquired();\r\n//                condition_acquired = machines.get(0).getCondition_acquired();\r\n//                rental = machines.get(0).getRental();\r\n//                custom_rate = machines.get(0).getCustom_rate();\r\n//                custom_unit = machines.get(0).getCustom_unit();\r\n//                custom_unit_specify = machines.get(0).getSpecify_custom_unit();\r\n//                availablity = machines.get(0).getAvailability();\r\n//                rent_prov = machines.get(0).getRent_prov();\r\n//                rent_mun = machines.get(0).getRent_mun();\r\n//                rent_brgy = machines.get(0).getRent_brgy();\r\n//                condition = machines.get(0).getCondition();\r\n//                problems = machines.get(0).getProblems();\r\n//                problems_specify = machines.get(0).getSpecify_problems();\r\n//                location = machines.get(0).getLocation();\r\n//                prov = machines.get(0).getProv();\r\n//                mun = machines.get(0).getMun();\r\n//                brgy = machines.get(0).getBrgy();\r\n//                latitude = machines.get(0).getMachine_latitude();\r\n//                longitude = machines.get(0).getMachine_longitude();\r\n//                imageString = machines.get(0).getMachine_image_base64();\r\n//                accuracy = machines.get(0).getAccuracy();\r\n//                tubewells = machines.get(0).getType_tubewells();\r\n//                type_mill = machines.get(0).getType_mill();\r\n//                resCode = machines.get(0).getResCode();\r\n//                resName = machines.get(0).getResName();\r\n            }\r\n        });\r\n    }\r\n\r\n    public void openViewDataActivity() {\r\n        Intent intent = new Intent(getContext(), ViewDataActivity.class);\r\n        getActivity().startActivity(intent);\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/m3das/biomech/design/fragments/DataFragment.java	(revision b65a8d4092c36b149b09627eb3ea7b43cf4e495d)
+++ app/src/main/java/com/m3das/biomech/design/fragments/DataFragment.java	(date 1605752142961)
@@ -11,6 +11,7 @@
 import androidx.annotation.Nullable;
 import androidx.fragment.app.Fragment;
 
+import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -23,22 +24,31 @@
 import com.m3das.biomech.design.ViewDataActivity;
 import com.m3das.biomech.design.ViewImplements;
 import com.m3das.biomech.design.ViewMachines;
+import com.m3das.biomech.design.implementdb.Implements;
 import com.m3das.biomech.design.machinedb.Machines;
+import com.m3das.biomech.design.profiledb.Profile;
 import com.m3das.biomech.design.uploadtoserver.ResponsePojo;
 import com.m3das.biomech.design.uploadtoserver.RetroClient;
 import com.m3das.biomech.design.viewmodels.DataViewModel;
+import com.m3das.biomech.design.viewmodels.ImplementViewModel;
 import com.m3das.biomech.design.viewmodels.MachineListViewModel;
+import com.m3das.biomech.design.viewmodels.ProfileViewModel;
 
 import java.util.List;
 
 import retrofit2.Call;
 import retrofit2.Callback;
 import retrofit2.Response;
+import retrofit2.http.Field;
 
 public class DataFragment extends Fragment {
 
     private MachineListViewModel machineListViewModel;
 
+    private ImplementViewModel implementViewModel;
+
+    private ProfileViewModel profileViewModel;
+
     public static DataFragment newInstance() {
         return new DataFragment();
     }
@@ -47,6 +57,13 @@
     private String machineType, machineQRCode, datesurvey, brand, brand_specify, model, model_specify, rated_power, service_area, ave_op_hours, ave_op_days, capacity, ave_yield, num_loads, rate,
             ownership, purch_grant_dono, agency, agency_specify, name_owner, year_acquired, condition_acquired, rental, custom_rate, custom_unit, custom_unit_specify, availablity, rent_prov,
             rent_mun, rent_brgy, condition, problems, problems_specify, location, prov, mun, brgy, latitude, longitude, imageString, accuracy, tubewells, type_mill, resCode, resName;
+    private String impType, impQR, impDateSurvey, impUsedOnMachine, impUsedOnMachineComplete, impLandClear, impPrePlant, impPlant, impFertApp, impPestApp, impIrriDrain, impCult, impRatoon,
+            impHarvest, impPostHarvest, impHauling, impTSAMain, impAOHMain, impAODMain, impEffAAMain, impTUDOpMain, impFieldCapMain, impTypePlant, impNumRowsPlant, impDistMatPlant,
+            impTSAPlant, impAOHPlant, impAODPlant, impEffAAPlant, impTUDOpPlant, impFieldCapPlant, impTSAFert, impAOHFert, impAODFert, impEffAAFert, impTUDOpFert, impFieldCapFert,
+            impWeightFert, impDelRateFert, impTSAHarvest, impAOHHarvest, impAODHarvest, impEffAAHarvest, impTUDOpHarvest, impFieldCapHarvest, impAveYieldHarvest, impTSAGrab,
+            impAOHGrab, impAODGrab, impEffAAGrab, impLoadCapGrab, impNumLoadsGrab, impTSADitch, impAOHDitch, impAODDitch, impDepthCutDitchPost, impYearAcq, impCondition, impLocation,
+            impProv, impMun, impBrgy, impImageBase64, impLat, impLong, impAcc, impEnumeratorCodePost;
+    private String profProfile, profResCode, profProfileSpecify, profOwnerType, profNameRespondent, profAddress, profAge, profSex, profContactNumber, profMobNum1, profMobNum2, profTelNum1, profTelNum2, profEducaAttain;
 
     @Override
     public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container,
@@ -61,6 +78,10 @@
 
         machineListViewModel = new ViewModelProvider(this).get(MachineListViewModel.class);
 
+        implementViewModel = new ViewModelProvider(this).get(ImplementViewModel.class);
+
+        profileViewModel = new ViewModelProvider(this).get(ProfileViewModel.class);
+
         btnUpload.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
@@ -101,6 +122,175 @@
 
     private void uploadData() {
 
+//        implementViewModel.deleteAllImplements();
+        uploadMachines();
+
+        uploadImplements();
+
+        uploadProfiles();
+    }
+
+    private void uploadProfiles() {
+
+        profileViewModel.getAllProfiles().observe(this, new Observer<List<Profile>>() {
+            @Override
+            public void onChanged(List<Profile> profiles) {
+                for (int i = 0; i<profiles.size(); i++){
+
+                    profResCode = profiles.get(i).getResCode();
+                    profProfile = profiles.get(i).getProfile();
+                    profProfileSpecify = profiles.get(i).getProfile_specify();
+                    profOwnerType = profiles.get(i).getOwner_type();
+                    profNameRespondent = profiles.get(i).getName_respondent();
+                    profAddress = profiles.get(i).getAddress();
+                    profAge = profiles.get(i).getAge();
+                    profSex = profiles.get(i).getSex();
+                    profContactNumber = profiles.get(i).getContact_number();
+                    profMobNum1 = profiles.get(i).getMobnum1();
+                    profMobNum2 = profiles.get(i).getMobnum2();
+                    profTelNum1 = profiles.get(i).getTelnum1();
+                    profTelNum2 = profiles.get(i).getTelnum2();
+                    profEducaAttain = profiles.get(i).getEducational_attainment();
+
+                    Call<ResponsePojo> responseProfilePojoCall = RetroClient.getInstance().getProfilesApi().uploadProfiles(profResCode,profProfile,profProfileSpecify, profOwnerType, profNameRespondent, profAddress, profAge, profSex, profContactNumber, profMobNum1, profMobNum2, profTelNum1, profTelNum2, profEducaAttain);
+
+                    responseProfilePojoCall.enqueue(new Callback<ResponsePojo>() {
+                        @Override
+                        public void onResponse(Call<ResponsePojo> call, Response<ResponsePojo> response) {
+                            Toast.makeText(getActivity(), response.body().getRemarks() + " For Profiles", Toast.LENGTH_SHORT).show();
+                            if (response.body().isStatus()) {
+                                Log.d("PROF", profResCode);
+                            } else {
+                            }
+                        }
+
+                        @Override
+                        public void onFailure(Call<ResponsePojo> call, Throwable t) {
+                            Toast.makeText(getActivity(), "Network Failed: " + t.getMessage(), Toast.LENGTH_SHORT).show();
+                            Log.d("NET RES", t.getMessage());
+                        }
+                    });
+                }
+
+            }
+        });
+
+    }
+
+    private void uploadImplements() {
+
+        implementViewModel.getAllImplements().observe(this, new Observer<List<Implements>>() {
+            @Override
+            public void onChanged(List<Implements> anImplements) {
+                for (int i = 0; i < anImplements.size(); i++) {
+
+                    impType = anImplements.get(i).getImplement_type();
+                    impQR = anImplements.get(i).getImplement_qrcode();
+                    impDateSurvey = anImplements.get(i).getDate_of_survey();
+                    impUsedOnMachine = anImplements.get(i).getUsed_on_machine();
+                    impUsedOnMachineComplete = anImplements.get(i).getUsed_on_machine_complete();
+                    impLandClear = anImplements.get(i).getLand_clearing();
+                    impPrePlant = anImplements.get(i).getPre_planting();
+                    impPlant = anImplements.get(i).getPlanting();
+                    impFertApp = anImplements.get(i).getFertilizer_application();
+                    impPestApp = anImplements.get(i).getPesticide_application();
+                    impIrriDrain = anImplements.get(i).getIrrigation_drainage();
+                    impCult = anImplements.get(i).getCultivation();
+                    impRatoon = anImplements.get(i).getRatooning();
+                    impHarvest = anImplements.get(i).getHarvest();
+                    impPostHarvest = anImplements.get(i).getPost_harvest();
+                    impHauling = anImplements.get(i).getHauling();
+
+                    impTSAMain = anImplements.get(i).getTotal_service_area_main();
+                    impAOHMain = anImplements.get(i).getAverage_operating_hours_main();
+                    impAODMain = anImplements.get(i).getAverage_operating_days_main();
+                    impEffAAMain = anImplements.get(i).getEffective_area_accomplished_main();
+                    impTUDOpMain = anImplements.get(i).getTime_used_during_operation_main();
+                    impFieldCapMain = anImplements.get(i).getField_capacity_main();
+
+                    impTypePlant = anImplements.get(i).getType_of_planter();
+                    impNumRowsPlant = anImplements.get(i).getNumber_of_rows_planter();
+                    impDistMatPlant = anImplements.get(i).getDistance_of_materials_planter();
+                    impTSAPlant = anImplements.get(i).getTotal_service_area_planter();
+                    impAOHPlant = anImplements.get(i).getAverage_operating_hours_planter();
+                    impAODPlant = anImplements.get(i).getAverage_operating_days_planter();
+                    impEffAAPlant = anImplements.get(i).getEffective_area_accomplished_planter();
+                    impTUDOpPlant = anImplements.get(i).getTime_used_during_operation_planter();
+                    impFieldCapPlant = anImplements.get(i).getField_capacity_planter();
+
+                    impTSAFert = anImplements.get(i).getTotal_service_area_fertilizer();
+                    impAOHFert = anImplements.get(i).getAverage_operating_hours_fertilizer();
+                    impAODFert = anImplements.get(i).getAverage_operating_days_fertilizer();
+                    impEffAAFert = anImplements.get(i).getEffective_area_accomplished_fertilizer();
+                    impTUDOpFert = anImplements.get(i).getTime_used_during_operation_fertilizer();
+                    impFieldCapFert = anImplements.get(i).getField_capacity_fertilizer();
+                    impWeightFert = anImplements.get(i).getWeight_fertilizer();
+                    impDelRateFert = anImplements.get(i).getDelivery_rate_fetilizer();
+
+                    impTSAHarvest = anImplements.get(i).getTotal_service_area_harvester();
+                    impAOHHarvest = anImplements.get(i).getAverage_operating_hours_harvester();
+                    impAODHarvest = anImplements.get(i).getAverage_operating_days_harvester();
+                    impEffAAHarvest = anImplements.get(i).getEffective_area_accomplished_harvester();
+                    impTUDOpHarvest = anImplements.get(i).getTime_used_during_operation_harvester();
+                    impFieldCapHarvest = anImplements.get(i).getField_capacity_harvester();
+                    impAveYieldHarvest = anImplements.get(i).getAverage_yield_harvester();
+
+                    impTSAGrab = anImplements.get(i).getTotal_service_area_cane_grab_loader();
+                    impAOHGrab = anImplements.get(i).getAverage_operating_hours_cane_grab_loader();
+                    impAODGrab = anImplements.get(i).getAverage_operating_days_cane_grab_loader();
+                    impEffAAGrab = anImplements.get(i).getEffective_area_accomplished_cane_grab_loader();
+                    impLoadCapGrab = anImplements.get(i).getLoading_capacity_cane_grab_loader();
+                    impNumLoadsGrab = anImplements.get(i).getNumber_loads_cane_grab_loader();
+
+                    impTSADitch = anImplements.get(i).getTotal_service_area_ditcher();
+                    impAOHDitch = anImplements.get(i).getAverage_operating_hours_ditcher();
+                    impAODDitch = anImplements.get(i).getAverage_operating_days_ditcher();
+                    impDepthCutDitchPost = anImplements.get(i).getDepth_cut_ditcher();
+
+                    impYearAcq = anImplements.get(i).getYear_acquired();
+                    impCondition = anImplements.get(i).getCondition();
+                    impLocation = anImplements.get(i).getLocation();
+                    impProv = anImplements.get(i).getProvince();
+                    impMun = anImplements.get(i).getCity();
+                    impBrgy = anImplements.get(i).getBarangay();
+                    impImageBase64 = anImplements.get(i).getImage_base64();
+                    impLat = anImplements.get(i).getLatitude();
+                    impLong = anImplements.get(i).getLongitude();
+                    impAcc = anImplements.get(i).getAccuracy();
+//                    impEnumeratorCodePost = anImplements.get(i).
+
+
+                    Call<ResponsePojo> responseImplementPojoCall = RetroClient.getInstance().getImplementApi().uploadImplements(impType, impQR, impDateSurvey, impUsedOnMachine,
+                            impUsedOnMachineComplete, impLandClear, impPrePlant, impPlant, impFertApp, impPestApp, impIrriDrain, impCult, impRatoon, impHarvest, impPostHarvest,
+                            impHauling, impTSAMain, impAOHMain, impAODMain, impEffAAMain, impTUDOpMain, impFieldCapMain, impTypePlant, impNumRowsPlant, impDistMatPlant, impTSAPlant,
+                            impAOHPlant, impAODPlant, impEffAAPlant, impTUDOpPlant, impFieldCapPlant, impTSAFert, impAOHFert, impAODFert, impEffAAFert, impTUDOpFert, impFieldCapFert,
+                            impWeightFert, impDelRateFert, impTSAHarvest, impAOHHarvest, impAODHarvest, impEffAAHarvest, impTUDOpHarvest, impFieldCapHarvest, impAveYieldHarvest, impTSAGrab,
+                            impAOHGrab, impAODGrab, impEffAAGrab, impLoadCapGrab, impNumLoadsGrab, impTSADitch, impAOHDitch, impAODDitch, impDepthCutDitchPost, impYearAcq, impCondition,
+                            impLocation, impProv, impMun, impBrgy, impImageBase64, impLat, impLong, impAcc, "TODO ENUM CODE HERE IMPLEMENTS");
+
+                    responseImplementPojoCall.enqueue(new Callback<ResponsePojo>() {
+                        @Override
+                        public void onResponse(Call<ResponsePojo> call, Response<ResponsePojo> response) {
+                            Toast.makeText(getActivity(), response.body().getRemarks() + " For Implements", Toast.LENGTH_SHORT).show();
+                            if (response.body().isStatus()) {
+                                Log.d("IMP", impQR);
+                            } else {
+                            }
+                        }
+
+                        @Override
+                        public void onFailure(Call<ResponsePojo> call, Throwable t) {
+                            Toast.makeText(getActivity(), "Network Failed: " + t.getMessage(), Toast.LENGTH_SHORT).show();
+                            Log.d("NET RES", t.getMessage());
+                        }
+                    });
+                }
+            }
+        });
+    }
+
+    private void uploadMachines() {
+
         machineListViewModel.getAllMachines().observe(this, new Observer<List<Machines>>() {
             @Override
             public void onChanged(List<Machines> machines) {
@@ -153,18 +343,22 @@
                     resCode = machines.get(i).getResCode();
                     resName = machines.get(i).getResName();
 
+                    if (isNullOrEmpty(problems)) {
+                        problems = "";
+                    } //TODO move the verification of null values to saving of data to ROOMS DB
 
-                    Call<ResponsePojo> responsePojoCall = RetroClient.getInstance().getMachinesApi().uploadMachines(machineType, tubewells, type_mill, machineQRCode, datesurvey, brand, brand_specify, model,
-                            model_specify, rated_power, service_area, ave_op_hours, ave_op_days, capacity, ave_yield, num_loads, rate, ownership, purch_grant_dono, agency, agency_specify, name_owner, year_acquired,
-                            condition_acquired, rental, custom_rate, custom_unit, custom_unit_specify, availablity, rent_prov, rent_mun, rent_brgy, condition, problems, problems_specify, location, prov, mun, brgy, latitude,
-                            longitude, imageString, accuracy, resCode, resName);
+                    Call<ResponsePojo> responseMachinePojoCall = RetroClient.getInstance().getMachinesApi().uploadMachines(machineType, tubewells, type_mill, machineQRCode,
+                            datesurvey, brand, brand_specify, model, model_specify, rated_power, service_area, ave_op_hours, ave_op_days, capacity, ave_yield, num_loads,
+                            rate, ownership, purch_grant_dono, agency, agency_specify, name_owner, year_acquired, condition_acquired, rental, custom_rate, custom_unit,
+                            custom_unit_specify, availablity, rent_prov, rent_mun, rent_brgy, condition, problems, problems_specify, location, prov, mun, brgy, latitude,
+                            longitude, imageString, accuracy, resCode, resName, "enumHereTODO");
 
-                    responsePojoCall.enqueue(new Callback<ResponsePojo>() {
+                    responseMachinePojoCall.enqueue(new Callback<ResponsePojo>() {
                         @Override
                         public void onResponse(Call<ResponsePojo> call, Response<ResponsePojo> response) {
-                            Toast.makeText(getActivity(), response.body().getRemarks(), Toast.LENGTH_LONG).show();
+                            Toast.makeText(getActivity(), response.body().getRemarks() + " For Machines", Toast.LENGTH_SHORT).show();
                             if (response.body().isStatus()) {
-
+                                Log.d("MACH", machineQRCode);
                             } else {
 
                             }
@@ -173,59 +367,20 @@
                         @Override
                         public void onFailure(Call<ResponsePojo> call, Throwable t) {
                             Toast.makeText(getActivity(), "Network Failed: " + t.getMessage(), Toast.LENGTH_SHORT).show();
+                            Log.d("NET RES", t.getMessage());
 
                         }
                     });
+                }
 
-                }
-//                machineType = machines.get(0).getMachine_type();
-//                machineQRCode = machines.get(0).getMachine_qrcode();
-//                datesurvey = machines.get(0).getDate_of_survey();
-//                brand = machines.get(0).getMachine_brand();
-//                brand_specify = machines.get(0).getMachine_brand_specify();
-//                model = machines.get(0).getMachine_model();
-//                model_specify = machines.get(0).getMachine_model_specify();
-//                rated_power = machines.get(0).getRated_power();
-//                service_area = machines.get(0).getService_area();
-//                ave_op_hours = machines.get(0).getAve_op_hours();
-//                ave_op_days = machines.get(0).getAve_op_days();
-//                capacity = machines.get(0).getCapacity();
-//                ave_yield = machines.get(0).getAve_yield();
-//                num_loads = machines.get(0).getNum_loads();
-//                rate = machines.get(0).getRate();
-//                ownership = machines.get(0).getOwnership();
-//                purch_grant_dono = machines.get(0).getPurch_grant_dono();
-//                agency = machines.get(0).getAgency();
-//                agency_specify = machines.get(0).getAgency_specify();
-//                name_owner = machines.get(0).getName_owner();
-//                year_acquired = machines.get(0).getYear_acquired();
-//                condition_acquired = machines.get(0).getCondition_acquired();
-//                rental = machines.get(0).getRental();
-//                custom_rate = machines.get(0).getCustom_rate();
-//                custom_unit = machines.get(0).getCustom_unit();
-//                custom_unit_specify = machines.get(0).getSpecify_custom_unit();
-//                availablity = machines.get(0).getAvailability();
-//                rent_prov = machines.get(0).getRent_prov();
-//                rent_mun = machines.get(0).getRent_mun();
-//                rent_brgy = machines.get(0).getRent_brgy();
-//                condition = machines.get(0).getCondition();
-//                problems = machines.get(0).getProblems();
-//                problems_specify = machines.get(0).getSpecify_problems();
-//                location = machines.get(0).getLocation();
-//                prov = machines.get(0).getProv();
-//                mun = machines.get(0).getMun();
-//                brgy = machines.get(0).getBrgy();
-//                latitude = machines.get(0).getMachine_latitude();
-//                longitude = machines.get(0).getMachine_longitude();
-//                imageString = machines.get(0).getMachine_image_base64();
-//                accuracy = machines.get(0).getAccuracy();
-//                tubewells = machines.get(0).getType_tubewells();
-//                type_mill = machines.get(0).getType_mill();
-//                resCode = machines.get(0).getResCode();
-//                resName = machines.get(0).getResName();
-            }
-        });
+            }
+        });
+    }
+
+    public static boolean isNullOrEmpty(String str) {
+        return str == null || str.isEmpty();
     }
+
 
     public void openViewDataActivity() {
         Intent intent = new Intent(getContext(), ViewDataActivity.class);
Index: app/src/main/java/com/m3das/biomech/design/fragments/MachineListFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.m3das.biomech.design.fragments;\r\n\r\nimport android.app.Activity;\r\nimport android.app.AlertDialog;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.res.ColorStateList;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.lifecycle.Observer;\r\nimport androidx.lifecycle.ViewModelProvider;\r\nimport androidx.recyclerview.widget.ItemTouchHelper;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.google.android.material.floatingactionbutton.FloatingActionButton;\r\nimport com.m3das.biomech.design.AddMachineActivity;\r\nimport com.m3das.biomech.design.MachineAdapter;\r\nimport com.m3das.biomech.design.machinedb.Machines;\r\nimport com.m3das.biomech.design.R;\r\nimport com.m3das.biomech.design.Variable;\r\nimport com.m3das.biomech.design.viewmodels.MachineListViewModel;\r\n\r\nimport java.util.List;\r\n\r\npublic class MachineListFragment extends Fragment {\r\n\r\n    private MachineListViewModel mViewModel;\r\n    private FloatingActionButton fabAddNewMachine, fabDeleteMachine;\r\n    private RecyclerView recyclerView;\r\n    private int num;\r\n\r\n    public static MachineListFragment newInstance() {\r\n        return new MachineListFragment();\r\n    }\r\n\r\n    private MachineListViewModel machineListViewModel;\r\n    public static final int ADD_NOTE_REQUEST = 1123;\r\n    public static final int EDIT_NOTE_REQUEST = 2;\r\n\r\n\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container,\r\n                             @Nullable Bundle savedInstanceState) {\r\n        num = 3;\r\n        View v = inflater.inflate(R.layout.machine_list_fragment, container, false);\r\n        fabAddNewMachine = v.findViewById(R.id.floatingActionButtonAddMachine);\r\n        fabDeleteMachine = v.findViewById(R.id.floatingActionButtonDeleteMachine);\r\n\r\n        recyclerView = v.findViewById(R.id.recyclerViewML);\r\n        recyclerView.setLayoutManager(new LinearLayoutManager(this.getContext()));\r\n        recyclerView.setHasFixedSize(true);\r\n\r\n\r\n        MachineAdapter machineAdapter = new MachineAdapter();\r\n        recyclerView.setAdapter(machineAdapter);\r\n\r\n\r\n        machineListViewModel = new ViewModelProvider(this).get(MachineListViewModel.class);\r\n\r\n        machineListViewModel.getAllMachines().observe(getActivity(), new Observer<List<Machines>>() {\r\n            @Override\r\n            public void onChanged(List<Machines> machines) {\r\n                String machineList = \"\";\r\n                for (int i = machines.size() - 1; i > -1; i--) {\r\n                    machineList = machineList + \"Machine ID: \" + machines.get(i).getId();\r\n                    machineList = machineList + \"\\nMachine QR Code: \" + machines.get(i).getMachine_qrcode();\r\n                    machineList = machineList + \"\\nRespondent Name: \" + machines.get(i).getResName();\r\n                    machineList = machineList + \"\\nMachine Type: \" + machines.get(i).getMachine_type()+ \"\\n\\n\";\r\n                }\r\n                Variable.setMachList(machineList);\r\n\r\n                machineAdapter.setMachinesList(machines);\r\n            }\r\n        });\r\n\r\n        machineAdapter.setOnItemClickListener(new MachineAdapter.OnItemClickListener() {\r\n            @Override\r\n            public void onItemClick(Machines machines) {\r\n                Intent intent = new Intent(getContext(), AddMachineActivity.class);\r\n\r\n                intent.putExtra(AddMachineActivity.EXTRA_ID, machines.getId());\r\n                intent.putExtra(AddMachineActivity.EXTRA_MACHINE_TYPE, machines.getMachine_type());\r\n                intent.putExtra(AddMachineActivity.EXTRA_TYPE_TUBEWELLS, machines.getType_tubewells());\r\n                intent.putExtra(AddMachineActivity.EXTRA_TYPE_MILL, machines.getType_mill());\r\n                intent.putExtra(AddMachineActivity.EXTRA_DATE_TIME, machines.getDate_of_survey());\r\n                intent.putExtra(AddMachineActivity.EXTRA_BRAND, machines.getMachine_brand());\r\n                intent.putExtra(AddMachineActivity.EXTRA_BRAND_SPECIFY, machines.getMachine_brand_specify());\r\n                intent.putExtra(AddMachineActivity.EXTRA_MODEL, machines.getMachine_model());\r\n                intent.putExtra(AddMachineActivity.EXTRA_MODEL_SPECIFY, machines.getMachine_model_specify());\r\n                intent.putExtra(AddMachineActivity.EXTRA_RATED_POWER, machines.getRated_power());\r\n                intent.putExtra(AddMachineActivity.EXTRA_SERVICE_AREA, machines.getService_area());\r\n                intent.putExtra(AddMachineActivity.EXTRA_AVE_OP_HOURS, machines.getAve_op_hours());\r\n                intent.putExtra(AddMachineActivity.EXTRA_AVE_OP_DAYS, machines.getAve_op_days());\r\n                intent.putExtra(AddMachineActivity.EXTRA_CAPACITY, machines.getCapacity());\r\n                intent.putExtra(AddMachineActivity.EXTRA_AVE_YIELD, machines.getAve_yield());\r\n                intent.putExtra(AddMachineActivity.EXTRA_NUM_LOADS, machines.getNum_loads());\r\n                intent.putExtra(AddMachineActivity.EXTRA_RATE, machines.getNum_loads());\r\n                intent.putExtra(AddMachineActivity.EXTRA_OWNERSHIP, machines.getOwnership());\r\n                intent.putExtra(AddMachineActivity.EXTRA_PURCH_GRANT_DONO, machines.getPurch_grant_dono());\r\n                intent.putExtra(AddMachineActivity.EXTRA_AGENCY, machines.getAgency());\r\n                intent.putExtra(AddMachineActivity.EXTRA_AGENCY_SPECIFY, machines.getAgency_specify());\r\n                intent.putExtra(AddMachineActivity.EXTRA_NAME_OWNER, machines.getName_owner());\r\n                intent.putExtra(AddMachineActivity.EXTRA_YEAR_ACQUIRED, machines.getYear_acquired());\r\n                intent.putExtra(AddMachineActivity.EXTRA_CONDITION_ACQUIRED, machines.getCondition_acquired());\r\n                intent.putExtra(AddMachineActivity.EXTRA_RENTAL, machines.getRental());\r\n                intent.putExtra(AddMachineActivity.EXTRA_CUSTOM_RATE, machines.getCustom_rate());\r\n                intent.putExtra(AddMachineActivity.EXTRA_CUSTOM_UNIT, machines.getCustom_unit());\r\n                intent.putExtra(AddMachineActivity.EXTRA_CUSTOM_UNIT_SPECIFY, machines.getSpecify_custom_unit());\r\n                intent.putExtra(AddMachineActivity.EXTRA_AVAILABILITY, machines.getAvailability());\r\n                intent.putExtra(AddMachineActivity.EXTRA_RENT_PROV, machines.getRent_prov());\r\n                intent.putExtra(AddMachineActivity.EXTRA_RENT_MUN, machines.getRent_mun());\r\n                intent.putExtra(AddMachineActivity.EXTRA_RENT_BRGY, machines.getRent_brgy());\r\n                intent.putExtra(AddMachineActivity.EXTRA_CONDITION, machines.getCondition());\r\n                intent.putExtra(AddMachineActivity.EXTRA_PROBLEMS, machines.getProblems());\r\n                intent.putExtra(AddMachineActivity.EXTRA_PROBLEMS_SPECIFY, machines.getSpecify_problems());\r\n                intent.putExtra(AddMachineActivity.EXTRA_LOCATION, machines.getLocation());\r\n                intent.putExtra(AddMachineActivity.EXTRA_PROV, machines.getProv());\r\n                intent.putExtra(AddMachineActivity.EXTRA_MUN, machines.getMun());\r\n                intent.putExtra(AddMachineActivity.EXTRA_BRGY, machines.getBrgy());\r\n                intent.putExtra(AddMachineActivity.EXTRA_MACHINE_QRCODE, machines.getMachine_qrcode());\r\n                intent.putExtra(AddMachineActivity.EXTRA_LAT, machines.getMachine_latitude());\r\n                intent.putExtra(AddMachineActivity.EXTRA_LONG, machines.getMachine_longitude());\r\n                Variable.setStringImage(machines.getMachine_image_base64());\r\n                intent.putExtra(AddMachineActivity.EXTRA_ACC, machines.getAccuracy());\r\n                intent.putExtra(AddMachineActivity.EXTRA_RES_CODE, machines.getResCode());\r\n\r\n                startActivityForResult(intent, EDIT_NOTE_REQUEST);\r\n            }\r\n        });\r\n\r\n\r\n        fabAddNewMachine.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Intent intent = new Intent(getContext(), AddMachineActivity.class);\r\n                startActivityForResult(intent, ADD_NOTE_REQUEST);\r\n            }\r\n        });\r\n\r\n\r\n        fabDeleteMachine.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                num = num + 1;\r\n\r\n                if (num % 2 == 0) {\r\n                    fabDeleteMachine.setBackgroundTintList(ColorStateList.valueOf(getResources().getColor(R.color.colorPrimaryDark)));\r\n                    fabDeleteMachine.setRippleColor(ColorStateList.valueOf(getResources().getColor(R.color.colorAccent)));\r\n                    Toast.makeText(getContext(), \"Now you can delete items by swiping\", Toast.LENGTH_SHORT).show();\r\n\r\n                } else {\r\n\r\n                    fabDeleteMachine.setBackgroundTintList(ColorStateList.valueOf(getResources().getColor(R.color.colorAccent)));\r\n                    fabDeleteMachine.setRippleColor(ColorStateList.valueOf(getResources().getColor(R.color.colorPrimaryDark)));\r\n\r\n                }\r\n\r\n                Log.d(\"Value of Num CLICK\", String.valueOf(num));\r\n            }\r\n        });\r\n\r\n        new ItemTouchHelper(new ItemTouchHelper.SimpleCallback(0, ItemTouchHelper.LEFT | ItemTouchHelper.RIGHT) {\r\n            @Override\r\n            public boolean onMove(@NonNull RecyclerView recyclerView, @NonNull RecyclerView.ViewHolder viewHolder, @NonNull RecyclerView.ViewHolder target) {\r\n                return false;\r\n            }\r\n\r\n            @Override\r\n            public void onSwiped(@NonNull RecyclerView.ViewHolder viewHolder, int direction) {\r\n\r\n\r\n                AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\r\n                builder.setTitle(\"Deleting Item\")\r\n                        .setMessage(\"You will be deleting this: \"+ machineAdapter.getMachineAt(viewHolder.getAdapterPosition()).getMachine_qrcode())\r\n                        .setPositiveButton(\"Okay\", new DialogInterface.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(DialogInterface dialogInterface, int i) {\r\n                                machineListViewModel.delete(machineAdapter.getMachineAt(viewHolder.getAdapterPosition()));\r\n                            }\r\n\r\n                        })\r\n                        .setNegativeButton(\"Cancel\", new DialogInterface.OnClickListener() {\r\n                            @Override\r\n                            public void onClick(DialogInterface dialog, int which) {\r\n                                machineAdapter.notifyDataSetChanged();\r\n                            }\r\n                        });\r\n                builder.show();\r\n\r\n            }\r\n\r\n            @Override\r\n            public int getSwipeDirs(@NonNull RecyclerView recyclerView, @NonNull RecyclerView.ViewHolder viewHolder) {\r\n                Log.d(\"Value of Num ITH\", String.valueOf(num));\r\n                if (num % 2 != 0) {\r\n                    return 0;\r\n                }\r\n                return super.getSwipeDirs(recyclerView, viewHolder);\r\n            }\r\n        }).attachToRecyclerView(recyclerView);\r\n\r\n        return v;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (requestCode == ADD_NOTE_REQUEST && resultCode == Activity.RESULT_OK) {\r\n\r\n            String machineType = data.getStringExtra(AddMachineActivity.EXTRA_MACHINE_TYPE);\r\n            String machineQRCode = data.getStringExtra(AddMachineActivity.EXTRA_MACHINE_QRCODE);\r\n            String datesurvey = data.getStringExtra(AddMachineActivity.EXTRA_DATE_TIME);\r\n            String brand = data.getStringExtra(AddMachineActivity.EXTRA_BRAND);\r\n            String brand_specify = data.getStringExtra(AddMachineActivity.EXTRA_BRAND_SPECIFY);\r\n            String model = data.getStringExtra(AddMachineActivity.EXTRA_MODEL);\r\n            String model_specify = data.getStringExtra(AddMachineActivity.EXTRA_MODEL_SPECIFY);\r\n            String rated_power = data.getStringExtra(AddMachineActivity.EXTRA_RATED_POWER);\r\n            String service_area = data.getStringExtra(AddMachineActivity.EXTRA_SERVICE_AREA);\r\n            String ave_op_hours = data.getStringExtra(AddMachineActivity.EXTRA_AVE_OP_HOURS);\r\n            String ave_op_days = data.getStringExtra(AddMachineActivity.EXTRA_AVE_OP_DAYS);\r\n            String capacity = data.getStringExtra(AddMachineActivity.EXTRA_CAPACITY);\r\n            String ave_yield = data.getStringExtra(AddMachineActivity.EXTRA_AVE_YIELD);\r\n            String num_loads = data.getStringExtra(AddMachineActivity.EXTRA_NUM_LOADS);\r\n            String rate = data.getStringExtra(AddMachineActivity.EXTRA_RATE);\r\n            String ownership = data.getStringExtra(AddMachineActivity.EXTRA_OWNERSHIP);\r\n            String purch_grant_dono = data.getStringExtra(AddMachineActivity.EXTRA_PURCH_GRANT_DONO);\r\n            String agency = data.getStringExtra(AddMachineActivity.EXTRA_AGENCY);\r\n            String agency_specify = data.getStringExtra(AddMachineActivity.EXTRA_AGENCY_SPECIFY);\r\n            String name_owner = data.getStringExtra(AddMachineActivity.EXTRA_NAME_OWNER);\r\n            String year_acquired = data.getStringExtra(AddMachineActivity.EXTRA_YEAR_ACQUIRED);\r\n            String condition_acquired = data.getStringExtra(AddMachineActivity.EXTRA_CONDITION_ACQUIRED);\r\n            String rental = data.getStringExtra(AddMachineActivity.EXTRA_RENTAL);\r\n            String custom_rate = data.getStringExtra(AddMachineActivity.EXTRA_CUSTOM_RATE);\r\n            String custom_unit = data.getStringExtra(AddMachineActivity.EXTRA_CUSTOM_UNIT);\r\n            String custom_unit_specify = data.getStringExtra(AddMachineActivity.EXTRA_CUSTOM_UNIT_SPECIFY);\r\n            String availablity = data.getStringExtra(AddMachineActivity.EXTRA_AVAILABILITY);\r\n            String rent_prov = data.getStringExtra(AddMachineActivity.EXTRA_RENT_PROV);\r\n            String rent_mun = data.getStringExtra(AddMachineActivity.EXTRA_RENT_MUN);\r\n            String rent_brgy = data.getStringExtra(AddMachineActivity.EXTRA_RENT_BRGY);\r\n            String condition = data.getStringExtra(AddMachineActivity.EXTRA_CONDITION);\r\n            String problems = data.getStringExtra(AddMachineActivity.EXTRA_PROBLEMS);\r\n            String problems_specify = data.getStringExtra(AddMachineActivity.EXTRA_PROBLEMS_SPECIFY);\r\n            String location = data.getStringExtra(AddMachineActivity.EXTRA_LOCATION);\r\n            String prov = data.getStringExtra(AddMachineActivity.EXTRA_PROV);\r\n            String mun = data.getStringExtra(AddMachineActivity.EXTRA_MUN);\r\n            String brgy = data.getStringExtra(AddMachineActivity.EXTRA_BRGY);\r\n            String latitude = data.getStringExtra(AddMachineActivity.EXTRA_LAT);\r\n            String longitude = data.getStringExtra(AddMachineActivity.EXTRA_LONG);\r\n            String imageString = Variable.getStringImage();\r\n            String accuracy = data.getStringExtra(AddMachineActivity.EXTRA_ACC);\r\n            String tubewells = data.getStringExtra(AddMachineActivity.EXTRA_TYPE_TUBEWELLS);\r\n            String type_mill = data.getStringExtra(AddMachineActivity.EXTRA_TYPE_MILL);\r\n            String resCode = data.getStringExtra(AddMachineActivity.EXTRA_RES_CODE);\r\n            String resName = data.getStringExtra(AddMachineActivity.EXTRA_RES_NAME);\r\n\r\n            Machines machines = new Machines(machineType, tubewells, type_mill, machineQRCode, datesurvey, brand, brand_specify, model, model_specify, rated_power, service_area, ave_op_hours,\r\n                    ave_op_days, capacity, ave_yield, num_loads, rate, ownership, purch_grant_dono, agency, agency_specify, name_owner, year_acquired, condition_acquired,\r\n                    rental, custom_rate, custom_unit, custom_unit_specify, availablity, rent_prov, rent_mun, rent_brgy, condition, problems, problems_specify, location,\r\n                    prov, mun, brgy, latitude, longitude, imageString, accuracy, resCode, resName);\r\n\r\n            machineListViewModel.insert(machines);\r\n\r\n            Log.d(\"Is note saved\", \"Note Saved\" + machineType);\r\n            Toast.makeText(getActivity(), \"Note saved\", Toast.LENGTH_SHORT).show();\r\n        } else if (requestCode == EDIT_NOTE_REQUEST && resultCode == Activity.RESULT_OK) {\r\n            int id = data.getIntExtra(AddMachineActivity.EXTRA_ID, -1);\r\n            if (id == -1) {\r\n                Toast.makeText(getActivity(), \"Note can't be updated\", Toast.LENGTH_SHORT).show();\r\n                return;\r\n            }\r\n\r\n            String machineType = data.getStringExtra(AddMachineActivity.EXTRA_MACHINE_TYPE);\r\n            String machineQRCode = data.getStringExtra(AddMachineActivity.EXTRA_MACHINE_QRCODE);\r\n            String datesurvey = data.getStringExtra(AddMachineActivity.EXTRA_DATE_TIME);\r\n            String brand = data.getStringExtra(AddMachineActivity.EXTRA_BRAND);\r\n            String brand_specify = data.getStringExtra(AddMachineActivity.EXTRA_BRAND_SPECIFY);\r\n            String model = data.getStringExtra(AddMachineActivity.EXTRA_MODEL);\r\n            String model_specify = data.getStringExtra(AddMachineActivity.EXTRA_MODEL_SPECIFY);\r\n            String rated_power = data.getStringExtra(AddMachineActivity.EXTRA_RATED_POWER);\r\n            String service_area = data.getStringExtra(AddMachineActivity.EXTRA_SERVICE_AREA);\r\n            String ave_op_hours = data.getStringExtra(AddMachineActivity.EXTRA_AVE_OP_HOURS);\r\n            String ave_op_days = data.getStringExtra(AddMachineActivity.EXTRA_AVE_OP_DAYS);\r\n            String capacity = data.getStringExtra(AddMachineActivity.EXTRA_CAPACITY);\r\n            String ave_yield = data.getStringExtra(AddMachineActivity.EXTRA_AVE_YIELD);\r\n            String num_loads = data.getStringExtra(AddMachineActivity.EXTRA_NUM_LOADS);\r\n            String rate = data.getStringExtra(AddMachineActivity.EXTRA_RATE);\r\n            String ownership = data.getStringExtra(AddMachineActivity.EXTRA_OWNERSHIP);\r\n            String purch_grant_dono = data.getStringExtra(AddMachineActivity.EXTRA_PURCH_GRANT_DONO);\r\n            String agency = data.getStringExtra(AddMachineActivity.EXTRA_AGENCY);\r\n            String agency_specify = data.getStringExtra(AddMachineActivity.EXTRA_AGENCY_SPECIFY);\r\n            String name_owner = data.getStringExtra(AddMachineActivity.EXTRA_NAME_OWNER);\r\n            String year_acquired = data.getStringExtra(AddMachineActivity.EXTRA_YEAR_ACQUIRED);\r\n            String condition_acquired = data.getStringExtra(AddMachineActivity.EXTRA_CONDITION_ACQUIRED);\r\n            String rental = data.getStringExtra(AddMachineActivity.EXTRA_RENTAL);\r\n            String custom_rate = data.getStringExtra(AddMachineActivity.EXTRA_CUSTOM_RATE);\r\n            String custom_unit = data.getStringExtra(AddMachineActivity.EXTRA_CUSTOM_UNIT);\r\n            String custom_unit_specify = data.getStringExtra(AddMachineActivity.EXTRA_CUSTOM_UNIT_SPECIFY);\r\n            String availablity = data.getStringExtra(AddMachineActivity.EXTRA_AVAILABILITY);\r\n            String rent_prov = data.getStringExtra(AddMachineActivity.EXTRA_RENT_PROV);\r\n            String rent_mun = data.getStringExtra(AddMachineActivity.EXTRA_RENT_MUN);\r\n            String rent_brgy = data.getStringExtra(AddMachineActivity.EXTRA_RENT_BRGY);\r\n            String condition = data.getStringExtra(AddMachineActivity.EXTRA_CONDITION);\r\n            String problems = data.getStringExtra(AddMachineActivity.EXTRA_PROBLEMS);\r\n            String problems_specify = data.getStringExtra(AddMachineActivity.EXTRA_PROBLEMS_SPECIFY);\r\n            String location = data.getStringExtra(AddMachineActivity.EXTRA_LOCATION);\r\n            String prov = data.getStringExtra(AddMachineActivity.EXTRA_PROV);\r\n            String mun = data.getStringExtra(AddMachineActivity.EXTRA_MUN);\r\n            String brgy = data.getStringExtra(AddMachineActivity.EXTRA_BRGY);\r\n            String latitude = data.getStringExtra(AddMachineActivity.EXTRA_LAT);\r\n            String longitude = data.getStringExtra(AddMachineActivity.EXTRA_LONG);\r\n            String imageString = Variable.getStringImage();\r\n            String accuracy = data.getStringExtra(AddMachineActivity.EXTRA_ACC);\r\n            String tubewells = data.getStringExtra(AddMachineActivity.EXTRA_TYPE_TUBEWELLS);\r\n            String type_mill = data.getStringExtra(AddMachineActivity.EXTRA_TYPE_MILL);\r\n            String resCode = data.getStringExtra(AddMachineActivity.EXTRA_RES_CODE);\r\n            String resName = data.getStringExtra(AddMachineActivity.EXTRA_RES_NAME);\r\n\r\n            Machines machines = new Machines(machineType, tubewells, type_mill, machineQRCode, datesurvey, brand, brand_specify, model, model_specify, rated_power, service_area, ave_op_hours,\r\n                    ave_op_days, capacity, ave_yield, num_loads, rate, ownership, purch_grant_dono, agency, agency_specify, name_owner, year_acquired, condition_acquired,\r\n                    rental, custom_rate, custom_unit, custom_unit_specify, availablity, rent_prov, rent_mun, rent_brgy, condition, problems, problems_specify, location,\r\n                    prov, mun, brgy, latitude, longitude, imageString, accuracy, resCode, resName);\r\n\r\n            machines.setId(id);\r\n\r\n            machineListViewModel.update(machines);\r\n            Toast.makeText(getActivity(), \"Note updated\", Toast.LENGTH_SHORT).show();\r\n        } else {\r\n            Toast.makeText(getActivity(), \"Note not saved\", Toast.LENGTH_SHORT).show();\r\n            Log.d(\"Is note saved\", \"Note Not Saved\");\r\n        }\r\n\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/m3das/biomech/design/fragments/MachineListFragment.java	(revision b65a8d4092c36b149b09627eb3ea7b43cf4e495d)
+++ app/src/main/java/com/m3das/biomech/design/fragments/MachineListFragment.java	(date 1606093652226)
@@ -74,7 +74,7 @@
                     machineList = machineList + "Machine ID: " + machines.get(i).getId();
                     machineList = machineList + "\nMachine QR Code: " + machines.get(i).getMachine_qrcode();
                     machineList = machineList + "\nRespondent Name: " + machines.get(i).getResName();
-                    machineList = machineList + "\nMachine Type: " + machines.get(i).getMachine_type()+ "\n\n";
+                    machineList = machineList + "\nMachine Type: " + machines.get(i).getMachine_type() + "\n\n";
                 }
                 Variable.setMachList(machineList);
 
@@ -180,7 +180,7 @@
 
                 AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());
                 builder.setTitle("Deleting Item")
-                        .setMessage("You will be deleting this: "+ machineAdapter.getMachineAt(viewHolder.getAdapterPosition()).getMachine_qrcode())
+                        .setMessage("You will be deleting this: " + machineAdapter.getMachineAt(viewHolder.getAdapterPosition()).getMachine_qrcode())
                         .setPositiveButton("Okay", new DialogInterface.OnClickListener() {
                             @Override
                             public void onClick(DialogInterface dialogInterface, int i) {
Index: app/src/main/java/com/m3das/biomech/design/machinedb/MachinesRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.m3das.biomech.design.machinedb;\r\n\r\nimport android.app.Application;\r\nimport android.os.AsyncTask;\r\n\r\nimport androidx.lifecycle.LiveData;\r\n\r\nimport java.util.List;\r\n\r\npublic class MachinesRepository {\r\n    private final MachinesDAO machinesDAO;\r\n    private final LiveData<List<Machines>> allMachines;\r\n    String idOfMachine;\r\n\r\n    public MachinesRepository(Application application) {\r\n        MachinesDatabase database = MachinesDatabase.getInstance(application);\r\n        machinesDAO = database.machinesDAO();\r\n        allMachines = machinesDAO.getAllMachines();\r\n    }\r\n\r\n    public void insert(Machines machines) {\r\n        new InsertMachineAsyncTask(machinesDAO).execute(machines);\r\n    }\r\n\r\n    public void update(Machines machines) {\r\n        new UpdateMachineAsyncTask(machinesDAO).execute(machines);\r\n    }\r\n\r\n    public void delete(Machines machines) {\r\n        new DeleteMachineAsyncTask(machinesDAO).execute(machines);\r\n    }\r\n\r\n    public LiveData<List<Machines>> getAllMachines() {\r\n        return allMachines;\r\n    }\r\n\r\n\r\n    public static class InsertMachineAsyncTask extends AsyncTask<Machines, Void, Void> {\r\n        private final MachinesDAO machinesDAO;\r\n\r\n        private InsertMachineAsyncTask(MachinesDAO machinesDAO) {\r\n            this.machinesDAO = machinesDAO;\r\n        }\r\n\r\n        @Override\r\n        protected Void doInBackground(Machines... machines) {\r\n            machinesDAO.insertMachine(machines[0]);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public static class UpdateMachineAsyncTask extends AsyncTask<Machines, Void, Void> {\r\n        private final MachinesDAO machinesDAO;\r\n\r\n        private UpdateMachineAsyncTask(MachinesDAO machinesDAO) {\r\n            this.machinesDAO = machinesDAO;\r\n        }\r\n\r\n        @Override\r\n        protected Void doInBackground(Machines... machines) {\r\n            machinesDAO.updateMachine(machines[0]);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public static class DeleteMachineAsyncTask extends AsyncTask<Machines, Void, Void> {\r\n        private final MachinesDAO machinesDAO;\r\n\r\n        private DeleteMachineAsyncTask(MachinesDAO machinesDAO) {\r\n            this.machinesDAO = machinesDAO;\r\n        }\r\n\r\n        @Override\r\n        protected Void doInBackground(Machines... machines) {\r\n            machinesDAO.deleteMachine(machines[0]);\r\n            return null;\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/m3das/biomech/design/machinedb/MachinesRepository.java	(revision b65a8d4092c36b149b09627eb3ea7b43cf4e495d)
+++ app/src/main/java/com/m3das/biomech/design/machinedb/MachinesRepository.java	(date 1605575259322)
@@ -30,6 +30,10 @@
         new DeleteMachineAsyncTask(machinesDAO).execute(machines);
     }
 
+    public void deleteAllMachines() {
+        new DeleteAllMachinesAsyncTask(machinesDAO).execute();
+    }
+
     public LiveData<List<Machines>> getAllMachines() {
         return allMachines;
     }
@@ -76,5 +80,18 @@
             return null;
         }
     }
+
+    private static class DeleteAllMachinesAsyncTask extends AsyncTask<Void, Void, Void> {
+        private MachinesDAO machinesDAO;
+
+        private DeleteAllMachinesAsyncTask(MachinesDAO machinesDAO) {
+            this.machinesDAO = machinesDAO;
+        }
+        @Override
+        protected Void doInBackground(Void... voids) {
+            machinesDAO.deleteAllMachines();
+            return null;
+        }
+    }
 
 }
Index: app/src/main/java/com/m3das/biomech/design/machinedb/MachinesDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.m3das.biomech.design.machinedb;\r\n\r\nimport androidx.lifecycle.LiveData;\r\nimport androidx.room.Dao;\r\nimport androidx.room.Delete;\r\nimport androidx.room.Insert;\r\nimport androidx.room.Query;\r\nimport androidx.room.Update;\r\n\r\nimport java.util.List;\r\n\r\n@Dao\r\npublic interface MachinesDAO {\r\n\r\n    @Insert\r\n    void insertMachine(Machines machines);\r\n\r\n    @Update\r\n    void updateMachine(Machines machines);\r\n\r\n    @Delete\r\n    void deleteMachine(Machines machines);\r\n\r\n    @Query(\"SELECT * FROM machines ORDER BY id DESC\")\r\n    LiveData<List<Machines>> getAllMachines();\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/m3das/biomech/design/machinedb/MachinesDAO.java	(revision b65a8d4092c36b149b09627eb3ea7b43cf4e495d)
+++ app/src/main/java/com/m3das/biomech/design/machinedb/MachinesDAO.java	(date 1605574577580)
@@ -25,4 +25,6 @@
     LiveData<List<Machines>> getAllMachines();
 
 
+    @Query("DELETE FROM machines")
+    void deleteAllMachines();
 }
Index: app/src/main/java/com/m3das/biomech/design/profiledb/ProfileRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.m3das.biomech.design.profiledb;\r\n\r\nimport android.app.Application;\r\nimport android.os.AsyncTask;\r\n\r\nimport androidx.lifecycle.LiveData;\r\n\r\nimport java.util.List;\r\n\r\npublic class ProfileRepository {\r\n    private final ProfileDAO profileDAO;\r\n    private final LiveData<List<Profile>> allProfileNames;\r\n\r\n    public ProfileRepository(Application application) {\r\n        ProfileDatabase database = ProfileDatabase.getInstance(application);\r\n        profileDAO = database.profileDAO();\r\n        allProfileNames = profileDAO.getAllProfiles();\r\n    }\r\n\r\n    public void insert(Profile profile) {\r\n        new ProfileRepository.InsertProfileAsyncTask(profileDAO).execute(profile);\r\n    }\r\n\r\n    public void update(Profile profile) {\r\n        new ProfileRepository.UpdateProfileAsyncTask(profileDAO).execute(profile);\r\n    }\r\n\r\n    public void delete(Profile profile) {\r\n        new ProfileRepository.DeleteProfileAsyncTask(profileDAO).execute(profile);\r\n    }\r\n\r\n    public LiveData<List<Profile>> getAllUserNames(){\r\n        return allProfileNames;\r\n    }\r\n\r\n\r\n    public static class InsertProfileAsyncTask extends AsyncTask<Profile, Void, Void> {\r\n        private final ProfileDAO profileDAO;\r\n\r\n        private InsertProfileAsyncTask(ProfileDAO profileDAO) {\r\n            this.profileDAO = profileDAO;\r\n        }\r\n\r\n        @Override\r\n        protected Void doInBackground(Profile... profile) {\r\n            profileDAO.insertProfile(profile[0]);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public static class UpdateProfileAsyncTask extends AsyncTask<Profile, Void, Void> {\r\n        private final ProfileDAO profileDAO;\r\n\r\n        private UpdateProfileAsyncTask(ProfileDAO profileDAO) {\r\n            this.profileDAO = profileDAO;\r\n        }\r\n\r\n        @Override\r\n        protected Void doInBackground(Profile... profile) {\r\n            profileDAO.updateProfile(profile[0]);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public static class DeleteProfileAsyncTask extends AsyncTask<Profile, Void, Void> {\r\n        private final ProfileDAO profileDAO;\r\n\r\n        private DeleteProfileAsyncTask(ProfileDAO profileDAO) {\r\n            this.profileDAO = profileDAO;\r\n        }\r\n\r\n        @Override\r\n        protected Void doInBackground(Profile... profile) {\r\n            profileDAO.deleteProfile(profile[0]);\r\n            return null;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/m3das/biomech/design/profiledb/ProfileRepository.java	(revision b65a8d4092c36b149b09627eb3ea7b43cf4e495d)
+++ app/src/main/java/com/m3das/biomech/design/profiledb/ProfileRepository.java	(date 1605578138840)
@@ -5,6 +5,9 @@
 
 import androidx.lifecycle.LiveData;
 
+import com.m3das.biomech.design.machinedb.MachinesDAO;
+import com.m3das.biomech.design.machinedb.MachinesRepository;
+
 import java.util.List;
 
 public class ProfileRepository {
@@ -29,6 +32,10 @@
         new ProfileRepository.DeleteProfileAsyncTask(profileDAO).execute(profile);
     }
 
+    public void deleteAllProfiles() {
+        new DeleteAllProfilesAsyncTask(profileDAO).execute();
+    }
+
     public LiveData<List<Profile>> getAllUserNames(){
         return allProfileNames;
     }
@@ -75,4 +82,17 @@
             return null;
         }
     }
+
+    private static class DeleteAllProfilesAsyncTask extends AsyncTask<Void, Void, Void> {
+        private ProfileDAO profileDAO;
+
+        private DeleteAllProfilesAsyncTask(ProfileDAO profileDAO) {
+            this.profileDAO = profileDAO;
+        }
+        @Override
+        protected Void doInBackground(Void... voids) {
+            profileDAO.deleteAllProfiles();
+            return null;
+        }
+    }
 }
Index: app/src/main/java/com/m3das/biomech/design/profiledb/ProfileDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.m3das.biomech.design.profiledb;\r\n\r\nimport androidx.lifecycle.LiveData;\r\nimport androidx.room.Dao;\r\nimport androidx.room.Delete;\r\nimport androidx.room.Insert;\r\nimport androidx.room.Query;\r\nimport androidx.room.Update;\r\n\r\nimport java.util.List;\r\n\r\n@Dao\r\npublic interface ProfileDAO {\r\n\r\n    @Insert\r\n    void insertProfile(Profile profile);\r\n\r\n    @Update\r\n    void updateProfile(Profile profile);\r\n\r\n    @Delete\r\n    void deleteProfile(Profile profile);\r\n\r\n    @Query(\"SELECT * FROM respondent_profile ORDER BY id DESC\")\r\n    LiveData<List<Profile>> getAllProfiles();\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/m3das/biomech/design/profiledb/ProfileDAO.java	(revision b65a8d4092c36b149b09627eb3ea7b43cf4e495d)
+++ app/src/main/java/com/m3das/biomech/design/profiledb/ProfileDAO.java	(date 1605575994166)
@@ -24,5 +24,7 @@
     @Query("SELECT * FROM respondent_profile ORDER BY id DESC")
     LiveData<List<Profile>> getAllProfiles();
 
+    @Query("DELETE FROM respondent_profile")
+    void deleteAllProfiles();
 
 }
Index: app/src/main/java/com/m3das/biomech/design/viewmodels/ImplementViewModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.m3das.biomech.design.viewmodels;\r\n\r\nimport android.app.Application;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.lifecycle.AndroidViewModel;\r\nimport androidx.lifecycle.LiveData;\r\n\r\nimport com.m3das.biomech.design.implementdb.Implements;\r\nimport com.m3das.biomech.design.implementdb.ImplementsRepository;\r\nimport com.m3das.biomech.design.machinedb.Machines;\r\nimport com.m3das.biomech.design.machinedb.MachinesRepository;\r\n\r\nimport java.util.List;\r\n\r\npublic class ImplementViewModel extends AndroidViewModel {\r\n    public ImplementsRepository repositoryImplements;\r\n    public LiveData<List<Implements>> listOfImplements;\r\n\r\n    public ImplementViewModel(@NonNull Application application) {\r\n        super(application);\r\n        repositoryImplements = new ImplementsRepository(application);\r\n        listOfImplements = repositoryImplements.getAllImplements();\r\n    }\r\n\r\n    public LiveData<List<Implements>> getListOfMachines(){\r\n        return listOfImplements;\r\n    }\r\n    public void insert(Implements imp) {\r\n        repositoryImplements.insert(imp);\r\n    }\r\n\r\n    public void update(Implements imp) {\r\n        repositoryImplements.update(imp);\r\n    }\r\n\r\n    public void delete(Implements imp) {\r\n        repositoryImplements.delete(imp);\r\n    }\r\n\r\n    public LiveData<List<Implements>> getAllImplements() {\r\n        return listOfImplements;\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/m3das/biomech/design/viewmodels/ImplementViewModel.java	(revision b65a8d4092c36b149b09627eb3ea7b43cf4e495d)
+++ app/src/main/java/com/m3das/biomech/design/viewmodels/ImplementViewModel.java	(date 1605576239392)
@@ -38,6 +38,10 @@
         repositoryImplements.delete(imp);
     }
 
+    public void deleteAllImplements() {
+        repositoryImplements.deleteAllImplements();
+    }
+
     public LiveData<List<Implements>> getAllImplements() {
         return listOfImplements;
     }
Index: app/src/main/res/layout/implement_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.cardview.widget.CardView xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvImplmentQRCodeItem\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"R06ILOM00001\"\r\n            android:textAlignment=\"center\"\r\n            android:textAppearance=\"@style/TextAppearance.AppCompat.Large\"\r\n            android:textColor=\"#0D47A1\"\r\n            app:layout_constraintBottom_toTopOf=\"@+id/tvImplementLatLongItem\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toEndOf=\"@+id/tvImplementTypeItem\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvImplementTypeItem\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_toStartOf=\"@+id/tvMacineQRCodeItem\"\r\n            android:ellipsize=\"end\"\r\n            android:maxLines=\"2\"\r\n            android:text=\"COMBINE-HARVESTER\"\r\n            android:textAppearance=\"@style/TextAppearance.AppCompat.Large\"\r\n            app:layout_constraintEnd_toStartOf=\"@id/tvImplmentQRCodeItem\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvImplementLatLongItem\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:maxLines=\"1\"\r\n            android:text=\"LatLong\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/tvImplementTypeItem\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvAttachedTo\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"Attahed to Machine:\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/tvImplementLatLongItem\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvAttachedToMachineItem\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"16dp\"\r\n            android:text=\"Attached to Machine\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toEndOf=\"@+id/tvAttachedTo\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/tvImplementLatLongItem\" />\r\n\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n</androidx.cardview.widget.CardView>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/implement_item.xml	(revision b65a8d4092c36b149b09627eb3ea7b43cf4e495d)
+++ app/src/main/res/layout/implement_item.xml	(date 1605577008139)
@@ -2,7 +2,9 @@
 <androidx.cardview.widget.CardView xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     android:layout_width="match_parent"
-    android:layout_height="match_parent">
+    android:layout_height="wrap_content"
+    app:layout_goneMarginStart="8dp"
+    android:layout_marginTop="8dp">
 
     <androidx.constraintlayout.widget.ConstraintLayout
         android:layout_width="match_parent"
Index: app/src/main/java/com/m3das/biomech/design/viewmodels/MapViewModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.m3das.biomech.design.viewmodels;\r\n\r\nimport androidx.lifecycle.ViewModel;\r\n\r\npublic class MapViewModel extends ViewModel {\r\n    // TODO: Implement the ViewModel\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/m3das/biomech/design/viewmodels/MapViewModel.java	(revision b65a8d4092c36b149b09627eb3ea7b43cf4e495d)
+++ app/src/main/java/com/m3das/biomech/design/viewmodels/MapViewModel.java	(date 1605287415892)
@@ -3,5 +3,4 @@
 import androidx.lifecycle.ViewModel;
 
 public class MapViewModel extends ViewModel {
-    // TODO: Implement the ViewModel
 }
\ No newline at end of file
Index: app/src/main/java/com/m3das/biomech/design/viewmodels/ProfileViewModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.m3das.biomech.design.viewmodels;\r\n\r\nimport android.app.Application;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.lifecycle.AndroidViewModel;\r\nimport androidx.lifecycle.LiveData;\r\nimport androidx.lifecycle.ViewModel;\r\n\r\nimport com.m3das.biomech.design.machinedb.Machines;\r\nimport com.m3das.biomech.design.machinedb.MachinesRepository;\r\nimport com.m3das.biomech.design.profiledb.Profile;\r\nimport com.m3das.biomech.design.profiledb.ProfileRepository;\r\n\r\nimport java.util.List;\r\n\r\npublic class ProfileViewModel extends AndroidViewModel {\r\n    // TODO: Implement the ViewModel\r\n    public ProfileRepository repositoryProfile;\r\n    public LiveData<List<Profile>> allProfileNames;\r\n\r\n\r\n    public ProfileViewModel(@NonNull Application application) {\r\n        super(application);\r\n        repositoryProfile = new ProfileRepository(application);\r\n        allProfileNames = repositoryProfile.getAllUserNames();\r\n    }\r\n\r\n    public void insert(Profile profile) {\r\n        repositoryProfile.insert(profile);\r\n    }\r\n\r\n    public void update(Profile profile) {\r\n        repositoryProfile.update(profile);\r\n    }\r\n\r\n    public void delete(Profile profile) {\r\n        repositoryProfile.delete(profile);\r\n    }\r\n\r\n    public LiveData<List<Profile>> getAllProfiles() {\r\n        return allProfileNames;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/m3das/biomech/design/viewmodels/ProfileViewModel.java	(revision b65a8d4092c36b149b09627eb3ea7b43cf4e495d)
+++ app/src/main/java/com/m3das/biomech/design/viewmodels/ProfileViewModel.java	(date 1605578319050)
@@ -38,6 +38,10 @@
         repositoryProfile.delete(profile);
     }
 
+    public void deleteAllProfiles() {
+        repositoryProfile.deleteAllProfiles();
+    }
+
     public LiveData<List<Profile>> getAllProfiles() {
         return allProfileNames;
     }
Index: app/src/main/java/com/m3das/biomech/design/viewmodels/MachineListViewModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.m3das.biomech.design.viewmodels;\r\n\r\nimport android.app.Application;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.lifecycle.AndroidViewModel;\r\nimport androidx.lifecycle.LiveData;\r\n\r\n\r\nimport com.m3das.biomech.design.machinedb.Machines;\r\nimport com.m3das.biomech.design.machinedb.MachinesRepository;\r\nimport com.m3das.biomech.design.profiledb.Profile;\r\nimport com.m3das.biomech.design.profiledb.ProfileRepository;\r\n\r\nimport java.util.List;\r\n\r\npublic class MachineListViewModel extends AndroidViewModel {\r\n    // TODO: Implement the ViewModel\r\n    public MachinesRepository repositoryMachines;\r\n    public LiveData<List<Machines>> allMachines;\r\n\r\n    public LiveData<List<Profile>> allProfiles;\r\n\r\n\r\n    public MachineListViewModel(@NonNull Application application) {\r\n        super(application);\r\n        repositoryMachines = new MachinesRepository(application);\r\n        allMachines = repositoryMachines.getAllMachines();\r\n\r\n        ProfileRepository repositoryProfiles = new ProfileRepository(application);\r\n        allProfiles = repositoryProfiles.getAllUserNames();\r\n\r\n    }\r\n\r\n    public void insert(Machines machines) {\r\n        repositoryMachines.insert(machines);\r\n    }\r\n\r\n    public void update(Machines machines) {\r\n        repositoryMachines.update(machines);\r\n    }\r\n\r\n    public void delete(Machines machines) {\r\n        repositoryMachines.delete(machines);\r\n    }\r\n\r\n    public LiveData<List<Machines>> getAllMachines() {\r\n        return allMachines;\r\n    }\r\n\r\n    public LiveData<List<Profile>> getAllProfiles() {\r\n        return allProfiles;\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/m3das/biomech/design/viewmodels/MachineListViewModel.java	(revision b65a8d4092c36b149b09627eb3ea7b43cf4e495d)
+++ app/src/main/java/com/m3das/biomech/design/viewmodels/MachineListViewModel.java	(date 1605575079378)
@@ -15,7 +15,6 @@
 import java.util.List;
 
 public class MachineListViewModel extends AndroidViewModel {
-    // TODO: Implement the ViewModel
     public MachinesRepository repositoryMachines;
     public LiveData<List<Machines>> allMachines;
 
@@ -44,6 +43,10 @@
         repositoryMachines.delete(machines);
     }
 
+    public void deleteAllMachines(){
+        repositoryMachines.deleteAllMachines();
+    }
+
     public LiveData<List<Machines>> getAllMachines() {
         return allMachines;
     }
Index: app/src/main/java/com/m3das/biomech/design/uploadtoserver/MachinesApi.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.m3das.biomech.design.uploadtoserver;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.http.Field;\r\nimport retrofit2.http.FormUrlEncoded;\r\nimport retrofit2.http.POST;\r\n\r\npublic interface MachinesApi {\r\n    @FormUrlEncoded\r\n    @POST(\"upload_machines.php\")\r\n    Call<ResponsePojo> uploadMachines(\r\n            @Field(\"machineTypePost\") String machineType,\r\n            @Field(\"typeTubewellsPost\") String typeTubewells,\r\n            @Field(\"typeMillPost\") String typeMill,\r\n            @Field(\"machineQRCodePost\") String machineQRCode,\r\n            @Field(\"dateSurveyPost\")String dateSurvey,\r\n            @Field(\"machineBrandPost\")String machineBrand,\r\n            @Field(\"machineBrandSpecifyPost\")String machineBrandSpecify,\r\n            @Field(\"machineModelPost\")String machineModel,\r\n            @Field(\"machineModelSpecifyPost\")String machineModelSpecify,\r\n            @Field(\"ratedPowerPost\")String ratedPower,\r\n            @Field(\"serviceAreaPost\")String serviceArea,\r\n            @Field(\"averageOperatingHoursPost\")String aveOpHours,\r\n            @Field(\"averageOperatingDaysPost\")String aveOpDays,\r\n            @Field(\"capacityPost\")String capacity,\r\n            @Field(\"averageYieldPost\")String averageYield,\r\n            @Field(\"numberOfLoadsPost\")String numberLoads,\r\n            @Field(\"ratePost\")String rate,\r\n            @Field(\"ownershipPost\")String ownership,\r\n            @Field(\"purchGrantDonoPost\")String purchGrantDono,\r\n            @Field(\"agencyPost\")String agency,\r\n            @Field(\"agencySpecifyPost\")String agencySpecify,\r\n            @Field(\"nameOfOwnerOrganizationPost\")String nameOwnerOraganization,\r\n            @Field(\"yearAcquiredPost\")String yearAcquired,\r\n            @Field(\"conditionAcquiredPost\")String conditionAcquired,\r\n            @Field(\"rentalPost\")String rental,\r\n            @Field(\"customRatePost\")String customRate,\r\n            @Field(\"customUnitPost\")String customUnit,\r\n            @Field(\"customUnitSpecifyPost\")String customUnitSpecify,\r\n            @Field(\"availabilityPost\")String availability,\r\n            @Field(\"rentProvincePost\")String rentProv,\r\n            @Field(\"rentMunicipalityPost\")String rentMun,\r\n            @Field(\"rentBarangayPost\")String rentBrgy,\r\n            @Field(\"conditionPost\")String condition,\r\n            @Field(\"problemsPost\")String problems,\r\n            @Field(\"problemsSpecifyPost\")String problemsSpecify,\r\n            @Field(\"locationPost\")String location,\r\n            @Field(\"provincePost\")String prov,\r\n            @Field(\"municipalityPost\")String mun,\r\n            @Field(\"barangayPost\")String brgy,\r\n            @Field(\"latitudePost\")String latitude,\r\n            @Field(\"longitudePost\")String longitude,\r\n            @Field(\"imageBase64Post\")String imagebase64,\r\n            @Field(\"accuracyPost\")String accuracy,\r\n            @Field(\"respondentCodePost\")String resCode,\r\n            @Field(\"respondentNamePost\")String resName\r\n    );\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/m3das/biomech/design/uploadtoserver/MachinesApi.java	(revision b65a8d4092c36b149b09627eb3ea7b43cf4e495d)
+++ app/src/main/java/com/m3das/biomech/design/uploadtoserver/MachinesApi.java	(date 1605581245594)
@@ -53,7 +53,8 @@
             @Field("imageBase64Post")String imagebase64,
             @Field("accuracyPost")String accuracy,
             @Field("respondentCodePost")String resCode,
-            @Field("respondentNamePost")String resName
+            @Field("respondentNamePost")String resName,
+            @Field("enumeratorCodePost")String enumCode
     );
 
 }
Index: app/src/main/java/com/m3das/biomech/design/implementdb/ImplementsDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.m3das.biomech.design.implementdb;\r\n\r\nimport androidx.lifecycle.LiveData;\r\nimport androidx.room.Dao;\r\nimport androidx.room.Delete;\r\nimport androidx.room.Insert;\r\nimport androidx.room.Query;\r\nimport androidx.room.Update;\r\n\r\n\r\nimport java.util.List;\r\n@Dao\r\npublic interface ImplementsDAO {\r\n\r\n\r\n        @Insert\r\n        void insertImplement(Implements implement);\r\n\r\n        @Update\r\n        void updateImplement(Implements implement);\r\n\r\n        @Delete\r\n        void deleteImplements(Implements implement);\r\n\r\n        @Query(\"SELECT * FROM implement ORDER BY id DESC\")\r\n        LiveData<List<Implements>> getAllImplements();\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/m3das/biomech/design/implementdb/ImplementsDAO.java	(revision b65a8d4092c36b149b09627eb3ea7b43cf4e495d)
+++ app/src/main/java/com/m3das/biomech/design/implementdb/ImplementsDAO.java	(date 1605575816463)
@@ -25,5 +25,7 @@
         @Query("SELECT * FROM implement ORDER BY id DESC")
         LiveData<List<Implements>> getAllImplements();
 
+        @Query("DELETE FROM implement")
+        void deleteAllImplements();
 
 }
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.m3das.biomech.design\">\r\n    <!--\r\n         The ACCESS_COARSE/FINE_LOCATION permissions are not required to use\r\n         Google Maps Android API v2, but you must specify either coarse or fine\r\n         location permissions for the \"MyLocation\" functionality.\r\n    -->\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\r\n    <uses-permission android:name=\"android.permission.CAMERA\" />\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/AppTheme\"\r\n        android:usesCleartextTraffic=\"true\">\r\n        <activity android:name=\".ViewImplements\"></activity>\r\n        <activity android:name=\".ViewMachines\" />\r\n        <activity android:name=\".AddProfile\" />\r\n        <activity android:name=\".CropSelectActivity\" />\r\n        <activity android:name=\".PrivacyAndConsentActivity\" />\r\n        <activity android:name=\".MainActivity\" />\r\n        <activity android:name=\".AddImplementActivity\" />\r\n        <!--\r\n             The API key for Google Maps-based APIs is defined as a string resource.\r\n             (See the file \"res/values/google_maps_api.xml\").\r\n             Note that the API key is linked to the encryption key used to sign the APK.\r\n             You need a different API key for each encryption key, including the release key that is used to\r\n             sign the APK for publishing.\r\n             You can define the keys for the debug and release targets in src/debug/ and src/release/.\r\n        -->\r\n        <meta-data\r\n            android:name=\"com.google.android.geo.API_KEY\"\r\n            android:value=\"@string/google_maps_key\" />\r\n\r\n        <activity\r\n            android:name=\".LocationMapsActivity\"\r\n            android:label=\"@string/title_activity_location_maps\" />\r\n        <activity android:name=\".AddMachineActivity\" />\r\n        <activity android:name=\".ViewDataActivity\" />\r\n        <activity\r\n            android:name=\".ScanBarcodeActivity\"\r\n            android:label=\"Scan QR Code\" />\r\n        <activity\r\n            android:name=\".LauncherMain\"\r\n            android:launchMode=\"singleTop\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n\r\n        <meta-data\r\n            android:name=\"com.google.android.gms.vision\"\r\n            android:value=\"@integer/google_play_services_version\" />\r\n        <meta-data\r\n            android:name=\"com.google.android.gms.vision.DEPENDENCIES\"\r\n            android:value=\"barcode\" />\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision b65a8d4092c36b149b09627eb3ea7b43cf4e495d)
+++ app/src/main/AndroidManifest.xml	(date 1606094197982)
@@ -1,13 +1,20 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     package="com.m3das.biomech.design">
+
     <!--
          The ACCESS_COARSE/FINE_LOCATION permissions are not required to use
          Google Maps Android API v2, but you must specify either coarse or fine
          location permissions for the "MyLocation" functionality.
     -->
-    <uses-permission android:name="android.permission.INTERNET" />
     <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
+
+    <!--
+         The ACCESS_COARSE/FINE_LOCATION permissions are not required to use
+         Google Maps Android API v2, but you must specify either coarse or fine
+         location permissions for the "MyLocation" functionality.
+    -->
+    <uses-permission android:name="android.permission.INTERNET" />
     <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
     <uses-permission android:name="android.permission.CAMERA" />
     <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
@@ -21,13 +28,7 @@
         android:supportsRtl="true"
         android:theme="@style/AppTheme"
         android:usesCleartextTraffic="true">
-        <activity android:name=".ViewImplements"></activity>
-        <activity android:name=".ViewMachines" />
-        <activity android:name=".AddProfile" />
-        <activity android:name=".CropSelectActivity" />
-        <activity android:name=".PrivacyAndConsentActivity" />
-        <activity android:name=".MainActivity" />
-        <activity android:name=".AddImplementActivity" />
+
         <!--
              The API key for Google Maps-based APIs is defined as a string resource.
              (See the file "res/values/google_maps_api.xml").
@@ -40,6 +41,13 @@
             android:name="com.google.android.geo.API_KEY"
             android:value="@string/google_maps_key" />
 
+        <activity android:name=".ViewImplements" />
+        <activity android:name=".ViewMachines" />
+        <activity android:name=".AddProfile" />
+        <activity android:name=".CropSelectActivity" />
+        <activity android:name=".PrivacyAndConsentActivity" />
+        <activity android:name=".MainActivity" />
+        <activity android:name=".AddImplementActivity" />
         <activity
             android:name=".LocationMapsActivity"
             android:label="@string/title_activity_location_maps" />
Index: app/src/main/java/com/m3das/biomech/design/implementdb/ImplementsRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.m3das.biomech.design.implementdb;\r\n\r\nimport android.app.Application;\r\nimport android.os.AsyncTask;\r\n\r\nimport androidx.lifecycle.LiveData;\r\n\r\n\r\nimport java.util.List;\r\n\r\npublic class ImplementsRepository {\r\n    private final ImplementsDAO impDAO;\r\n    private final LiveData<List<Implements>> allImplements;\r\n\r\n\r\n    public ImplementsRepository(Application application) {\r\n        ImplementDatabase database = ImplementDatabase.getInstance(application);\r\n        impDAO = database.implementsDAO();\r\n        allImplements = impDAO.getAllImplements();\r\n    }\r\n\r\n    public void insert(Implements imp) {\r\n        new InsertImplementAsyncTask(impDAO).execute(imp);\r\n    }\r\n\r\n    public void update(Implements imp) {\r\n        new UpdateImplementAsyncTask(impDAO).execute(imp);\r\n    }\r\n\r\n    public void delete(Implements imp) {\r\n        new DeleteImplementAsyncTask(impDAO).execute(imp);\r\n    }\r\n\r\n    public LiveData<List<Implements>> getAllImplements() {\r\n        return allImplements;\r\n    }\r\n\r\n\r\n    public static class InsertImplementAsyncTask extends AsyncTask<Implements, Void, Void> {\r\n        private final ImplementsDAO impDAO;\r\n\r\n        private InsertImplementAsyncTask(ImplementsDAO impDAO) {\r\n            this.impDAO = impDAO;\r\n        }\r\n\r\n        @Override\r\n        protected Void doInBackground(Implements... implement) {\r\n            impDAO.insertImplement(implement[0]);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public static class UpdateImplementAsyncTask extends AsyncTask<Implements, Void, Void> {\r\n        private final ImplementsDAO impDAO;\r\n\r\n        private UpdateImplementAsyncTask(ImplementsDAO impDAO) {\r\n            this.impDAO = impDAO;\r\n        }\r\n\r\n        @Override\r\n        protected Void doInBackground(Implements... implement) {\r\n            impDAO.updateImplement(implement[0]);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public static class DeleteImplementAsyncTask extends AsyncTask<Implements, Void, Void> {\r\n        private final ImplementsDAO impDAO;\r\n\r\n        private DeleteImplementAsyncTask(ImplementsDAO impDAO) {\r\n            this.impDAO = impDAO;\r\n        }\r\n\r\n        @Override\r\n        protected Void doInBackground(Implements... implement) {\r\n            impDAO.deleteImplements(implement[0]);\r\n            return null;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/m3das/biomech/design/implementdb/ImplementsRepository.java	(revision b65a8d4092c36b149b09627eb3ea7b43cf4e495d)
+++ app/src/main/java/com/m3das/biomech/design/implementdb/ImplementsRepository.java	(date 1605578172227)
@@ -6,6 +6,9 @@
 import androidx.lifecycle.LiveData;
 
 
+import com.m3das.biomech.design.machinedb.MachinesDAO;
+import com.m3das.biomech.design.machinedb.MachinesRepository;
+
 import java.util.List;
 
 public class ImplementsRepository {
@@ -31,6 +34,10 @@
         new DeleteImplementAsyncTask(impDAO).execute(imp);
     }
 
+    public void deleteAllImplements() {
+        new DeleteAllImplementsAsyncTask(impDAO).execute();
+    }
+
     public LiveData<List<Implements>> getAllImplements() {
         return allImplements;
     }
@@ -77,4 +84,17 @@
             return null;
         }
     }
+
+    private static class DeleteAllImplementsAsyncTask extends AsyncTask<Void, Void, Void> {
+        private ImplementsDAO implementsDAO;
+
+        private DeleteAllImplementsAsyncTask(ImplementsDAO implementsDAO) {
+            this.implementsDAO = implementsDAO;
+        }
+        @Override
+        protected Void doInBackground(Void... voids) {
+            implementsDAO.deleteAllImplements();
+            return null;
+        }
+    }
 }
